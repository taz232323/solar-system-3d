{"version":3,"sources":["node_modules/three/build/three.core.js","node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","app.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_readOnlyError","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","TimestampQuery","COMPUTE","RENDER","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","isPerspectiveMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","colorSpaces","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","_defineProperty","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this2","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","_RenderTarget","_this3","isWebGLRenderTarget","DataArrayTexture","_Texture","_this4","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this7","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this8","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","getInterpolatedAttribute","attr","i3","barycoord","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","concat","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this9","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","_Material","_this10","isMeshBasicMaterial","_superPropGet","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","_id$2","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this11","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this12","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this13","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this14","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this15","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this16","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this17","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_this18","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this19","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this20","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","Group","_Object3D4","_this21","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator3","_step3","inputjoint","_getHandJoint","disconnect","frame","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator4","_step4","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","FogExp2","density","isFogExp2","Fog","isFog","Scene","_Object3D5","_this22","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","_Material3","_this23","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this24","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this25","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this26","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","_Object3D8","_this27","isBone","DataTexture","_Texture4","_this28","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this29","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","_Mesh2","_this30","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","_Mesh3","_this31","customSort","_instanceInfo","_geometryInfo","_availableInstanceIds","_availableGeometryIds","_nextIndexStart","_nextVertexStart","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","atCapacity","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","hasIndex","setGeometryAt","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","requiredVertexLength","requiredIndexLength","oldGeometry","batchId","_objectSpread","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","_Material4","_this32","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D9","_this33","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this34","LineLoop","_Line2","_this35","PointsMaterial","_Material5","_this36","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this37","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture5","video","_this38","isVideoTexture","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","VideoFrameTexture","_VideoTexture","_this39","isVideoFrameTexture","setFrame","FramebufferTexture","_Texture6","_this40","isFramebufferTexture","CompressedTexture","_Texture7","_this41","isCompressedTexture","CompressedArrayTexture","_CompressedTexture","_this42","isCompressedArrayTexture","CompressedCubeTexture","_CompressedTexture2","_this43","isCompressedCubeTexture","CanvasTexture","_Texture8","_this44","isCanvasTexture","DepthTexture","_Texture9","_this45","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this46","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this47","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this48","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","k","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this49","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this50","isCubicBezierCurve3","LineCurve","_Curve5","_this51","isLineCurve","LineCurve3","_Curve6","_this52","isLineCurve3","QuadraticBezierCurve","_Curve7","_this53","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this54","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this55","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this56","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","resolution","pts","Path","_CurvePath","_this57","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry2","_this58","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this59","capSegments","radialSegments","path","CircleGeometry","_BufferGeometry3","_this60","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry4","_this61","radiusTop","radiusBottom","openEnded","halfHeight","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this62","PolyhedronGeometry","_BufferGeometry5","_this63","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this64","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry6","_this65","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","_edgeData$key","Shape","_Path","_this66","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry7","_this67","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this68","OctahedronGeometry","_PolyhedronGeometry3","_this69","PlaneGeometry","_BufferGeometry8","_this70","width_half","height_half","segment_width","segment_height","RingGeometry","_BufferGeometry9","_this71","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this72","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this73","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this74","TorusGeometry","_BufferGeometry12","_this75","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this76","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this77","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this78","edges","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","_Material6","_this79","isShadowMaterial","RawShaderMaterial","_ShaderMaterial","_this80","isRawShaderMaterial","MeshStandardMaterial","_Material7","_this81","isMeshStandardMaterial","MeshPhysicalMaterial","_MeshStandardMaterial","_this82","isMeshPhysicalMaterial","ior","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","_Material8","_this83","isMeshPhongMaterial","MeshToonMaterial","_Material9","_this84","isMeshToonMaterial","MeshNormalMaterial","_Material10","_this85","isMeshNormalMaterial","MeshLambertMaterial","_Material11","_this86","isMeshLambertMaterial","MeshDepthMaterial","_Material12","_this87","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","_Material13","_this88","isMeshDistanceMaterial","MeshMatcapMaterial","_Material14","_this89","isMeshMatcapMaterial","LineDashedMaterial","_LineBasicMaterial","_this90","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this91","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this92","_wrapNativeSuper","FileLoader","_Loader","_this93","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","_ref","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this94","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","_Light","skyColor","_this95","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","_LightShadow","_this96","isSpotLightShadow","SpotLight","_Light2","_this97","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this98","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","_Light3","_this99","isPointLight","OrthographicCamera","_Camera2","_this100","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","_LightShadow3","_this101","isDirectionalLightShadow","DirectionalLight","_Light4","_this102","isDirectionalLight","AmbientLight","_Light5","_this103","isAmbientLight","RectAreaLight","_Light6","_this104","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this105","isLightProbe","MaterialLoader","_Loader8","_this106","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","_BufferGeometry16","_this107","isInstancedBufferGeometry","instanceCount","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_asyncToGenerator","_callee","_callee$","_context8","parseAsync","_x5","_x6","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","_parseAsync","_callee2","_callee2$","_context9","parseImagesAsync","_x7","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee4","_deserializeImage","_deserializedImage2","_callee4$","_context11","_deserializeImage3","_callee3","_url","_callee3$","_context10","_deserializeImage2","_x9","_x8","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this108","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","_PerspectiveCamera","_this109","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this110","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this111","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this112","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher6","_this113","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","RenderTarget3D","_RenderTarget2","_this114","isRenderTarget3D","RenderTargetArray","_RenderTarget3","_this115","isRenderTargetArray","Uniform","_id","UniformsGroup","_EventDispatcher7","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this117","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this118","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this121","GridHelper","_LineSegments2","_this122","PolarGridHelper","_LineSegments3","_this123","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","nearZ","setPoint","_box","BoxHelper","_LineSegments5","_this126","Box3Helper","_LineSegments6","_this127","PlaneHelper","_Line3","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this129","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","Controls","_EventDispatcher8","_this131","domElement","state","mouseButtons","touches","ONE","TWO","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","revision","__THREE__","_threeCore","require","asyncGeneratorStep","_next","_throw","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","updateBuffer","bufferSubData","mergeIndex","previousRange","deleteBuffer","delete","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundCube","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMapTransform","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","WebGLBackground","cubemaps","cubeuvmaps","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","locationSize","ARRAY_BUFFER","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","reverseDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","lines","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphNormal","morphColor","disposeTexture","getUniforms","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","join","_m0","getEncodingComponents","encodingMatrix","getShaderErrors","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","getLuminanceFunction","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","decodeVideoTextureEmissive","opaque","useDepthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","getChannel","getParameters","shadows","shaderID","customVertexShaderID","customFragmentShaderID","getReversed","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","UniformsCache","halfWidth","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","shadowUniforms","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","fragment","WebGLShadowMap","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","pars","viewportCount","vp","renderObject","VSMPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","kl","shadowMaterial","reversedFuncs","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","reversed","currentDepthMask","currentDepthFunc","currentDepthClear","setReversed","ext","clipControlEXT","LOWER_LEFT_EXT","ZERO_TO_ONE_EXT","NEGATIVE_ONE_TO_ONE_EXT","oldDepth","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getTargetType","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB_INTEGER","RGB8UI","RGB16UI","RGB32UI","RGB8I","RGB16I","RGB32I","RGBA_INTEGER","RGBA8UI","RGBA16UI","RGBA32UI","RGBA8I","RGBA16I","RGBA32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","sourceProperties","workingPrimaries","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","layerByteLength","layerData","subarray","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__renderTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__boundDepthTexture","__depthDisposeCallback","disposeEvent","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","targetType","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","useLayers","layerInit","depthFormat","glDepthFormat","projectionlayerInit","xrCompatible","makeXRCompatible","getPixelRatio","XRWebGLBinding","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x2","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","gpuDepthSensingEnabled","includes","depthUsage","getDepthInformation","isValid","detectedPlanes","_e1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","refreshUniformsToon","refreshUniformsPhong","refreshUniformsStandard","refreshUniformsPhysical","refreshUniformsMatcap","refreshUniformsDistance","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsSprites","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexString","cachedObject","chunkSize","chunkOffset","chunkPadding","boundary","chunkStart","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","_parameters$reverseDe","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","_outputColorSpace","toneMappingExposure","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","transmissionResolutionScale","_currentProjectionMatrix","_vector4","_emptyScene","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","_scratchFrameBuffer","useDefaultFramebuffer","framebufferBound","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","glBuffer","currFramebuffer","PIXEL_PACK_BUFFER","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","getBufferSubData","deleteSync","_x3","_x4","copyFramebufferToTexture","levelScale","copyTexSubImage2D","_srcFramebuffer","_dstFramebuffer","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","srcLevel","dstLevel","dstX","dstY","dstZ","glTarget","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","isSrc3D","isDst3D","srcTextureProperties","dstTextureProperties","srcRenderTargetProperties","dstRenderTargetProperties","copyTexSubImage3D","copyTextureToTexture3D","initRenderTarget","resetState","drawingBufferColorspace","_three","_changeEvent","_startEvent","_endEvent","_plane","_TILT_LIMIT","_v","_twoPI","_STATE","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","_EPS","OrbitControls","_Controls","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","target0","position0","zoom0","_domElementKeyEvents","_lastPosition","_lastQuaternion","_lastTargetPosition","_quat","_quatInverse","_spherical","_sphericalDelta","_panOffset","_rotateStart","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","passive","getRootNode","capture","touchAction","stopListenToKeyEvents","getPolarAngle","getAzimuthalAngle","getDistance","listenToKeyEvents","saveState","_rotateLeft","_getAutoRotationAngle","zoomChanged","_clampDistance","prevRadius","newRadius","radiusDelta","mouseBefore","prevZoom","mouseAfter","_getZoomScale","normalizedDelta","_rotateUp","_panLeft","objectMatrix","_panUp","_pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","_dollyOut","dollyScale","_dollyIn","_updateZoomParameters","rect","getBoundingClientRect","dist","_handleMouseDownRotate","clientX","clientY","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveRotate","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_handleKeyDown","ctrlKey","metaKey","shiftKey","_handleTouchStartRotate","pageX","pageY","_getSecondPointerPosition","_handleTouchStartPan","_handleTouchStartDolly","_handleTouchStartDollyPan","_handleTouchStartDollyRotate","_handleTouchMoveRotate","_handleTouchMovePan","_handleTouchMoveDolly","centerX","centerY","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate","_addPointer","pointerId","_removePointer","_isTrackingPointer","_trackPointer","_customWheelEvent","deltaMode","newEvent","setPointerCapture","pointerType","releasePointerCapture","mouseAction","button","THREE","_interopRequireWildcard","_OrbitControls","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","innerWidth","innerHeight","appendChild","controls","ambientLight","directionalLight","mouse","tooltip","createElement","className","createPlanetOrbit","orbitRadius","planetMesh","orbitGroup","sunGeometry","sunMaterial","sun","planetsData","planetRadius","rotationSpeed","funFact","hasMoon","hasRings","textureLoader","planetOrbits","hoverablePlanets","planetData","speed","moonGeometry","moonTexture","moonMaterial","moonMesh","moonOrbit","ringGeometry","ringMaterial","ringMesh","animationActive","clock","animate","intersected","innerHTML","onClick","showGifOverlay","gifOverlay","getElementById","zIndex","backgroundColor","padding","borderRadius"],"mappings":"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,MG8DN;EACbszL,AH/DqBrzL,EEkDvBsiB,IFlD6B,CEkD7B,CFlD+B,AEkD1BgmK,CFlD2B,EG+DnB,EAAE,CDbJ,CCaM,EDbH,IAAIh6J,cAAO,CAAC,CAAC;ECczBslK,AHhEgC3zL,KAAK,EAAE,CAAC,IGgE5B,EAAE,GAAG;EACjB8d,AHjE0C7d,EEoD5C,GCaO,CHjE2C,CGiEzC,CHjE2C,CAAC,MGiEpC;EACf2zL,AHlEqD1zL,EEqDvDmiB,GFrD4D,EAAE,AEqD9D,CFrD+D,AEqD1DimK,KCaU,EAAE,IDbD,CCaM,EDbH,CAAC;ECclBuL,AHnE+D1zL,EEsDjEkiB,CFtDoE,EAAE,EGmE7D,ADbT,CAAK4tF,CCaM,UDbK,GAAGz+E,QAAQ;ACc3B,AHpEwE,CGoEvE,AHpEwE,EGqEzE;AHpEF,EGqEI5zB,EHrEEwC,AEuDJ,ECcM,EAAE,CHrEC,GAAAR,GGqEM,IHrEN,CAAAQ,KAAA,GAAG;EGsEVgzL,AHtEYnzL,EEwDdoiB,IFxDoB,CEwDpB,CFxDsB,AEwDjBkmK,CFxDkB,EGsEV,EAAE,EAAE,ADdL,GAAG,CAAC;ECedoL,AHvEuBxzL,EEyDzBkiB,CFzD4B,EAAE,CAAC,CEyD/B,CAAKmmK,ICcS,EAAE,CAAC,ADdL,GAAGh3J,QAAQ;ECerB1T,AHxE+Bzd,KGwE1B,EAAE,EHxEiC,EGwE7B,AHxE+B,CAAC;EGyE3CuzL,AHzE6CtzL,EE2D/C,UF3D2D,CGyE5C,CHzE8C,CGyE5C,IAAI;AHzE0C,CAAC,CG0E9DqnB,EDdFtF,KCcS,ADdT,CAAKomK,CCcM,cDdS,GAAG,CAAC,mDCcwD;AHzElF,EG0EIoL,EH1EEtzL,AE4DJ8hB,KCcS,ADdT,CAAKqmK,CCcM,KH1EK,GAAA9oL,ME4DI,CF5DJ,CAAAW,CE4DOixB,QAAQ,GF5Df,GAAG,CAAC,8BG0EqD;AHzE3E,EG0EIsiK,EH1EEtzL,KG0EK,EAAE,KH1EK,GAAAZ,OAAA,CAAAY,YAAA,GAAG,CAAC;AG2EpB,AH1EF,CG0EG,EACD,CH3EIC,AE4DJ,aF5DiB,GAAAb,OAAA,CAAAa,aAAA,GAAG,CAAC;AACvB,EG2EI7C,EH3EE8C,AE4DJ,ECeM,EAAE,MAAM,OH3EO,GAAAd,OAAA,CAAAc,iBAAA,GAAG,CAAC;AAC3B,EG2EI0yL,EH3EEzyL,AE4DJ0hB,KAAA,CAAKsmK,GCeQ,EAAE,EAAE,CH3EC,GAAA/oL,EE4DA,GAAG,CAAC,CF5DJ,AE4DK,CF5DLe,AE4DM,cF5DN,GAAG,CAAC;AACxB,EG2EIgzL,EH3EE/yL,AE4DJyhB,KAAA,CAAKumK,ICeS,EAAE,AH3EA,GAAAhpL,CG2EI,GDfF,GF5DF,AE4DKqO,CF5DLrN,GE4DS,CAACsN,EAAE,CAAC,CAAC,IF5Dd,GAAG,CAAC;AACtB,EG2EI4P,EH3EEjd,GG2EG,EAAE,QAAQ,GH3EG,GAAAjB,OAAA,CAAAiB,gBAAA,GAAG,CAAC;AAC1B,EG2EI+yL,EH3EE9yL,AE4DJ,WCee,CH3EC,CG2EC,EH3EDlB,GG2EM,IH3EN,CAAAkB,YAAA,GAAG,CAAC;AACtB,EG2EI+yL,EH3EE9yL,AE4DJ,KCeS,EAAE,EH3EE,GAAAnB,OAAA,CAAAmB,SAAA,GAAG,CAAC;AG4EjB,AH3EF,CG2EG,EACD,CH5EIC,AE4DJqhB,KAAA,CAAKwmK,EF5DO,GAAAjpL,OAAA,CAAAoB,EE4DQ,GAAG,CAAEwwB,EF5Db,GAAG,CAAC,EE4DiB,CAAC,CAAC;AF3DrC,EG4EI5zB,EH5EEqD,AE4DJohB,ECgBM,EAAE,CDhBR,CAAKymK,IF5DS,GG4EG,AH5EHlpL,OAAA,CAAAqB,AE4DM,GAAGuwB,OF5DT,CE4DiB,CAAC,CF5Df,AE4DgB,CF5Df;AACpB,EG4EI4hK,EH5EElyL,SG4ES,CH5EC,CG4EC,EAAE,AH5EHtB,OAAA,CAAAsB,UAAA,GAAG,CAAC;AACpB,EG4EIyyL,EH5EExyL,AE4DJ,UCgBc,EAAE,CAAC,CH5EC,GAAAvB,OAAA,CAAAuB,cAAA,GAAG,CAAC;AACxB,EG4EI2c,EH5EE1c,AE4DJ,GCgBO,EAAE,QAAQ,GH5EG,GAAAxB,OAAA,CAAAwB,gBAAA,GAAG,CAAC;AAC1B,EG4EIwyL,EH5EEvyL,AE4DJghB,KAAA,CAAK0mK,KCgBU,EAAE,KAAK,CH5EC,AE4DL,GF5DKnpL,AE4DF,KAAK,EF5DH,CAAAyB,mBAAA,GAAG,CAAC;AAC7B,EG4EIwyL,EH5EEvyL,AE4DJ+gB,KCgBS,ADhBT,CAAK2mK,CCgBM,SH5ES,GAAAppL,AE4DF,GAAG,IF5DD,AE4DK,CF5DL0B,gBAAA,GAAG,CAAC;AG6ExB,AH5EF,CG4EG,EACD,CH7EIC,cAAc,GAAA3B,OAAA,CAAA2B,cAAA,GAAG,CAAC;AACxB,EG6EI3D,EH7EE4D,AE4DJ,ECiBM,EAAE,OH7EO,CG6EC,EH7ED5B,OAAA,CAAA4B,WAAA,GAAG,GAAG;AACvB,EG6EI4xL,EH7EE3xL,AE4DJ,SCiBa,EAAE,EAAE,GH7EG,GAAA7B,OAAA,CAAA6B,gBAAA,GAAG,GAAG;AAC5B,EG6EIkyL,EH7EEjyL,AE4DJ2gB,KAAA,CAAK4mK,ICiBS,EAAE,GAAG,CDjBJ,GAAG,IF5DS,AE4DL,GF5DKrpL,OAAA,CAAA8B,uBAAA,GAAG,GAAG;AACnC,EG6EIoc,EH7EEnc,AE4DJ0gB,GCiBO,EAAE,ADjBT,CAAK6mK,KF5DU,EG6EE,CH7EFtpL,CE4DD,GAAG,GF5DF,AE4DK,CF5DL+B,WAAA,GAAG,GAAG;AACvB,EG6EIiyL,EH7EEhyL,WG6EW,AH7EA,EG6EE,CH7EFhC,IG6EO,GH7EP,CAAAgC,WAAA,GAAG,GAAG;AACvB,EG6EIiyL,EH7EEhyL,AE4DJ,KCiBS,EAAE,GH7EG,GAAAjC,OAAA,CAAAiC,UAAA,GAAG,GAAG,eG6EoC;AH5E1D,EG6EIkyL,EH7EEjyL,AE4DJugB,KAAA,CCiBU,ADjBL8mK,ECiBO,CH7EC,GAAAvpL,ME4DI,CF5DJ,CAAAkC,CE4DO,IAAI,IF5DX,GAAG,GAAG;AG8EnB,AH7EF,CG6EG,EACD,CH9EIC,AE4DJsgB,KAAA,CAAK+mK,QF5Da,GAAAxpL,AE4DF,GAAG,GAAG,CF5DJ,CAAAmC,cAAA,GAAG,GAAG;AAC1B,EG8EInE,EH9EEoE,AE4DJqgB,ECkBM,EAAE,CDlBR,CAAKgnK,MCkBW,QDlBG,EF5DO,CE4DJ,EF5DIzpL,CE4DD,MF5DC,CAAAoC,sBAAA,GAAG,GAAG;AAClC,EG8EIoxL,EH9EEnxL,SG8ES,EAAE,EAAE,CH9EC,GAAArC,OAAA,CAAAqC,cAAA,GAAG,GAAG;AAC1B,EG8EI0xL,EH9EEzxL,AE4DJ,UCkBc,EAAE,GAAG,OH9EO,GAAAtC,OAAA,CAAAsC,sBAAA,GAAG,GAAG;AAClC,EG8EI4b,EH9EE3b,AE4DJkgB,GCkBO,EAAE,ADlBT,CAAKinK,OCkBY,CH9EC,CE4DJ,EF5DI1pL,CE4DD,IAAI,EF5DH,CAAAuC,cAAA,GAAG,GAAG;AAC1B,EG8EIyxL,EH9EExxL,AE4DJigB,KAAA,CAAKknK,KCkBU,EAAE,CDlBJ,GAAG,CCkBM,EDlBH,EF5DO,GAAA3pL,OAAA,CAAAwC,sBAAA,GAAG,GAAG;AAClC,EG8EIyxL,EH9EExxL,AE4DJggB,KCkBS,ADlBT,CAAKmnK,CCkBM,OH9EO,GAAA5pL,OAAA,AE4DK,CF5DLyC,EE4DQ,IAAI,CAAC,CAAC,MF5Dd,GAAG,GAAG;AG+ExB,AH9EF,CG8EG,EACD,CH/EIC,AE4DJ+f,KAAA,CAAKonK,WAAW,GAAG,EF5DO,CE4DJ,CAAC,CF5DG7pL,AE4DF,OF5DE,CAAA0C,sBAAA,GAAG,GAAG;AAClC,EG+EI1E,EH/EE2E,AE4DJ8f,ECmBM,EAAE,CDnBR,CAAKqnK,OCmBY,KDnBA,GAAG,CF5DM,GAAA9pL,CE4DD,MF5DC,CAAA2C,sBAAA,GAAG,GAAG;AAClC,EG+EI6wL,EH/EE5wL,SG+ES,EAAE,EAAE,MH/EM,GAAA5C,OAAA,CAAA4C,mBAAA,GAAG,GAAG;AAC/B,EG+EImxL,EH/EElxL,AE4DJ,UCmBc,EAAE,GAAG,YH/EY,GAAA7C,OAAA,CAAA6C,2BAAA,GAAG,GAAG;AACvC,EG+EIqb,EH/EEpb,AE4DJ,GCmBO,EAAE,QAAQ,MH/EM,GAAA9C,OAAA,CAAA8C,mBAAA,GAAG,GAAG;AAC/B,EG+EIkxL,EH/EEjxL,AE4DJ0f,KAAA,CAAKsnK,KCmBU,EAAE,GDnBF,ECmBO,CDnBJ,KAAK,GF5DQ,GAAA/pL,OAAA,CAAA+C,2BAAA,GAAG,GAAG;AACvC,EG+EIkxL,EH/EEjxL,AE4DJyf,KCmBS,ADnBT,CAAKunK,CCmBM,GH/EG,GAAAhqL,OAAA,CAAAgD,AE4DM,GAAG,GAAG,CAAC,CAAC,EF5Dd,GAAG,CAAC;AGgFlB,AH/EF,CG+EG,CACF,EHhFKC,WAAW,GAAAjD,OAAA,CAAAiD,WAAA,GAAG,CAAC;AGkFrB,AHjFA,IGiFMmxL,AHjFAlxL,AE4DJ,SF5Da,GAAAlD,CGiFI,GAAG,GHjFP,CGiFWsyL,AHjFXpvL,KGiFgB,CAACg5F,GHjFjB,GAAG,CAAC,MGiF0B,CAAC,CAAC;AAC/C,AHjFA,IGiFMm4F,AHjFAlxL,AE4DJsf,KAAA,CAAKlkB,IAAI,ECqBO,CDrBJ,CF5DM,CGiFC,EAAE,AHjFHyB,CGiFI,CAAM,KHjFV,CAAAmD,cAAA,GAAG,CAAC;AGkFxB,AHjFA,IGiFMmxL,AHjFAlxL,EE2DUlD,IAAI,EAAE,EF3DN,GAAAF,GGiFM,GAAG,ADtBQ,CF3DjB,CGiFW,AHjFXoD,CGiFY,CAAE,QHjFd,GAAG,CAAC;AACpB,IAAMC,EE0D6B4mL,EAAE,EAAE,SAAS,EF1DzB,GAAAjqL,OAAA,CAAAqD,iBAAA,GAAG,CAAC;AGkF3BywL,AHjFA,IAAMxwL,EEyD4ClD,KCwBvC,ADxB4C,CCwB3C1E,CDxB6C,GFzDvC,GGiFC,AHjFDsE,CGiFE,KDxBiD,CFzDnD,CAAAsD,GGiFEixL,SHjFF,CGiFY,EAAI,AHjFb,CAAC;AACtB,EGiFE,EHjFIhxL,EEwDiE2mL,MAAM,EAAE,GFxD5D,GAAAlqL,OAAA,CAAAuD,aAAA,GAAG,CAAC;AACvB,EGiFE,EHjFIC,AEuDqF,CAAC,CC0BpF6vB,QAAQ,GAAG,IAAIi/J,AHjFA,GAAAtyL,EGiFK,CAAC8iF,IHjFN,CAAAt/E,SGiFoB,CAAC+wL,OHjFrB,GGiF+B,AHjF5B,CGiF6BR,AHjF5B,YGiFwC,EAAE,EAAE,EAAE,EAAE,CAAC;AHhF5E,EGiFE,EHjFItwL,EGiFA8lC,QAAQ,EHjFI,GAAAvpC,OAAA,CAAAyD,YAAA,GAAG,CAAC;AACtB,EGiFE,EHjFIC,AEuDJ,EC0BI6wL,UAAU,AHjFE,CGiFDxsK,EHjFC/nB,KGiFM,EAAE,AHjFR,CAAA0D,YAAA,GAAG,CAAC;AACtB,IGiFI,AHjFEC,AEuDJ8e,IC0BQsF,CD1BR,CAAKmnG,KC0BU,EHjFE,CGiFCklE,EHjFDp0L,EEuDA,GAAG,EFvDH,CAAA2D,GGiFc,CAACuzF,IAAI,CAACq9F,IHjFpB,GAAG,CAAC,EGiF0B,CAACxsK,OAAO,CAAC;AHhF1D,IGiFIwhB,AHjFE3lC,EEsDkB1D,IAAI,EC2BhB,AD3BkBD,GC2Bf,IAAIqyL,EHjFI,GGiFC,AHjFDtyL,AEsDY,CC2BVomF,AD3BW/lF,MFtDb,AEsDmB,CFtDnBuD,aGiFsB,CAAC,GHjFvB,GAAG,CAAC;AAC3B,IAAMC,EGgF0CojC,AD3BJ9mC,GC2BO,EAAE4nB,CD3BH,EAAE9nB,SFrD3B,GAAAD,AEqDgC,CAACM,KAAK,CFrDtC,CAAAuD,mBAAA,GAAG,CAAC;AAC7B,IG+E6D,AH/EvDC,CG+EwD,CAAC,AD3BE1D,KAAK,EAAEH,QFpDjD,GAAAD,CEoDsD,CAACO,KFpDvD,CAAAuD,iBAAA,GAAG,CAAC;AAC3B,EG+EE,CAAC,CH/EGC,AEmD4E,CAAC,IC4B1E,gBH/EkB,GAAA/D,OAAA,CAAA+D,qBAAA,GAAG,CAAC;AAC/B,IG+EIwlC,AH/EEvlC,QG+EM,GAAG,IAAIsuL,EH/EI,GG+EC,AH/EDtyL,CG+EEomF,MH/EF,CAAApiF,aG+EsB,CAAC,GH/EvB,GAAG,CAAC;AAC3B,IAAMC,AEmDJ,EC2B8Cia,KAAK,EAAEq2K,KH9EnC,GAAAv0L,EG8E6C,CAACke,IH9E9C,CAAAja,cAAA,GAAG,CAAC;AACxB,IG6EwE,AH7ElEC,AEmDJue,CC0BuE,CAAC,GD1BxE,CAAK0sG,OAAO,GAAG,EFnDO,GAAAnvH,OAAA,CAAAkE,kBAAA,GAAG,CAAC;AAC5B,EG6EE,EH7EIC,EEkDairH,GAAG,EAAE5uH,SFlDF,GAAAR,AEkDO,CAACK,MFlDR,AEkDc,CFlDd8D,gBAAA,GAAG,UAAU;AACnC,EG6EE,EH7EIC,EG6EEqvL,AD5B8BpkE,GAAG,EAAE7uH,KC4BzB,GAAG,CH7EC,GG6EG8xL,AH7EHtyL,AEiD0B,CAACS,IC4BnB,CAAC4/C,CH7ET,CAAAj8C,EG6Ea,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CAAC,CDvBL,CAAC,CAAC,CAAC0U,MAAM,CAAC,CAAC,UF/CnB,GAAG,IAAI,wBGsE2D,CAAC;AHrEjG,IGsEI,AHtEEzU,IGsEImvL,YAAY,AHtEA,GGsEG,AHtEH30L,IGsEOsyL,GHtEP,CAAA9sL,CGsEY,CAAC4gF,cHtEb,GAAG,GGsE8B,CAAC,AHtE3B;AAC7B,IAAM3gF,AE+CJ,ECsBwDwhC,GAAG,EAAEytJ,CHrEjD,GAAA10L,OAAA,CAAAyF,QAAA,GAAG,IAAI;AACrB,IGoE2E,AHpErEC,AE+CJ+c,CCqB0E,CAAC,GDrB3E,CAAKmoK,GF/CQ,GAAA5qL,IE+CE,GF/CF,AE+CK,CF/CL0F,GE+CSsgH,MF/CT,GAAG,IAAI,GE+CW,CAAC,CAAC;AF9CnC,IGoEI,AHpEErgH,AE+CJ8c,ICqBQmyK,CDrBR,CAAK/J,MCqBW,GAAG,EHpEE,EGoEEyH,CHpEFtyL,CE+CD,GCqBQ,ADrBL,CCqBMqgD,EHpER,CAAA16C,AE+CMqgH,CCqBM,CAACyuE,YAAY,EAAEE,ADrBZ,CF/Cf,AE+CgB,CAAC,EF/Cd,IAAI,IGoEgC,CAAC;AHnE/D,IGoEI,AHpEE/uL,AEgDJ6c,ICoBQoyK,CDpBR,CAAK1lF,CFhDM,GAAAnvG,EEgDA,CCoBM,EDpBH,CCoBM,ADpBL,CFhDJ,CAAA4F,EGoEa0sL,KAAK,AHpElB,CGoEmB5wJ,EHpEhB,IAAI,EGoEoB,CAAC,CAAC;AHnE1C,IGoEIkzJ,AHpEE/uL,AEgDJ4c,KAAA,CAAKqoK,ECoBK,CAAC9sJ,MHpEQ,CEgDJ,CCoBI,CAACxrB,AHpEDxS,CEgDD,ECoBK,CAAC,CAAC,ADpBHyuB,ECoBK,AHpER,CGoES,AHpET5oB,EGoEW,CAAC,CAAC,ODpBH,CAAC,CAAC,EFhDZ,GAAG,IAAI;AAC5B,IGoEIgvL,AHpEE/uL,AEiDJ2c,KAAA,CAAKsoK,GCmBM,AHpEE,CGoED92K,EHpECjU,CGoEE,CAAC40L,IDnBC,CFjDJ,CAAA9uL,CEiDO,CCmBI,CAAC,EDnBDwN,IFjDX,GAAG,IAAI,GEiDW,CAAC,CAAC;AFhDnC,IGoEImgL,AHpEE1tL,AEiDJ0c,KAAA,CAAKuoK,ICmBO,CAAC/2K,EHpEI,CGoED,CAAC4gL,CHpEA70L,AEiDF,GAAG,IFjDD,AEiDKsT,CCmBI,AHpETvN,CGoEU,YHpEV,AEiDY,CAAC,CAAC,CFjDX,IAAI;AAC1B,IGoEIsuL,AHpEEruL,AEiDJyc,KAAA,CAAKwoK,MCmBS,CAAC1tL,IAAI,CAAC,ADnBH,GFjDQ,AEiDL,GFjDKyC,CEiDDsT,MFjDC,CAAAtN,OEiDM,CAAC,CAAC,YFjDR,GAAG,IAAI;AAClC,IAAMC,AEkDJwc,ECiBsBu7B,GDjBtB,CAAKktI,CCiBsB,EAAE2J,MDjBf,GCiBwB,ADjBrB,GFlDQ,CEkDJvhL,EFlDItT,OAAA,CAAAiG,IEkDG,CAAC,CAAC,eFlDL,GAAG,IAAI;AAClC,IAAMC,AEkDJuc,ECgBwC+xK,GDhBxC,CAAKrJ,CCgBwC,EAAE,IDhBnC,GAAG,EFlDO,EEkDH73K,CFlDGtT,OAAA,CAAAkG,KEkDI,CAAC,CAAC,WFlDN,GAAG,IAAI;AAC/B,IGiEsD,AHjEhDC,AEkDJsc,CCeqD,CAAC,GDftD,CAAK2oK,SAAS,GAAG,CFlDM,GAAAprL,AEkDFsT,OFlDE,CAAAnN,MEkDK,CAAC,CAAC,WFlDP,GAAG,KAAK;AACjC,EGiEE,EHjEIC,AEmDJqc,KAAA,CAAK4oK,KFnDU,GAAArrL,GEmDC,GAAG,CFnDJ,CAAAoG,EEmDQkN,SFnDR,GAAG,EEmDY,CAAC,CFnDT,AEmDU;AFlDlC,IAAMjN,AEmDJoc,KAAA,CAAK6oK,GFnDQ,GAAAtrL,GEmDC,GAAG,CFnDJ,CAAAqG,EEmDQiN,OFnDR,GAAG,IAAI,AEmDQ,CAAC,CAAC;AFlDhC,EGiEE,EHjEIhN,AEmDJmc,KAAA,CAAK8oK,IFnDS,GAAAvrL,IEmDE,GFnDF,AEmDK,CFnDLsG,GEmDSgN,OFnDT,GAAG,IAAI,AEmDS,CAAC,CAAC;AFlDlC,EGiEE,EHjEI/M,AEoDJkc,ECaI8xK,GDbJ,CAAK/I,MCaS,CAAC2I,EHjEI,GAAAn0L,GGiEI,ADbH,ECaK,CDbF,CFpDJ,CAAAuG,EEoDQkoB,aFpDR,CEoDe,CAAC,CFpDb,AEoDc,IFpDV;AAC5B,IGiEI,AHjEEjoB,AEoDJic,ICaQqyK,CDbR,CAAKrJ,MAAM,GAAG,CCaM,GAAG,ADbLn4K,CFpDM,GGiEGg/K,AHjEHtyL,KGiEQ,CAAC8hF,CHjET,CAAAt7E,EEoDC,CAAC,CAAC,MCakB,CACzC+tL,SHlEoB,CGkEV,CAACR,CHlEY,IAAI,OGkEJ,GAAG,GAAG,EAC7BQ,UAAU,CAACR,YAAY,GAAG,GAAG,EAC7B,EACF,CAAC;AHpEL,IGqEI,AHrEEttL,AEoDJgc,ICiBQsyK,CDjBR,CAAKrJ,KFpDU,GAAA1rL,EGqEK,GAAG,EHrER,CAAAyG,CGqEY6rL,CDjBJ,GAAG,CCiBM,CAACv7I,GDjBF,CFpDhB,GAAG,IAAI,MGqE4B,CAAC;AHpErD,IAAMrwC,AEqDJ+b,ECgBIvE,GDhBJ,CAAKytK,CCgBI,EAAE,MDhBG,ECgBK,CHrEG,AEqDL,EAAE,CFrDG3rL,OAAA,CAAA0G,kBAAA,GAAG,IAAI;AAC/B,IAAMC,AEqDJ8b,ECgBIktB,GDhBJ,CCgBQ,ADhBHi8I,ECgBK0G,CHrEG,GAAAtyL,CGqEE,CAACqB,KHrEH,CAAAsF,GEqDS,CCgBI,EDhBD,CAAC,CAAC,CFrDd,GAAG,IAAI;AACtB,IAAMC,AEsDJ6b,ECeIqtB,GDfJ,CAAK+7I,OCeU,EAAE,CHrEG,GGqEC,AHrED7rL,CEsDD,GAAG,GFtDF,CAAA4G,CEsDO,eFtDP,GAAG,IAAI;AAC7B,IAAMC,EGqEAgpC,MHrEQ,CGqED,EAAE,AHrED7vC,OAAA,CAAA6G,QAAA,GAAG,IAAI;AACrB,IGqEI,AHrEEC,AEsDJ,CCeG,CAAC,aHrEe,GAAA9G,OAAA,CAAA8G,eAAA,GAAG,IAAI;AAC5B,IGqEI,AHrEEC,IGqEIiuL,QAAQ,GAAG,CHrEC,GGqEG1C,AHrEHtyL,KGqEQ,CAACqgD,CHrET,CAAAt5C,EGqEa,CAAC+tL,YAAY,CHrE1B,CGqE4BC,EHrEzB,IAAI,MGqEiC,CAAC;AHpE/D,IGqEIC,AHrEEhuL,AEsDJyb,KAAA,CAAKqpK,ECeK,CAAC7wK,QAAQ,AHrEE,CGqED3L,CAAC,CHrEAtP,AEsDF,ECeKqO,CDfF09K,GCeM,CAACz9K,AHrER,CAAAtH,CGqEU,GAAG,CAAC,GDfA,CAACksD,IAAI,CAAAzwC,GFtDnB,EEsD0B,CFtDvB,AEsDwB,IFtDpB;AAE9B,IGoEIgxK,AHpEExsL,AEqDJwb,KAAA,CAAKupK,ICeO,CAAC/3K,GAAG,CAAC+gL,KHpEO,AEqDL,GCeM,AHpEDh1L,AEqDFisL,CCeI,MHpEF,CAAAhlL,KEqDW,CAACisD,IAAI,CAAAzwC,KAAO,CAAC,GFrDxB,GAAG,KAAK;AAClC,EGoEE,EHpEIvb,AEqDJub,KAAA,CAAKypK,YAAY,GFrDQ,AEqDLC,GFrDKnsL,OAAA,CAAAkH,AEqDM,CAACgsD,IAAI,CAAAzwC,KAAO,CAAC,SFrDnB,GAAG,KAAK;AGqEnC,AHpEA,CGoEC,CAAC,EHpEItb,AEqDJsb,KAAA,CAAK2pK,cAAc,CFrDM,EEqDHC,CFrDGrsL,OAAA,CAAAmH,IEqDU,CAAC+rD,IAAI,CAAAzwC,KAAO,CAAC,KFrDvB,GAAG,KAAK;AACnC,IAAMrb,AEqDJqb,KAAA,CAAK6pK,aAAa,EFrDO,CEqDJC,EFrDIvsL,OAAA,CAAAoH,EEqDQ,CAAC8rD,IAAI,CAAAzwC,KAAO,CAAC,OFrDrB,GAAG,KAAK;AGqEnC,AHpEA,IAAMpb,AEqDJob,KAAA,CAAK+pK,UAAU,GAAGC,IFrDS,GAAAzsL,EEqDA,CAACkzD,IFrDD,AEqDK,CFrDL7rD,AEqDKob,KAAO,CAAC,iBFrDb,GAAG,KAAK;AGqErC,AHpEA,IGoEIwyK,AHpEE3tL,AEsDJmb,KAAA,CAAKiqK,SCcY,GAAG,CDdF,GCcM,ADdHC,CFtDM,GAAA3sL,OAAA,CAAAsH,AEsDM,CAAC4rD,IAAI,CAAAzwC,KAAO,CAAC,WFtDnB,GAAG,KAAK;AGsErC0lF,AHrEA,IAAM5gG,AEsDJkb,ECeI,CAACtV,EDfL,CAAKy/K,YAAY,CCeI,CAAC,CDfFC,GFtDQ,GAAA7sL,IGqEK,CDfF,CCeI,ADfHkzD,CFtDJ,CAAA3rD,EEsDQ,CAAAkb,KAAO,CAAC,CCeH,cHrEb,GAAG,KAAK;AACtC,EGqEEwyK,EHrEIztL,AEuDJib,KAAA,CAAKqqK,OCcU,GAAG,EDdD,GCcM,ADdHC,GFvDQ,GAAA/sL,KEuDG,CAACkzD,CFvDJ,CAAA1rD,EEuDQ,CAAAib,KAAO,CAAC,eFvDhB,GAAG,KAAK;AGsEtC,AHrEA,CGqEC,CAAC,EHrEIhb,AEuDJgb,KAAA,CAAKuqK,SFvDc,GAAAhtL,AEuDF,GAAGitL,IFvDD,CAAAxlL,MEuDY,CAACyrD,IAAI,CAAAzwC,GFvDjB,EEuDwB,CFvDrB,AEuDsB,KFvDjB;AGsE7B0lF,AHrEA,IAAMzgG,AEwDJ+a,ECaI,CAACtV,EDbL,CAAK+/K,SFxDc,GAAAltL,CGqEE,CAAC,KHrEH,CAAA0H,CEwDO,ECaK,CDbFylL,CCaI,UHrEd,EGqEoB,CHrEjB,KAAK,CEwDsB,CAACj6H,IAAI,CAAAzwC,KAAO,CAAC;AFvDhE,EGqEEwyK,EHrEIttL,AEwDJ8a,KAAA,CAAK2qK,OCaU,GAAG,IAAI,AHrEE,GAAAptL,EEwDA,GAAGqtL,EFxDH,CAAA1lL,eEwDqB,CAACurD,IFxDtB,AEwD0B,CAAAzwC,EFxDvB,GEwD8B,CAAC,CFxD1B;AGsElC,AHrEA,CGqEC,CAAC,EHrEI7a,oBAAoB,GAAA5H,OAAA,CAAA4H,oBAAA,GAAG,KAAK;AAClC,IAAMC,AEwDJ,oBFxDwB,GAAA7H,OAAA,CAAA6H,oBAAA,GAAG,KAAK;AGsElC,AHrEA,IAAMC,oBAAoB,GAAA9H,OAAA,CAAA8H,oBAAA,GAAG,KAAK;AGsElC,AHrEA,IGqEMotL,AHrEAntL,AEwDJ,IAAK0a,CCaI,GAAG,CDbP,CAAKusG,ECaMsjE,KAAK,CAAC1oF,EHrEE,AEwDJ,GCaO,AHrEH5pG,CGqEI,CAAC,ADbJ,IAAI,CFxDL,CAAA+H,AEwDQ,oBFxDR,GAAG,KAAK;AGsElC,AHrEA,IAAMC,EEyDHya,GCYM0yK,EDZN,CAAKppI,ICYQopI,CAAA,EAAG,ADZJ,CAAC,CAAC,GFzDS,GAAAn1L,OAAA,CAAAgI,oBAAA,GAAG,KAAK;AAClC,EGqEEspH,EHrEIrpH,AE0DJ,mBCWqB,CAACktL,AHrEE,GAAAn1L,IGqEK,CAAC,EHrEN,CAAAiI,oBAAA,GAAG,KAAK;AAClC,EGqEE,EHrEIC,AE2DJua,ECUMoU,GDVN,CAAKpM,CCUM,GAAGyqK,EDVH,CAAC,CAAC,CCUM,CAAC/qF,IHrEI,GAAAnqG,CGqEI,CAAC,CAAC,IHrEN,CAAAkI,oBAAA,GAAG,KAAK;AAClC,EGsEE,EHtEIC,AE0DU,ECYV8sL,KDZUxyK,KAAA,KCYK,EAAE,CHtEG,GAAAziB,OAAA,CAAAmI,oBAAA,GAAG,KAAK;AAClC,EE2DC,ECWGksL,AHtEEjsL,YGsEU,CAAC1M,OAAO,CAAC,AHtEE,GAAAsE,OGsEFg6D,AHtEE,CAAA5xD,GGsEE,EAAI,gBHtEN,GAAG,KAAK;AACnC,EE0DEic,EF1DIhc,EGsEA2xD,IAAI,CAAChc,ADZT,CAAAuqI,ICYc,CAACttK,QAAQ,AHtEE,AE0DzB,CCYwBjgB,CAAC,ADZzBwtL,CF1DyBxoL,GGsEIg6D,IAAI,AHtER,CGsESw6H,AHtETnsL,AE0DzB,KCYuC,GAAGwuB,KAAK,GAAG,EAAE,GHtE3B,GAAG,KAAK;AACnC,EEyDE,ECaE,AHtEEvuB,CGsED,CAAC,GDbJ5I,YAAA,CAAA6oL,GFzDyB,GAAAvoL,OAAA,AEyDzB,CFzDyBsI,qBAAA,GAAG,KAAK;AACnC,EGsEE,EHtEIC,AEwDJ9I,GAAA,mBFxD0B,GAAAO,OAAA,CAAAuI,sBAAA,GAAG,KAAK;AACpC,EGuEEyqL,EHvEIxqL,AEuDJlP,KAAA,CCgBQ,CAACmxB,ADdV,MCcgB,CAAC,CAAC,CDdlBshC,MFzD2B,CEyDpBA,CAAA,CFzDoB/rD,CEyDjB,MFzDiB,CAAAwI,sBAAA,GAAG,KAAK;AACpC,EGuEEs7C,EHvEIr7C,EE0DJ,ICaQ,ADbJ,CCaKmhD,ADbJolE,MCaU,CAAC7lE,GDbD,CAACh8C,CCaK,EAAEuiB,CHvEG,GAAA1vB,EGuEG,CAAC,IHvEJ,CAAAyI,CE0DM,CAAE,aAAa,EAAE,IAAI,CF1D3B,AE0D4BujL,GF1DzB,KAAK,ME0DmC,CAAC;ACcxE,AHvEA,IAAMtjL,EE0DJ,IAAI,CAACsmH,SF1De,CE0DL,CAAC7hH,CF1DInN,OAAA,CAAA0I,OE0DY,CAAE,QF1Dd,GAAG,IE0D0B,CF1DrB,CE0DuB,IAAI,CAACwjL,YAAa,CAAC;ACcxEiJ,AHvEA,IAAMxsL,EE2DJ,CCYK,CAAC,CAAC,CDZH,CAACqmH,UAAU,CAAC7hH,IF3DU,GAAAnN,OAAA,CAAA2I,CE2DM,CAAE,aAAa,EAAE,IAAI,CF3D3B,AE2D4ByjL,GF3DzB,KAAK,ME2DmC,CAAC;AF1DxE,IAAMxjL,EE2DJ,IAAI,CAAComH,UAAU,CAAC7hH,MF3DY,GAAAnN,OAAA,AE2DI,CF3DJ4I,AE2DM,OAAO,EAAE,IAAI,CAAC0jL,UF3DpB,GAAG,AE2D8B,EAAE,GF3D3B;AGwEtC,AHvEA,IAAMzjL,IE0D6DykL,OAAO,EAAE,GF1DtD,GAAAttL,OAAA,CAAA6I,gBAAA,GAAG,KAAK;AGwE9Bs/F,AHvEA,IAAMr/F,EGuEA,ADd4E,CCc3EqE,ADd6E,CAAC,eCc9D,CAAC,GHvEK,GAAAnN,EGuEG,EAAE,GHvEL,CAAA8I,QGuEW,eHvEX,GAAG,KAAK;AACrC,EGuEE4mB,EHvEI3mB,EE0DJ,ECaM,CAACo9C,CDbDhqC,KCaO,GAAGgsF,ADbF,GAAG,GCaK,CAAC0qF,ADbF,CF1DK,AE0DJ7jE,GF1DIhvH,MGuEO,CHvEP,AE0DM,CF1DN+I,AE0DOwkL,CCaGplF,MAAM,CAAC2qF,GDbC,CAAC,CAAC,CAAC,CAAC,ICaM,GHvE5B,GAAG,KAAK;AACpC,EGuEEpjK,EHvEI1mB,EE0DJmT,ECaM,CAACuqC,KDbC,CAACv5C,gBCaoB,ADbJ,CCaK,ADbH,CCaI,AHvEE,GAAAnN,KE0DG,EF1DH,AE0DK,CF1DLgJ,GE0DS,CAACkkL,qBAAqB,EAAE,EF1DjC,GAAG,KAAK;AAC3C,EGuEEppI,EHvEI76C,IEyDgEqkL,ECc5D,CAACplK,CHvEG,GAAAloB,AEyD+D,EAAE,CCc7D,CAACmoG,EDdgE,CFzDrE,CAAAl/F,EGuEW,CAAC4pL,KHvEZ,GAAG,EGuEmB,EAAE1qF,AHvEjB,MGuEuB,CAAC2qF,WAAW,CAAC;AACzD,AHvEA,CGuEC,CAAC,EHvEI5pL,IEwD+EskL,MFxDrE,CEwD4E,EFxD5ExtL,AEwD8E,OFxD9E,CAAAkJ,UAAA,GAAG,IAAI;AACvB,IAAMC,EEuD6F,CAAE,CAAC,QFvDpF,GAAAnJ,OAAA,CAAAmJ,YAAA,GAAG,IAAI;AGwEzB,AHvEA,IAAMC,EEwDJ,IAAI,CAAC4lH,UAAU,CAAC1yG,CFxDO,GAAAtc,CEwDF,CAACytL,KFxDC,CAAArkL,KEwDU,GAAG,MAAM,CAAC,CAAC,GFxDrB,GAAG,IAAI;AGwEhC++F,AHvEA,IAAM9+F,AEyDL,ECcK,CAAC8D,cHvEgB,EGuEA,CAAC,AHvEDnN,OAAA,CAAAqJ,GGuEY,EAAE4jL,WAAW,CHvEzB,CGuE2B,EHvExB,GGuE6B,CAAC,AHvE1B;AGwE9B,AHvEA,EEwDE,EFxDI3jL,KGuEG2jL,WAAWA,CAACl/K,AHvEE,GAAA/N,EGuEG,EAAE,GHvEL,CAAAsJ,iBAAA,GAAG,IAAI;AAC9B,EGuEE6pL,EHvEI5pL,AEuDJ9J,GCgBK,ADhBL,CCgBM6P,CAAC,GAAIvB,KAAK,CAAC+hL,KHvEM,EGuEC,CHvED9vL,EGuEImoG,KHvEJ,CGuEU,AHvEV5+F,CGuEWspL,UAAU,GAAI,CAAC,GAAG,CAAC,AHvE9B,GAAG,IAAI;AAChC,EGuEEM,EHvEI3pL,AEsDJlQ,GCiBK,CAAC0B,CAAC,ADjBP,EAED,CCeW,EAAE+S,KAAK,AHvEE,CGuEDgiL,ADfnBzjI,EFxDoBtsD,KGuEM,EHvEN,CGuESmoG,AHvET3+F,AEwDV8iD,CAAA,EAAG,GCesB,CAACwmI,QHvEhB,GGuE2B,AHvExB,CGuEyB,GAAG,AHvExB,CGuEyB,GAAG,CAAC;AHtEzD,EGwEE/xI,EHxEIt3C,EEyDJ,IAAI,CCeK,ADfJulH,CCeKvJ,QHxEU,CEyDL,CAAC/3G,CFzDI1N,EGwEG,CAACmzL,IHxEJ,CGwES,AHxET1pL,EGwEWimB,MAAM,CAAC,CDfH,CAAE,KFzDjB,GAAG,IAAI,CEyDuB,EAAE,IAAI,CAACs8J,cAAe,CAAC;AFxD3E,EGwEE,EHxEItiL,EGwEEs3C,ADfN,IAAI,CAACguE,KCeW,GAAGjuE,EDfJ,CAACrzC,MCeY,AHxEA,CGwECo4G,EHxED9lH,OAAA,CAAA0J,EEyDO,CAAE,GCeQ,CAAC4qL,SDfI,EAAE,IAAI,CCeM,ADfLxI,CCeM,AHxEnC,GAAG,IAAI,MEyDqC,CAAC;AFxD3E,EGyEE,EHzEIniL,EGyEAq3C,ADhBJ,IAAI,CAACguE,KCgBS,CAACpxH,IDhBA,CAAC8P,CCgBK,GAAG,CAAC,EAAE,CHzEG,GAAA1N,OAAA,CAAA2J,AEyDK,CAAE,WAAW,EAAE,IAAI,CAACuiL,OFzDzB,GAAG,EEyDmC,CAAC,CFzDhC;AACvC,IGyEI,AHzEEtiL,EEyDJ,ECgBQwrL,EDhBJ,CAACpmE,QCgBc,EHzEE,AEyDN,CCgBOhuE,ADhBNtzC,EFzDK1N,OAAA,CGyEW,AHzEX4J,CGyEY,CAAC,CAAC,CAAC6oB,KDhBD,CCgBO,ADhBL,OFzDhB,GAAG,CAAC,IEyD2B,EAAE,IAAI,CAACy5J,YAAa,CAAC;AFxD3E,IGyEIkH,AHzEEvpL,EE0DJ,IAAI,CCeK,ADfJmlH,CCeK1yG,KAAK,CAACC,GDfD,CAAC7O,GCeO,AHzEE,GGyEC,AHzED1N,OGyEQ,AHzER,CAAA6J,KE0DU,CAAE,OAAO,EAAE,IAAI,CAACyiL,CF1D1B,GAAG,CAAC,QE0DoC,CAAC;AFzDpE,IGyEI8G,AHzEEtpL,EE0DJ,IAAI,CCeK,ADfJklH,CCeKqmE,SAAS,ADfJ,CAAC3nL,CF1DO,GAAA1N,OAAA,CAAA8J,CGyEJ6kC,MAAA,ADfgB,CCeFymJ,ADfI,WCeO,AHzErB,CGyEsBpxK,CDfK,CF1DxB,CAAC,AE0DyB,IAAI,CCeH,ADfIooK,CCeHpuL,IAAI,SDfc,CAAC,SCef2wC,MAAA,CAAgBymJ,WAAW,CAACpxK,QAAQ,CAACiwK,OAAO,CAAE;AHxE1G,IGyEIb,AHzEErpL,EE2DJ,IAAI,CCcK,ADdJ2jL,CCcKpxK,KAAK,CAACuiB,GHzEK,CGyED,EHzEC7+B,CGyEE+N,KAAK,CAAC+hL,AHzER,CAAA/lL,AE2DK,CAAC,CAAC,ICcQ,GAAG,EAAE,GAAG,GHzEvB,CGyE2B,EHzExB,IAAI;AAC9B,IGyEIqpL,AHzEEppL,EE4DJ,IAAMmS,CCaG,CAACG,KAAK,CAACyiB,ADbF,EF5DM,CGyED,ADbF,EF5DG/+B,CGyEE+N,CDbD,CAACihH,GCaK,CAAC+gE,AHzER,CAAA/lL,KE4DY,CCaG,ADbFujL,GCaK,EAAE,GAAG,EHzEvB,CE4DwB,CCaG,ADbF,CF5DtB,AE4DuB,CAAC,CAAC,EF5DrB;AAC7B,EGyEE,CAAC,CHzEGtjL,EE4DJkS,GCaO,KDbC,CAACzO,IF5DU,GAAA1N,OAAA,CAAAiK,IE4DS,CAAE,SAAS,CF5DpB,CE4DsB,EF5DnB,EE4DuB,CAACijL,CF5DpB,oBE4DyC,EAAE;AF3DvE,IGyEIkG,AHzEElpL,IE2DmEsjL,GCc9D,CAAClxK,GDdoE,ECc/D,ADdiE,CCchEC,AHzEE,GAAAvc,IGyEK,GAAG,AHzER,CAAAkK,KGyEc,SHzEd,GAAG,IAAI;AAC3B,EGyEE,EHzEIC,EE0DiF,CAAE,CAAC,iBF1D/D,GAAAnK,OAAA,CAAAmK,qBAAA,GAAG,CAAC;AG0E/B,AHzEA,IAAMC,EE2DJ,IAAI,CAAC4kH,UAAU,CAAC1yG,EF3DQ,GAAAtc,AE2DH,CAACytL,MF3DE,CAAArjL,IE2DS,GAAG,MAAM,OF3DlB,GAAG,CAAC;IE6D7B;ACcD,AHzEA,EE2DE;ACeF+9F,AHzEA,IAAM99F,AE0DJ5K,ECeI,CAAC0N,ADfL,SF1DgB,GAAAnN,IGyEK,CAAC,EHzEN,CAAAqK,IGyEa,EAAEirL,MHzEf,CGyEsB,EAAE,AHzErB,EAAE,GGyEwB,CAAC;AAChD,AHzEA,IAAMhrL,AEyDJhR,KCgBOg8L,ADhBP,EAED,KCceA,CAACvnL,CHzEG,EE2DnB+W,CF3DmB9kB,CGyEE,EAAE,GDdhB8kB,CF3DY,AE2DZ,CF3DYxa,CE2DT,aF3DS,GAAG,MAAM;AAC7B,EGyEE6oL,EHzEI5oL,EE4DJ,CCaK,CAAC+E,CAAC,CDbH,CAACg9C,CCaMv+C,KAAK,CAAC+hL,GDbF,CAAC,CAAC,CF5DO,CGyEA,EHzEA9vL,CGyEGmoG,MAAM,AHzET,CGyEU0qF,AHzEVtoL,UGyEoB,GAAI,CAAC,GAAG,CAAC,EHzE7B,GAAG,aAAa;AAE1C,EGwEE4oL,EHxEI3oL,AE4DL,GCYM,CAACxP,CAAC,GAAG,EAAE+S,IHxEM,CGwED,CAACgiL,CHxEA/vL,MGwEO,CHxEP,CAAAwK,CGwEU29F,MAAM,CAAC2qF,MHxEjB,GAAG,EGwEyB,CAAC,GAAG,CAAC,CHxEtB,EGwEyB,CAAC;AHvEzD,EGyEE/xI,ADdA,EF3DIt2C,OGyEK,CAACg7G,IHzEM,GAAAzlH,MGyEO,CAACmzL,AHzER,CAAA1oL,IGyEa,EAAEilB,MAAM,AHzErB,CGyEsB,EHzEnB,MAAM;AAE3B,EGwEE,EHxEIhlB,AEyDJjL,ECeMuhD,CDfN,SCegB,CHxEC,EGwEED,CHxEF/gD,OAAA,CGwEW,AHxEX0K,CGwEYo7G,YHxEZ,GAAG,CGwEyB,AHxExB,CGwEyBwuE,gBAAgB,CAAC;AHvEjE,EGyEE,EHzEI3pL,AEwDJrR,ECiBI0nD,GDjBJ,EAED,KCee,CAACpjD,AHzEE,GAAAoC,AE0DlB2tL,GCesB,GAAG,CAAC,AHzER,CAAAhjL,CGyEU,IDffgjL,CAAA,EAAG,KF1DE,GAAG,IAAI;AAC1B,IGyEI,AHzEE/iL,EE2DJ,ECcQwqL,KDdD,IAAI,CAACxK,CCcO,CHzEC,EGyEE5pI,CHzEFhhD,KE2DE,CAACixB,CF3DH,CAAArmB,CGyEY,ADdN,CCcO,CAAC,CAAC,CAAC6nB,MAAM,KHzEtB,GAAG,IAAI;AAC7B,IGyEI,AHzEE5nB,AE4DL,ICaOuqL,WAAW,CAACpxK,EHzEI,GAAAhkB,GGyEI,CAAChC,GHzEL,CGyES,AHzET6M,KGyEc,MAAM,EAAE,KHzEtB,GAAG,IAAI;AAC/B,EE2DE,EF3DIC,EGyEAyqL,cAAc,CAAC,CAAC,AHzEE,GAAAv1L,OAAA,CAAA8K,kBAAA,GAAG,IAAI;AAC/B,IGyEI,AHzEEC,AE0DJtL,GAAA,mBF1D0B,GAAAO,OAAA,CAAA+K,sBAAA,GAAG,KAAK;AACpC,EGyEE,EHzEIC,AEyDJ1R,KAAA,EAED,SAAAs0L,MF3D2B,GAAA5tL,OAAA,CAAAgL,AE2DV4iL,CAAA,EAAG,mBF3DO,GAAG,KAAK;AG0EpC,AHzEA,IAAM3iL,EE4DJ,OAAO,IAAI,CAAC2/K,CF5DO,GAAA5qL,ME4DG,CF5DH,AE4DI8V,CF5DJ7K,IE4DS,WF5DT,GAAG,IAAI;AG2E5B,AHzEA,IAAMC,AE4DL,KCaQqqL,WHzEa,GGyECA,AHzEDv1L,CGyEC,EAAG,IHzEJ,CAAAkL,gBAAA,GAAG,GAAG;AAC5B,EGyEE,ADdA,EF3DIC,EGyEAqqL,UAAU,GAAGr5K,AHzEE,GAAAnc,KGyEM,CAACy1L,CHzEP,CAAAtqL,YGyEqB,CAAC,EHzEtB,GAAG,GAAG,IGyE4B,CAAC;AHxExD,EGyEE,EHzEIC,AE0DJ3L,ECeI,CAAC+1L,ADfL,UCee,EAAE,CHzEG,GAAAx1L,OAAA,CAAAoL,gBAAA,GAAG,GAAG;AAC5B,IGyEIoqL,AHzEEnqL,AEyDJ/R,KAAA,EAED,GCca,GAAG6iB,GDdhB0xK,IF3DyB,CGyED,CAACwF,CHzEArzL,IE2Dd6tL,CAAA,EF3Dc,AE2DX,CF3DWxiL,IGyEa,CAAC,KAAK,CAAC,SHzEpB,GAAG,GAAG;AAChC,IGyEImqL,AHzEElqL,EE4DJ,OAAO,CCaK,CAACs5B,EAAE,ADbJ,CAACnS,ECaM,EHzEI,EE4DJ,CF5DIzyB,AE4DHg+B,OCaW,AHzER,CAAA1yB,AE4DK,CAAC0K,UAAU,CAAE,IAAI,CAAChI,CF5DvB,GAAG,EE4D2B,CF5DxB,AE4DyB;AF3DvD,IGyEIwnL,AHzEEjqL,AE6DL,UCYa,CAAC+Q,KAAK,CAAC0hB,EHzEI,GAAAh+B,GGyEI,GAAG,CHzEP,CAAAuL,KGyEc,cHzEd,GAAG,GAAG;AAC/B,EE4DE,ECaEiqL,AHzEEhqL,UGyEQ,CAAC8Q,KAAK,CAACyiB,GAAG,GAAG,AHzEE,GAAA/+B,EGyEG,KHzEH,CAAAwL,uBAAA,GAAG,GAAG;AACnC,IGyEIgqL,AHzEE/pL,AE2DJhM,GAAA,OCcY,CAAC6c,KAAK,CAACuiB,AHzEE,GAAA7+B,CGyEE,GAAG,GHzEL,CAAAyL,CGyEU,gBHzEV,GAAG,GAAG;AAE7B,IGwEI+pL,AHxEE9pL,AEyDJpS,KAAA,EAED,GCaa,CAACgjB,CHxEG,GAAAtc,CGwEE,ADbnB8tL,CCaoBzgI,KHxEH,CAAA3hD,GGwEY,GAAG,IDbfoiL,CAAE9+D,CF3DF,GAAG,GAAG,GE2DM,EAAG,MCauB;AHvExD,IGwEIwmE,AHxEE7pL,EE4DJqjH,QCYY,CAAC1yG,AHxEE,CE4DL,CAACnP,CF5DInN,EGwEG,CAAC01L,IHxEJ,CAAA/pL,CGwEU,GAAG,GDZD,CAAE,GCYM,AHxEpB,GAAG,GAAG,AE4DiB,EAAE,IAAI,CAAC6gL,UAAW,CAAC;AF3D3D,IGwEIgJ,AHxEE5pL,EE4DJ,IAAI,CAAC0+K,GCYO,CAAChuK,CHxEG,GAAAtc,CGwEE,CAAC21L,KHxEH,CAAA/pL,IE4DS,GAAGojH,ECYM,GAAG,AHxErB,GAAG,EE4DmB,CF5DhB,cGwEmC;AHvE3D,IGwEIwmE,AHxEE3pL,AE6DL,UCWa,CAACyQ,KAAK,AHxEE,CGwEDs5K,EHxEC51L,KGwEM,EHxEN,CGwES,AHxET6L,MGwEe,UHxEf,GAAG,GAAG;AAC5B,EE4DE,ECYE2pL,AHxEE1pL,UGwEQ,CAACwQ,GHxEK,EGwEA,CAACu5K,AHxED71L,OAAA,CAAA8L,IGwEa,GAAG,KAAK,EHxErB,GAAG,GAAG;AAC1B,IGwEIqQ,AHxEEpQ,AE2DJtM,GAAA,KCaU,CAACq5F,IAAI,CAACi6F,CHxEG,GAAA/yL,OGwEQ,AHxER,CGwESw1L,AHxETzpL,UGwEmB,CAAC,IHxEpB,GAAG,GAAG;AAC3B,EGwEE,EHxEIC,AE0DJ1S,KAAA,EAED,SAAAo0L,GF5DwB,GAAA1tL,OAAA,CAAAgM,OE4DH0hL,CAAA,EAAG,SF5DA,GAAG,GAAG;AAC/B,EGwEE8H,EHxEIvpL,EE6DJ,IAAK,ECWK,CAACopL,CDXF,CAAC/K,EF7DO,GAAAtqL,EGwEG,KHxEH,CAAAiM,OE6Da,KAAK,CF7DlB,GAAG,AE6DmB,EAAG,CF7DnB,kHGwEkI;AHtE3J,EGuEEupL,EHvEItpL,IE6DH,ICUS,ADVL,CCUMoQ,ADVLguK,KCUU,CAAC/tK,AHvEE,GAAAvc,IGuEK,GAAG,AHvER,CAAAkM,GE6DO,CAACwB,ECUO,SHvEf,GAAG,KAAK,AE6DmB,CAAE,SAAS,EAAE,IAAI,CAAC8+K,UAAW,CAAC;AF5D9E,IAAMrgL,IE6DH,IAAI,CAACm+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AAAnG,AE6HDmG,GAAA,EF7HC,EAED,SAAA2T,KAAKA,CAAA,EAAG;IE2HR9Z,EFzHC,GEyHD,CFzHK,CAACgW,AE2HN,CF3HO,GAAGjB,IAAI,CAAC+E,AE2Hfq+K,KF3HoB,CAAE,IAAI,CAACniL,AE2HhBmiL,CF3HkB,AE2HhB1jL,CF3HiB,IE2HZ,EAAG;MF1HpB,AE4HA,IF5HI,AE4HA,CF5HC/S,AE4HA2wL,CF5HC,GAAGt9K,IAAI,CAAC+E,AE4HA,CAAC7V,IF5HI,AE4HA,CF5HE,AE4HAwQ,IF5HI,CAAC/S,AE4HA,CF5HE,AE4HD02L,CF5HE,QE4HQ,CAAC;IAEvC,EF5HC,OAAO,IAAI;EE4HX,EF1HD;EAAC,EE0HAjyL,GAAA;IF1HAA,AE0HAnG,GF1HA,EE0HA,EAED,SAAAq4L,cAAcA,CAAE5jL,KAAK,EAAG;IF5HvBzU,EE8HA,GF9HA,EAED,EE4HQ,IAAI,CAACsyL,EF5Hb12K,WAAWA,CAAA,EAAG,CE4HgB,CAAEnH,KAAK,CAAC2jL,SAAS,CAAE;MF1HhD,AE4HA,IF5HI,CAACpiL,AE4HC,CF5HA,GAAGjB,AE4HC9U,CAAC,GF5HE,AE4HC,CF5HA4b,AE4HC,EAAE5b,CAAC,EF5HC,CAAE,AE4HA,IF5HI,AE4HA,CF5HC+V,AE4HAq8K,CF5HE,CAAC,OE4HM,CAAC/tL,MAAM,EAAErE,CAAC,EAAG,EAAG;MF3HnD,EE6HC,EF7HG,CAACyB,CAAC,AE6HA,GF7HGqT,CE6HC,CAACs9K,EF7HE,CAACx2K,KAAK,CAAE,AE6HD,CAAE5b,CAAC,CAAE,CF7HA,CAACyB,CAAE,CAAC,AE6HA+S,KAAK,CAAC2jL,SAAS,EAAG;MF3H/C,IE6HE,GF7HK,CE6HD,CAAC/F,EF7HI,OE6HK,CAAC99K,MAAM,CAAEtU,CAAC,EAAE,CAAE,CAAC;IF3HhC,ME4HG;EF5HF,ME8HC;IF9HDkG,EEgIA,CFhIA;IAAAnG,AEkID,KFlIC,EAED,SAAA8b,MAAMA,CAAA,EAAG;EEgIR,IF9HA,IAAI,CAAC9F,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;IE8HjB7P,EF7HA,CE6HA,GF7HI,CAACzE,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;IE6HjB1B,EF3HA,GE2HA,EAED,EF7HQ,IAAI,GE6HZs4L,kBAAkBA,CAAE7jL,KAAK,EAAG;IF3H5B,EE6HC,KAAM,IAAIxU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACoyL,SAAS,CAAC/tL,MAAM,EAAErE,CAAC,EAAG,EAAG;EF7HnD,ME+HC,IAAK,IAAI,CAACoyL,SAAS,CAAEpyL,CAAC,CAAE,IAAIwU,KAAK,CAAC2jL,SAAS,EAAG,OAAO,IAAI;IF/H1DjyL,EEiIA,CFjIA;IAAAnG,EEmIA,GFnIA,EAED,EEiIQ,KAAK,EFjIb+b,GAAGA,CAAE/Z,CAAC,EAAG;IEmIT,EFjIC,OAAO,IAAI,CAACgU,CAAC,GAAGhU,CAAC,CAACgU,CAAC,GAAG,IAAI,CAACtU,CAAC,GAAGM,CAAC,CAACN,CAAC;EEiIlC,EF/HD;EAAC,EE+HAyE,GAAA;IF/HAA,AE+HAnG,GF/HA,EE+HA,EAED,SAAAu4L,aAAaA,CAAE9jL,KAAK,EAAG;IFjItBzU,EEmIA,GFnIA,CEmII0kC,CFjIL,OEiIa,EFjIb1oB,CEiIgB,IFjIXA,AEiIe,CFjIbha,AEiIcswL,CFjIb,EAAG,cEiI2B,CAAE79K,KAAK,CAAC2jL,SAAS,CAAE;MF/HxD,AEiIA,IAAK1zJ,GFjIE,IAAI,CAAC1uB,AEiIC,CFjIA,GAAGhU,CAAC,AEiICgS,CFjIAtS,CAAC,GAAG,IAAI,AEiIC,CFjIAA,CAAC,AEiIE,GFjICM,CAAC,CAACgU,CAAC;IAEnC,IEiIE0uB,QAAQ,GAAG,IAAI1qB,cAAO,CAAC,CAAC;EFjIzB,MEkIC,IAAI,CAACs4K,iBAAiB,CAAE79K,KAAK,CAAC2jL,SAAS,CAAE,GAAG1zJ,QAAQ;IFlIrDv+B,EEoIA,CFpIA;IAAAnG,EEsIA0kC,GFtIA,EAED,GEoIS,CAACxrB,GAAG,CAAEzE,CFpIfwH,IEoIoB,CAACo7K,GFpIbp7K,CAAA,CEoIkB,CFpIf,CEoIiBxH,KAAK,CAAC6iL,KAAM,CAAC;IAEzC,EFpIC,OAAO,IAAI,CAACthL,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACtU,CAAC,GAAG,IAAI,CAACA,CAAC;EEoIxC,EFlID;EAAC,EEkIAyE,GAAA;IFlIAA,AEkIAnG,GFlIA,EEkIA,EAED,SAAAu3L,yBAAyBA,CAAE9iL,KAAK,EAAG;IFpIlCzU,EEsIA,GFtIA,CEsIMo4L,CFpIP,QEoIgB,CFpIhB9zL,EEoIqBmQ,IFpIfnQ,CAAA,AEoIoB,CAAC8zL,CFpIlB,QEoI2B,KAAK,IAAI,CAAC/F,SAAS,CAAE,CAAC,CAAE,GAAK,IAAI,CAACA,SAAS,CAAE,CAAC,CAAE,GAAG,IAAI,CAACA,SAAS,CAAE,CAAC,CAAE;MFlIzG,AEoIA,OFpIOt9K,AEoIA,IFpII,AEoIA,CFpICmH,AEoIAo2K,IFpII,CAAE,IAAI,CAACt8K,CAAC,GAAG,GEoIE,CFpIE,AEoIAoiL,CFpICpiL,CAAC,GAAG,IAAI,AEoIA,CFpICtU,AEoIC,CFpIA,GAAG,IAAI,CAACA,CAAE,CAAC;IAEtD,AEoIA;EFpIC;IAAAyE,AEsID,GFtIC;EEsID,EFtICnG,KAAA,EAED,SAAAmc,eAAeA,CAAA,EAAG;IEoIlBhW,EFlIC,CEkID,MFlIQ4O,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAACb,CAAE,CAAC,GAAGjB,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAACnV,CAAE,CAAC;IAE/C,AEgIA1B,KAAA,EAEA,SAAAw4L,iBAAiBA,CAAE/jL,KAAK,EAAG;EFlI1B,IEoIA,IAAM4uG,IAAI,GAAG5uG,KAAK,CAACgkL,SAAS;IFpI5BtyL,GAAA;IAAAnG,EEsIA,GFtIA,EAED,SAAA6Z,SAASA,CAAA,EAAG;MAEX,AEmIA,IAAM6+K,GFnIC,IAAI,CAACr9K,AEmIE,GAAG,SFnIO,CAAE,IAAI,CAAC/W,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C,IEkIEkyL,OAAO,EAAE/hL,KAAK,CAAC+hL,OAAO;EFlIvB,MEmICC,OAAO,EAAEhiL,KAAK,CAACgiL,OAAO;IFnIvBtwL,GAAA,CEoICyvL,MAAM,EAAEnhL,KAAK,CAACmhL;IFpIf51L,EEqIA,CAAC,EFrID,EAED,SAAAoc,KAAKA,CAAA,EAAG;MAEP,AEmIA,QAASinG,IAAI;QAEZ,KAAK,CAAC;MFnIP,IAAMjnG,AEmIG,KFnIE,GAAGrH,IAAI,CAACsH,KAAK,CAAE,CAAE,IAAI,CAAC3a,CAAC,EAAE,CAAE,IAAI,CAACsU,CAAE,CAAC,GAAGjB,IAAI,CAACC,EAAE;MAExD,IEkIE0jL,GFlIKt8K,KAAK,AEkIF,CAACw5K,MAAM,IAAI,EAAE;IFhIxB,MEiIG;EFjIF,MEmIC,KAAK,CAAC;IFnIPzvL,GAAA,GEmIS;IFnITnG,KAAA,CEoIE04L,CFlIH,OEkIW,CAAC9C,CFlIZt5K,KEkIkB,EFlIXA,CAAEta,CAAC,AEkIY,EFlIT,CEkIY;MFhIxB,IAAMua,AEiIJ,WFjIe,GAAGxH,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAGja,CAAC,CAACia,QAAQ,CAAC,CAAE,CAAC;MAE/D,AEiIA,IFjIKM,WAAW,KAAK,CAAC,EAAG,OAAOxH,IAAI,CAACC,EAAE,GAAG,CAAC;MAE3C,IAAMwH,KAAK,GAAG,IAAI,CAACT,GAAG,CAAE/Z,CAAE,CAAC,GAAGua,WAAW;MEiIzC;MF/HA,AEgIA,IAAK9H,KAAK,CAACwiL,OAAO,IAAI,CAAE,IAAI,CAAC1E,cAAc,EAAG;QAE7CmG,QAAQ,CAAC9C,MAAM,IAAI,EAAE;MFhItB,AEkIA,OFlIO7gL,IAAI,CAAC0H,IAAI,CAAE/G,MAAK,CAAE8G,KAAK,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAE3C,EEkIC,OAAOk8K,QAAQ;EFlIf,EEoID;EAAC,EFpIAvyL,GAAA;AEoIA,EA9kC0BovH,EF08B1Bv1H,KAAA,EAED,ME58BmC,GF48BnC0c,UAAUA,CAAE1a,CAAC,EAAG;AEsIjB,MFpIE,GEoIO2wL,IFpIA59K,IAAI,CAACmH,IAAI,AEoIIy2K,CFpIF,AEoIIl+K,IFpIA,CAACkI,AEoII,EAAG,eFpIU,CAAE3a,CAAE,CAAE,CAAC;EEsIhD,EFpIA,EEoIK,IAAI,CAACwiB,OAAO,KAAK,KAAK,EAAG;EFpI7B,AEsID,IAAK,IAAI,CAAC6tK,SAAS,CAAC/tL,MAAM,KAAK,CAAC,EAAG;IFtIlC6B,AEwIA,GFxIA,CEwII,CAACuvH,UAAU,CAACijE,iBAAiB,CAAElkL,KAAK,CAAC2jL,SAAU,CAAC;IFxIpDp4L,AE0IA,IAAI,CF1IJ,AE0IK01H,EFxIN,QEwIgB,CFxIhB/4G,AEwIiB9I,gBAAgB,CFxIhB8I,AEwIkB,CFxIhB3a,CAAC,EAAG,SEwIyB,EAAE,IAAI,CAACwwL,cAAe,CAAC;IACtE,EFvIA,EEuII,CAAC98D,CFvIC94G,EAAE,GAAG,IAAI,AEuIA,CFvIC5G,AEuIAnC,CFvIC,GAAG7R,CAAC,CAACgU,CAAC,SEuIS,CAAE,WAAW,EAAE,IAAI,CAAC48K,YAAa,CAAC;EAEnE,MFzI0B/1K,EAAE,GAAG,IAAI,CAACnb,CAAC,GAAGM,CAAC,CAACN,CAAC;MAC1C,OAAOkb,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;EE0IzB,EFxIA;EAAC;EE0ID,EF1IC1W,EE0II,CF1IJ,GE0IQ,CAACmyL,kBAAkB,CAAE7jL,KAAM,CAAC,EAAG;IF1IvCzU,KAAA,EAED,SAAA8c,mBAAmBA,CAAE9a,CAAC,EAAG;EE0IzB,IFxIC,OAAO+S,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAACb,CAAC,GAAGhU,CAAC,CAACgU,CAAE,CAAC,GAAGjB,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAACnV,CAAC,GAAGM,CAAC,CAACN,CAAE,CAAC;IAE3D;EAAC,AEwID,IAAI,CAACy2L,WAAW,CAAE1jL,KAAM,CAAC;EAEzB,EF1ICtO,EE0IIsO,CF1IJ,IE0IS,CAACmkL,WAAW,KAAK,OAAO,EAAG;IF1IpC54L,AE4IA,IAAI,CF5IJ,AE4IKozL,EF1IN,SAAAr2K,EE0ImB,CAAEtI,KAAM,CF1IlBsI,AE0ImB,CF1IjBzY,MAAM,EAAG;EE4IpB,CAAC,GF1IA,GE0IM,IF1IC,IAAI,CAACuV,SAAS,CAAC,CAAC,CAACsB,cAAc,CAAE7W,MAAO,CAAC;IAEjD,AE0IC,IAAI,CAACkvL,YAAY,CAAE/+K,KAAM,CAAC;EF1I1B,AE4ID;AAED,IF9IEtO,GAAA;AEgJF,IFhJEnG,KAAA,AEgJOyyL,EF9IR,SAAAn8K,EE8IqBm8K,CAAEh+K,CF9InB6B,CAAEtU,CAAC,EAAEgb,AE8ImB,EAAG,GF9IjB,EAAG;EEgJjB,IF9IC,AE8II,IF9IA,AE8II,CF9IHhH,AE8IIwO,CF9IH,IAAI,CAAExiB,CAAC,AE8IG,CF9IFgU,CAAC,GAAG,AE8IG,IF9IC,CAACA,AE8IG,CF9IF,CE8IK,GF9IAgH,KAAK;EEgJnC,IF/IC,AE+IIvI,IF/IA,CAAC/S,AE+II,CF/IH,AE+IIk3L,IF/IA,CAAE52L,CAAC,CAACN,CAAC,GAAG,AE+IG,IF/IC,CAACA,AE+IG,CF/IF,IAAKsb,EE+II,EAAG,CF/IF;IEiJlC,EF/IA,EE+II,CAACs2K,IF/IE,IAAI,IE+IM,CAAE7+K,KAAM,CAAC;EAE3B,CAAC,CF/ID,KE+IO;EF/IN,EEiJA,IAAI,CAACi/K,YAAY,CAAEj/K,KAAM,CAAC;EAE3B,EFnJCtO,GAAA;AEqJF,IFrJEnG,KAAA,EAED,SAAAid,WAAWA,CAAEC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;AEqJ9B,MFnJE,GEmJO61K,CFnJH,CAAC78K,CAAC,GAAGkH,EAAE,CAAClH,CAAC,CEmJK68K,CAAEp+K,CFnJJ,CAAE0I,EAAE,CAACnH,AEmJI,CFnJH,CEmJM,EFnJHkH,EAAE,CAAClH,CAAC,IAAKgH,KAAK;EEqJxC,IFpJC,AEoJG,CAACq7K,GFpJA,CAAC32L,CAAC,GAAGwb,EAAE,CAACxb,CAAC,EEoJK,CFpJF,AEoJI+S,CFpJF0I,EAAE,CAACzb,CAAC,AEoJI,CAAC,EFpJFwb,EAAE,CAACxb,CAAC,IAAKsb,KAAK;EEsJxC,IFpJC,IEoJQ,GFpJD,CEoJK,CAACq1K,EFpJF,OEoJW,CAAC/tL,MAAM;IFlJ9B,AEoJC,KAAK,CAAC;EFpJN,IEsJC,IAAI,CAACoxH,UAAU,CAACmjE,qBAAqB,CAAEpkL,KAAK,CAAC2jL,SAAU,CAAC;IFtJzDjyL,EEwJC,CFxJD,GEwJK,CAACuvH,UAAU,CAACthH,mBAAmB,CAAE,aAAa,EAAE,IAAI,CAACo+K,cAAe,CAAC;IFxJ1ExyL,EEyJC,GFzJD,CEyJK,CFvJN,AEuJO01H,SFvJPt4G,CEuJiB,CAAChJ,IFvJZgJ,CAAEpb,CAAC,EAAG,WEuJyB,CAAE,WAAW,EAAE,IAAI,CAAC4wL,YAAa,CAAC;MFrJtE,AEuJC,IAAI,CAACp+K,EFvJKxS,CAAC,CAACgU,CAAC,KAAK,GEuJA,CFvJI,AEuJFs4K,CFvJGt4K,CAAC,IAAQhU,CAAC,CAACN,CAAC,AEuJL,CAAC,IFvJS,IAAI,CAACA,CAAG;IAElD,EEuJE,IAAI,CAACi0H,KAAK,GAAGg5D,MAAM,CAAClf,IAAI;EFvJzB,IEyJC;IFzJDtpK,AE2JA,GF3JA,EE2JK,CAAC;IF3JNnG,EE6JC,GF7JD,CE6JOo4L,CF3JR,QE2JiB,CF3JjB/6K,EE2JoB,IAAI,CAACg1K,EF3JhBh1K,CAAE1I,KAAK,CE2JkB,CF3JH,AE2JK,CAAC,CAAE;MF3JR,AE4J7B,IF5JgB2I,AE4JVonB,MF5JgB,EE4JR,CF5JQ9tB,EE4JL,IAAI,CAAC07K,EF5JA,CAAAhuL,MAAA,QAAAsS,AE4JiB,CAAEwhL,QF5JnB,CE4J4B,CAAE,MF5J9BpkL,SAAA,GAAA4C,SAAA,MAAG,CAAC;MAE3B,IAAI,CAACZ,CAAC,GAAGrB,KAAK,CAAE2I,MAAM,CAAE;MACxB,AE2JC,IF3JG,CAAC5b,CAAC,GAAGiT,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAE5B,AE0JC,IAAI,CAAC81K,EF1JC,IAAI,OE0JQ,CAAE;IFxJtB,IEwJwBgF,SAAS,EAAEA,SAAS;EFxJ3C,MEwJ6Cf,KAAK,EAAE3yJ,QAAQ,CAAC1uB,CAAC;IFxJ9D7P,GAAA,CEwJgEmxL,KAAK,EAAE5yJ,QAAQ,CAAChjC;IFxJhF1B,EEwJkF,CAAE,CAAC,CFxJrF,EAED,SAAAud,OAAOA,CAAA,EAA2B;MAAA,AEwJhC,IFxJO5I,KAAK,GAAAiC,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,EAAE;EE0JnB,IF1JmB,IAAE0G,MAAM,GAAA1G,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;AE4JhC,MF1JEjC,KAAK,CAAE2I,MAAM,CAAE,GAAG,IAAI,CAACtH,CAAC;AE4J1B,MF3JErB,GE2JO8+K,EF3JF,CAAEn2K,MAAM,EE2JKm2K,CF3JF,AE2JIh/K,CF3JH,CAAE,GAAG,AE2JG,EAAG,EF3JF,CAAC/S,CAAC;EE6J7B,IF3JC,AE2JGo3L,OF3JInkL,IE2JO,CF3JF;EE6Jb,EF3JA,ME2JSF,KAAK,CAACskL,MAAM;EF3JpB,EE6JA,KAAK,CAAC;IF7JN5yL,EE+JC2yL,CF/JD,UE+JY,GAAG,IAAI,CAACljE,YAAY,CAAChvH,IAAI;IF/JrC5G,EEgKC,GFhKD,EAED,SAAAwd,mBAAmBA,CAAEC,SAAS,EAAEnJ,KAAK,EAAG;IEgKvC,EF9JA,GE8JK,CF9JD,AE8JE,CF9JD0B,CAAC,GAAGyH,SAAS,CAACC,IAAI,CAAEpJ,KAAM,CAAC;MAChC,AE+JCwkL,IF/JG,CAACp3L,CAAC,GAAG+b,EE+JG,GAAG,IF/JG,AE+JC,CF/JAE,AE+JCi4G,IF/JG,CAAEthH,KAAM,CAAC,CE+JA,CAACzN,MAAM;MF7JvC,AE8JC,OF9JM,IAAI;IAEZ,AE8JC,KAAK,CAAC;EF9JN,IEgKCiyL,WAAW,GAAG,IAAI,CAACljE,YAAY,CAAC9uH,KAAK;IFhKtCX,EEiKC,CFjKD;IAAAnG,AEmKA,KFnKA,EAED,SAAA4d,YAAYA,CAAEC,MAAM,EAAEzB,KAAK,EAAG;MAE7B,AEiKC08K,IFjKKz4L,CAAC,GAAG0U,GEiKE,CFjKE,CAACyD,CEiKA,CAAE,CFjKC,AEiKA,CFjKE4D,KAAM,CAAC;EEmK5B,MFnK8B3a,CAAC,GAAGsT,IAAI,CAAC0D,GAAG,CAAE2D,KAAM,CAAC;EEqKnD,IFnKC,IAAMpG,AEmKE8iL,CFnKD,GAAG,IAAI,CAAC9iL,CAAC,CEmKG,EFnKA6H,MAAM,CAAC7H,CAAC;IEqK3B,EFpKA,GEoKKrP,CFpKCjF,CAAC,GAAG,IAAI,CAACA,CAAC,CEoKN,CAACsF,CFpKQ6W,IEoKH,EFpKS,CAACnc,CAAC;MAE3B,AEoKC,IFpKG,AEoKE,CFpKDsU,CAAC,EEoKI,CFpKDA,AEoKE+5K,CFpKD,GAAG1vL,CAAC,GAAGqB,CAAC,CEoKG,EFpKAD,CAAC,EEoKI,CFpKDoc,IEoKM,EFpKA,AEoKG,CFpKF7H,CAAC;MACjC,AEqKC,IFrKG,AEqKC,CFrKAtU,AEqKCg1L,CFrKA,GAAG1gL,CAAC,GAAGvU,CAAC,GAAGC,CAAC,GAAGrB,CAAC,GAAGwd,CEqKE,CAAEpJ,IFrKE,CAAC/S,AEqKG,CFrKF,AEqKG;MFnKpC,AEqKC,IAAI,CAACi0H,EFrKC,GEqKI,CFrKA,EEqKGg5D,MAAM,CAAC3nL,KAAK;IFnK3B,EEqKE;EFrKD,EEuKA,KAAKL,YAAK,CAACI,MAAM;IFvKjBZ,EEyKC,CFzKD,GEyKMsO,KAAK,CAACwiL,OAAO,IAAIxiL,KAAK,CAACyiL,OAAO,IAAIziL,KAAK,CAAC0iL,QAAQ,EAAG;IFzKzDn3L,IE2KE,CF3KF,EAED,CEyKQ,IAAI,CAACowL,GFzKbh7K,MAAMA,AEyKgB,CFzKhB,EAAG,EEyKkB,KAAK,EAAG;MFvKlC,EEyKE,EFzKE,CAACY,CAAC,AEyKA,CAAC2gL,EFzKE5hL,IAAI,CAACK,MAAM,CAAC,CAAC,IEyKI,CAAEX,KAAM,CAAC;MFxKnC,EE0KE,EF1KE,CAAC/S,CAAC,AE0KA,CAACi0H,EF1KE5gH,GE0KG,CF1KC,CAACK,CE0KCu5K,KF1KK,CAAC,AE0KA,CF1KC,AE0KA1nL,GAAG;MFxKzB,AE0KC,CAAC,MF1KK,AE0KC,IF1KG;IAEZ,IE0KG,IAAK,IAAI,CAACgpL,YAAY,KAAK,KAAK,EAAG;EF1KrC,ME4KE,IAAI,CAACsG,sBAAsB,CAAE9hL,KAAM,CAAC;IF5KtCtO,GAAA,CE8KE,CF5KAjG,GE4KI,CAACy1H,EF5KC,CAACv1H,EE4KG,GAAGuuL,GF5KE,GE4KI,CAAC5nL,MAAM;IF5KX/G,EE8KhB,GF9KgB,eAAAV,mBAAA,GAAAqF,IAAA,CAAlB,SAAA3E,MAAA;MAAA,AEgLE,OFhLFV,mBAAA,GAAAuB,IAAA,UAAAid,OAAAC,SAAA;IEkLC,IFlLD,CEkLMpX,YAAK,CAACM,GAAG,CFlLf8W,SAAA,CAAA3Y,IAAA,GAAA2Y,SAAA,CAAAta,IAAA;MEoLE,IFpLF,AEoLOgR,KAAK,CAACwiL,OAAO,IAAIxiL,KAAK,CAACyiL,OAAO,IAAIziL,KAAK,CAAC0iL,QAAQ,EAAG;QAEvD,IFtLHp5K,AEsLQ,IAAI,CAACkyK,IFtLb,CAAAxsL,IAAA,GEsLyB,KAAK,KAAK,EAAG;QAEnC,IFtLF,AEsLM,CAAC8yL,MFtLD,IAAI,CAACvgL,CAAC,UEsLiB,CAAEvB,KAAM,CAAC;QAEpC,EFxLU,EEwLN,CAACkhH,KAAK,GAAGg5D,MAAM,CAAC5nL,MAAM;MAE3B,CAAC,KF1LUgX,CE0LJ,QF1LI,CAAAta,IAAA;QE4LV,IF3LF,AE2LO,IAAI,CAAC2sL,EF3LN,IAAI,CAAC1uL,CAAC,CE2LS,KAAK,KAAK,EAAG;QAEhC,EF7LU,EE6LN,CAACi1L,mBAAmB,CAAEliL,KAAM,CAAC;QAEjC,EF/LU,EE+LN,CAACkhH,KAAK,GAAGg5D,MAAM,CAAC1nL,GAAG;MAExB,MFjMW,OAAA8W,SAAA,CAAAxY,IAAA;MEmMX,EFnMW;IEqMZ,EFrMY,GAAAvF,KAAA;IAAA,CAEZ,CEqMC,IAAI,CAAC21H,KAAK,GAAGg5D,MAAM,CAAClf,IAAI;EFrMzB,AEuMD;AFvMC,EEyMD,IAAK,IAAI,CAAC95C,KAAK,KAAKg5D,MAAM,CAAClf,IAAI,EAAG;AFzMjC,IAIIzxJ,AEuMJ,IAAI,CAACxJ,EFvMM,GAAA9N,OAAA,CAAAsX,AEuMO,CAAEqwK,MFvMT,KEuMqB,CAAC;EFrMlC,AEuMA,SFvMArwK,QAAaC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;AEyM5D,IFzM4DzY,eAAA,OAAAgY,OAAA;AE2M5D,IFzMEA,KEyMO21K,EFzMA,CAACh0L,QEyMUg0L,CFzMD,AEyMGl/K,CFzMFiK,IEyMO,EAAG,GFzMD,GAAG,IAAI;EE2MnC,EFzMC,IAAI,CAACnD,CEyMG,IAAI,CAACo6G,EFzMA,GAAG,AEyME,CFvMjB,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;IAED,AEmMA,IFnMK13G,CEmMA0wK,EFnMG,IEmMG,CFnME36K,AEmMDjN,MAAM,GFnMI,EAAG;MAExB,AEmMA,IFnMI,AEmMC,CFnMAmS,GAAG,AEmMC,CFnMC+E,AEmMAgyK,GFnMG,EAAE/xK,GAAG,EAAEC,EEmME,CFnMC,EAAEC,EEmME,CFnMC,EAAEC,EEmME,CFnMC,CEmME,CFnMAC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;IAExD,EEmMC,IAAI,CAACm4K,sBAAsB,CAAEniL,KAAM,CAAC;EFjMtC,IEmME;EFnMD,EEqMA,KFrMArO,AEqMKuoL,MAAM,CAAC3nL,KFrMZ,AEqMiB,CFrMjBgX,OAAA;IAAA7X,EEuMC,CFvMD,GEuMM,IAAI,CAAC4pL,UAAU,KAAK,KAAK,EAAG;IFvMlC/vL,EEyMC,GFzMD,CEyMK,CFvMN,AEuMO62L,SFvMP39K,GAAGA,CAAE+E,GAAG,EAAEC,GAAG,AEuMe,CAAEzJ,CFvMf0J,GAAG,CEuMkB,CFvMhBC,AEuMiB,GFvMd,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAElD,AEuMC,IFvMKE,EAAE,GAAG,IAAI,CAACpD,QAAQ;IEyMxB,EFvMAoD,EAAE,CAAE,AEuMCgwK,CFvMA,CAAE,GAAG1wK,CEuMC,CAAChX,CFvMC,EEuME;MFvMA0X,AEyMd,EFzMgB,CAAE,CAAC,AEyMd,CFzMgB,GAAGP,AEyMf,CAACgyK,EFzMiB,OEyMR,KAAK,KAAK,EAAG;MFzMHzxK,AE2M7B,EF3M+B,CAAE,CAAC,AE2M9B,CF3MgC,AE2M/Bm4K,GF3MkCv4K,GAAG,aE2MlB,CAAE9J,KAAM,CAAC;MF1MlCkK,AE4MC,EF5MC,CAAE,CAAC,CAAE,GAAGT,GAAG;EE8Md,IF9MgBS,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;AEgN9B,MFhNgCM,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;AEkN7C,MFjNEG,EAAE,CAAE,AEiNGs0K,CFjNF,CAAE,GAAG90K,GAAG,IEiNM80K,CAAEx+K,KAAK,EAAG;EAE9B,IFnNgBkK,AEmNX,EFnNa,CAAE,CAAC,AEmNZ,CFnNc,AEmNb6F,GFnNgBlG,GAAG,CEmNZ,KAAK,KAAK,IAAI,IAAI,CAACyxK,UAAU,KAAK,KAAK,IAAI,IAAI,CAACp6D,KAAK,KAAKg5D,MAAM,CAAClf,IAAI,EAAG;EAEzFh7J,IFrN+BkK,CEqN1B,CFrN4B,AEqN3B4oK,CFrN6B,CAAC,CAAE,GAAG9oK,GAAG,KEqNxB,CAAC,CAAC;EAEtB,IFrNC,AEqNG,CAACjK,MFrNG,IAAI,GEqNM,CAAE65K,WAAY,CAAC;EAEjC,EFrNA,EEqNI,CAAC0I,iBAAiB,CAAE,IAAI,CAACyB,iBAAiB,CAAE/jL,KAAM,CAAE,CAAC;EFrNxD,AEuND,IAAI,CAACD,aAAa,CAAE85K,SAAU,CAAC;AAEhC,IFzNEnoL,GAAA;AE2NF,IF3NEnG,KAAA,AE2NOmzL,EFzNR,OEyNiBA,CAAE1+K,CFzNnBmK,IEyNwB,EAAG,EFzNnBA,CAAA,EAAG;EE2NX,IFzNC,AEyNI,IFzNA,AEyNI,CFzNH1F,AEyNIsL,GFzND,CAEP,CAAC,EAAE,AEuNY,CFvNX,EAAE,CAAC,CEuNa,CFtNpB,CAAC,EAAE,CAAC,AEsNqB,EFtNnB,AEsNsB,CFtNrB,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;EEqNF,IFnNC,AEmNG,CAACwyK,MFnNG,IAAI,IEmNO,CAAEviL,KAAM,CAAC;AAE7B,IFnNC;AEqND,EFrNE,OEqNO4+K,YAAYA,CAAE5+K,KAAK,EAAG;EAE9B,EFvNCtO,EEuNG,CFvNH,AEuNIoyL,aAAa,CAAE9jL,KAAM,CAAC;EAE3B,EFzNCzU,KAAA,CEyNQ,CFvNT,GEuNa,CAACqyL,KFvNd33K,IAAIA,AEuNmB,CFvNjB5E,AEuNkBxR,CFvNjB,EAAG,GEuNoB;IAE7B,EFvNA,GEuNK,CFvNCqa,AEuNA,EFvNE,GAAG,IAAI,CAACpD,QAAQ;MACxB,AEwNC,IFxNKsD,EAAE,EEwNE,CFxNC/I,CAAC,CAACyF,CEwNC,CAACs6G,MFxNM,CEwNC,CAACC,GAAG;MFtN1Bn3G,EAAE,AEwNA,CFxNE,CAAC,CAAE,EEwNAzX,CFxNG2X,EAAE,CAAE,CAAC,CAAE,MEwNL,CAAC9X,MAAM;MFxNA4X,EAAE,CAAE,CAAC,AE0NrB,CF1NuB,GAAGE,AE0NrB,EF1NuB,CAAE,CAAC,AE0NtB,CF1NwB,AE0NvBoxK,YAAY,KAAK,KAAK,EAAG;MF1NAtxK,EAAE,CAAE,CAAC,AE4NxC,CF5N0C,GAAGE,AE4NzC,CAACu4K,CF5N0C,CAAE,CAAC,CAAE,mBE4NxB,CAAE3iL,KAAM,CAAC;MF3NxCkK,EAAE,CAAE,CAAC,AE6NF,CF7NI,GAAGE,AE6NH,CAAC82G,CF7NI,CAAE,CAAC,CAAE,CE6NJ,GAAGg5D,MAAM,CAACC,YAAY;MF7NhBjwK,EAAE,CAAE,CAAC,AE+NrB,CF/NuB,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,AEiOtC,CFjOwC,CAAC,CAAE,EEiOtCzX,CFjOyC2X,EAAE,CAAE,CAAC,CAAE,MEiO3C,CAAC5X,GAAG;MFhOhB0X,EAAE,CAAE,CAAC,AEkOF,CFlOI,GAAGE,AEkOF,EFlOI,CAAE,CAAC,AEkOH,CFlOK,AEkOJuxK,SAAS,KAAK,KAAK,EAAG;MFlOhBzxK,EAAE,CAAE,CAAC,AEoOrB,CFpOuB,GAAGE,AEoOtB,CAAC24K,CFpOuB,CAAE,CAAC,CAAE,gBEoOR,CAAE/iL,KAAM,CAAC;MFpOCkK,EAAE,CAAE,CAAC,AEsOxC,CFtO0C,GAAGE,AEsOzC,CAAC82G,CFtO0C,CAAE,CAAC,CAAE,CEsO1C,GAAGg5D,MAAM,CAACE,SAAS;MFpOhC,IEsOG,GFtOI,IAAI;IAEZ,IEsOG;EFtOF,QEwOG,IAAI,CAACl5D,KAAK,GAAGg5D,MAAM,CAAClf,IAAI;IFxO3BtpK,EE0OC,CF1OD;IAAAnG,EE4OC,GF5OD,EAED,SAAA8e,YAAYA,CAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;IE4OnC,EF1OAF,GE0OK,CAAC,CF1OD,CAACG,oBAAoB,CAAE,IAAI,EAAE,CAAE,CAAC;MACrCF,AE2OC,KF3OI,CAACE,EE2OI,IAAI,CAAC22G,OAAO,CAACE,GAAG,EF3OA,CAAE,IAAI,EAAE,CAAE,CAAC;MACrC92G,EE4OE,GF5OG,CAACC,CE4OChY,YAAK,CAACC,MF5Oa,CAAE,EE4ON,EF5OU,EAAE,CAAE,CAAC;MAErC,IE4OG,GF5OI,CE4OC,GF5OG,CE4OC,CAAC4oL,UAAU,KAAK,KAAK,IAAI,IAAI,CAACK,SAAS,KAAK,KAAK,EAAG;IF1OjE,ME4OI,IAAI,CAACsH,yBAAyB,CAAEjjL,KAAM,CAAC;EF5O1C,QE8OG,IAAI,CAACkhH,KAAK,GAAGg5D,MAAM,CAACG,eAAe;IF9OtC3oL,GAAA,GEgPG;IFhPHnG,IEkPE,CFlPF,EAED,EEgPQkH,OFhPRiY,KEgPa,CAAC/X,QFhPA+X,CAAErJ,CAAC,EAAG,AEgPM;MF9OzB,IAAM+I,AEgPH,EFhPK,EEgPA,CFhPG/I,CAAC,CAACyF,CEgPD,CAACw0K,MFhPQ,IEgPE,KAAK,KAAK,IAAI,IAAI,CAACE,YAAY,KAAK,KAAK,EAAG;MF9OnE,IAAI,AEgPD,CFhPE/2K,GAAG,AEgPD,CF9ON2F,AE8OO84K,EF9OL,CAAE,CAAC,CAAE,EAAE94K,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,AE6O0B,CAAEpK,CF7O1B,CAAE,CAAC,CAAE,CE6O2B,CF7OzBoK,AE6O0B,EF7OxB,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAEzB,CAAC;MAED,IE0OG,GF1OI,CE0OA,CAAC82G,EF1OG,GE0OE,GAAGg5D,MAAM,CAACI,kBAAkB;IFxO1C,ME0OI;EF1OH,ME4OE;IF5OF5oL,GAAA,GE8OG,IAAI,CAACwvH,KAAK,GAAGg5D,MAAM,CAAClf,IAAI;IF9O3BzvK,EEgPC,GFhPD,EAED,SAAAkb,QAAQA,CAAEpF,CAAC,EAAG;MAEb,AE8OC,OF9OM,IAAI,CAACsJ,gBAAgB,CAAE,IAAI,EAAEtJ,CAAE,CAAC;IAExC,AE8OC;EF9OA,IEgPC,IAAI,CAAC6/G,KAAK,GAAGg5D,MAAM,CAAClf,IAAI;EAE1B,EFlPCtpK,GAAA;EEoPD,EFpPCnG,EEoPI,GFpPJ,CEoPQ,CFlPT,AEkPU21H,KAAK,IFlPft2G,CEkPoBsvK,MAAM,CAAClf,GFlPhBpwJ,CAAEvJ,AEkPkB,CFlPjB,CEkPoB,CFlPjB;IEoPhB,EFlPA,EEkPI,CAACtB,IFlPE,IAAI,CAAC4K,IEkPM,CAAEivK,WFlPQ,AEkPI,CFlPFv4K,AEkPG,CFlPF,EAAE,IAAK,CAAC;EEoPxC,EFlPA;AEoPD,EFpPE;AEsPF,IFtPE3P,GAAA,EEsPOotL,WAAWA,CAAE9+K,KAAK,EAAG;EAE7B,EFxPCzU,EEwPG,CAACu4L,EFxPJ,EAED,SAAAn5K,AEsPkB,CAAE3K,KAAM,CAAC,SFtPX2K,CAAEjf,CAAC,EAAEmY,CAAC,EAAG;EEwPzB,IFtPC,IAAMgH,AEsPE,EFtPA,EEsPI,CFtPDnf,AEsPEw1H,CFtPD,CAACp6G,GEsPK,KFtPG;IEwPrB,EFvPA,GEuPKozK,CFvPCpvK,EAAE,GAAGjH,AEuPA,CFvPC,AEuPAs2K,CFvPCrzK,QAAQ,GEuPG;MFtPxB,AEwPC,IFxPKoD,AEwPA,EFxPE,EEwPE,CFxPC,AEwPAsxK,IFxPI,CAAC10K,OEwPO,CFxPC,IEwPI,KAAK,EAAG;MFtPpC,AEwPC,IFxPKiE,AEwPD,CAACo4K,EFxPG,GAAGt4K,EAAE,CAAE,CAAC,CAAE,YEwPS,CAAE7K,KAAM,CAAC;MAEpC,EF1PoBgL,EE0PhB,CF1PmB,AE0PlB0R,GF1PqB7R,EAAE,CAAE,AE0PnB,CF1PoB,AE0PnB,CF1PqB,AE0PpB;MAEb,EF5PmCI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;IE8PjD,EF7PA,GE6PKqvK,CF7PChvK,GAAG,EE6PE,CF7PCL,AE6PAuvK,EF7PE,CAAE,CAAC,CAAE,IE6PE;MAEpB,EF/PoBjvK,EE+Pf,CF/PkB,GAAGN,AE+PjB,CAAC8wK,CF/PkB,CAAE,CAAC,CAAE,KE+Pd,KAAK,KAAK,EAAG;MAEhC,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,CDilGH,GAAG,CCjlGK,CAAC2rF,UAAU;IAE7B,ED+kGev4E,EC/kGTpF,ED+kGa,EAAJoF,EC/kGH,ED+kGO,CC/kGJzE,EAAE,CAACg1G,YAAY,CAAC,CAAC;IAEhCh1G,ED6kGqB4D,AC7kGnB,CAACsxG,ID6kGuB,EAALtxG,IC7kGR,CD6kGa,AC7kGXqxG,UAAU,EAAE51G,MAAO,CAAC;IACnCW,ED4kG4B6D,AC5kG1B,CAACsxG,KD4kG+B,EAANtxG,GC5kGf,CAAEoxG,ED4kGmB,QC5kGT,EAAE5jH,KAAK,EAAEwqC,KAAM,CAAC;IAEzC1hC,ED0kGoCqQ,KAAK,EAALA,AC1kG3B,CAACwxB,gBAAgB,CAAC,CAAC;ID0kGc,ACxkG1C,CDwkG2C,GCxkGvCn+C,IAAI;ID0kGRiuB,ACxkGA,IAAKza,EDwkGL,CAAK8U,ECxkGK,ODwkGI,GAAGje,ECxkGK8N,WDwkGQ,CCxkGI,EAAG;IDykGrC8V,ECvkGCjuB,IDukGD,ACvkGK,CDukGAuoB,ECvkGGpG,EAAE,CAACo1G,IDukGG,CCvkGE,EDukGCltH,aAAa;IAE9B4jB,ACvkGA,CAAC,KDukGD,CAAKE,ACvkGE,IAAK3a,CDukGF,GAAGrJ,CCvkGI,YAAYkO,MDukGG,KCvkGQ,EAAG;IDykG3C4V,ECvkGC,IDukGD,ACvkGM3R,CDukGD6M,QCvkGU,CAAC+2B,MDukGI,GAAG,KAAK,UCvkGY,EAAG;IDwkG3CjyB,ICtkGEjuB,EDskGF,CAAKqpB,CCtkGC,GAAGlH,CDskGC,CCtkGC,CAACq1G,CDskGC,KAAK,ICtkGI;IDukGtBvpG,ECrkGC,CAAC,GDqkGF,CAAK3E,ECrkGG,aDqkGY,GAAG,CAAC;IAExB2E,ICrkGEjuB,EDqkGF,CAAKouB,CCrkGC,GAAGjM,EAAE,CAACs1G,KDqkGK,GAAG,IAAIppG,ECrkGE,CDqkGC,CAAC,CAAC;IAAC,ECnkG7B,KDmkG6BJ,MAAA;EAE/B,ECnkGC,CAAC,MAAM,IAAKza,KAAK,YAAYgF,UAAU,EAAG;EDmkG1CoR,ICjkGC5pB,IAAI,CDikGL,CAAA+tB,CCjkGQ5L,EAAE,CAACu1G,KAAK,OD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;IAEZ,AC9iGC;ED8iGA,EC7iGAm8G,cAAc,EAAE;ID6iGhB5hI,EC7iGkBnG,CD6iGlB,IC7iGuB,EAAE,EAAE;ID6iG3BA,EC7iG6BwmI,GD6iG7B,EAED,KC/iGwC,EAAE,ED+iG1CrsH,SAASA,CAAEC,MAAM,EAAG;MAEnB,EChjGCwK,EDgjGG,CAAC5O,CAAC,CChjGA,EDgjGGoE,AChjGD,CAAC,CAAC,IDgjGK;MACf,EChjGCsqB,EDgjGG,CAAChjC,CAAC,GAAG0Y,CChjGA,EAAE,CAAC,CAAC,CDgjGE;MACf,EChjGC8M,EDgjGG,CAAC0E,CAAC,CChjGA,EDgjGGxR,AChjGD,CAAC,CAAC,IDgjGK;MAEf,ECjjGC+M,KDijGM,CCjjGA,EAAE,CDijGE,ACjjGD;IDmjGX,ECljGC;EDkjGA,ECljGE,CAAC;IDkjGHhhB,AChjGA6hI,GDgjGA,EChjGK,EAAE;IDgjGPhoI,EChjGSA,GDgjGT,EAED,ACljGe,EAAE,ODkjGjBqa,IAAIA,CAAErE,CAAC,EAAG;ICljGY,CAAC,CDojGtB,IAAI,CAACA,CAAC,GAAGA,CAAC;ICnjGViyH,EDqjGA,GCrjGK,EAAE,EDqjGA,IAAI;IAEZ,ECvjGUjoI,KAAK,EAAE;EDujGhB,ECvjGqB;EAEtB,CAAC,CDqjGAmG,GAAA;ECnjGD2yB,EDmjGC94B,ICnjGK,CDmjGL,CCnjGO,CDqjGR,SAAAsa,IAAIA,CAAE5Y,CAAC,EAAG;ICnjGT+iI,EDqjGA,IAAI,CAAC/iI,ACrjGE,CDqjGD,CCrjGG,EDqjGAA,CAAC;MAEV,ACvjGW1B,KAAK,EDujGT,ACvjGW,IDujGP,SCvjGqB,IAAI0zC,gBAAK,CAAE,QAAS;IDyjGrD,ACzjGuD,CAAC;EDyjGvD,ECxjGA6C,OAAO,EAAE;IDwjGTpwC,ECxjGWnG,CDwjGX,ICxjGgB,EAAE;IDwjGlBA,ACxjGsB,CAAC,IDwjGvB,EAED,SAAA+rB,IAAIA,CAAEH,CAAC,EAAG;ICzjGToN,ED2jGA,EC3jGI,ED2jGA,AC3jGE,CD2jGDpN,CAAC,GAAGA,CAAC;MAEV,AC7jGQ5rB,KAAK,ED6jGN,AC7jGQ,ID6jGJ;IAEZ,AC/jGoB,CAAC;ED+jGpB,EC9jGA8hB,KAAK,EAAE;ID8jGP3b,EC9jGSnG,CD8jGT,IC9jGc,EAAE;ID8jGhBA,AC9jGoB,CAAC,ID8jGrB,EAED,SAAAua,YAAYA,CAAEjG,KAAK,EAAEtU,KAAK,EAAG;IC/jG5B2tC,EDikGA,CCjkGG,EAAE,KDikGIr5B,KAAK;MCjkGPtU,EDmkGN,GCnkGW,EDmkGN,ACnkGQ,CDmkGP;ICnkGY,CAAC,KDmkGX,IAAI,CAACgW,CAAC,GAAGhW,KAAK;IClkGvB26C,MDkkGyB,EClkGjB,EAAE;MAAE36C,EDmkGX,GCnkGgB,EDmkGX,ACnkGa,CDmkGZ;ICnkGiB,CAAC,KDmkGhB,IAAI,CAAC0B,CAAC,GAAG1B,KAAK;IClkGvB2kI,MDkkGyB,WClkGR,EAAE;MAAE3kI,EDmkGpB,GCnkGyB,EDmkGpB,ACnkGsB,CDmkGrB,YCnkGmC,IAAIge,kBAAO,CAAC;IAAE,CAAC,KDmkGhD,IAAI,CAAC4N,CAAC,GAAG5rB,KAAK;IClkGvB+8C,MDkkGyB,GClkGhB,EAAE;MAAE/8C,EDmkGZ,GCnkGiB,EAAE;IAAE,CAAC,KDmkGb,MAAM,IAAI6C,KAAK,CAAE,yBAAyB,GAAGyR,KAAM,CAAC;IClkG9D4zH,EDokGA,SCpkGW,EAAE;MDskGb,ACtkGeloI,KAAK,EDskGb,ACtkGe,IDskGX,SCtkGyB,IAAIge,kBAAO,CAAC;IDwkGjD,ACxkGmD;EDwkGlD,ACtkGD,CAAC;EAEDkiD,EDokGC/5D,GAAA,CCpkGK,EAAE;IDokGPnG,AClkGAykI,KDkkGA,EAED,ACpkGQ,EAAE,ODokGVjqH,YAAYA,CAAElG,KAAK,EAAG;MAErB,ACtkGWtU,KAAK,EAAE,CDskGTsU,KAAK,OCtkGkB,IAAIo/B,gBAAK,CAAE,QAAS;IAAE,CAAC,GDwkGtD,KAAK,CAAC;ICvkGP6C,MDukGS,CCvkGF,EAAE,IDukGO,IAAI,CAACvgC,CAAC;MCvkGXhW,EDwkGV,GCxkGe,EDwkGV,ACxkGY,CDwkGX;ICxkGe,CAAC,KDwkGd,OAAO,IAAI,CAAC0B,CAAC;ICvkGtBmc,IDwkGC,ECxkGK,EAAE,CDwkGF,CAAC;MCxkGG7d,IDwkGD,CCxkGM,EAAE,IDwkGD,IAAI,CAAC4rB,CAAC,GCxkGS,IAAI5R,kBAAO,CAAE,GAAG,EAAE,GAAI;IAAE,CAAC,GDykGvD;ICxkGD2H,MDwkGU,ECxkGF,EAAE,EDwkGM,IAAI9e,KAAK,CAAE,yBAAyB,GAAGyR,KAAM,CAAC;MAE9D,AC1kGYtU,KAAK,EAAE;ID4kGpB,AC5kGwB,CAAC;ED4kGxB,EC3kGA2tC,GAAG,EAAE;ID2kGLxnC,EC3kGOnG,CD2kGP,IC3kGY,EAAE;ID2kGdA,AC3kGmB,CAAC,ID2kGpB,EAED,SAAAya,KAAKA,CAAA,EAAG;IC5kGPiqH,ED8kGA,OAAO,GC9kGK,CD8kGD,CC9kGG,GD8kGC,CAACjgI,WAAW,CAAE,IAAI,CAACuR,CAAC,EAAE,IAAI,CAACtU,CAAC,EAAE,IAAI,CAACkqB,CAAE,CAAC;IAEtD,EChlGiB5rB,KAAK,EAAE,aAAc,IAAIge,kBAAO,CAAC;EDglGjD,EChlGmD,CAAC;IDglGpD7X,AC/kGAw0C,GD+kGA,KC/kGQ,EAAE;ID+kGV36C,EC/kGYA,GD+kGZ,EAED,ACjlGkB,EAAE,ODilGpB0a,IAAIA,CAAE1Y,CAAC,EAAG;ICjlGe,CAAC,CDmlGzB,IAAI,CAACgU,CAAC,GAAGhU,CAAC,CAACgU,CAAC;ICllGZ2uH,EDmlGA,IAAI,CAACjjI,CAAC,GAAGM,CAAC,CAACN,CAAC,GCnlGK,EAAE;MDolGnB,ACplGqB1B,IDolGjB,CAAC4rB,ACplGqB,CDolGpB,CCplGsB,EDolGnB5pB,CAAC,CAAC4pB,CAAC,QCplG8B,IAAI5N,kBAAO,CAAC;IAAE,CAAC,CDslGzD,OAAO,IAAI;IAEZ,ACvlGC++B,SAAS,EAAE;EDulGX,ICvlGa/8C,KAAK,EAAE;IDulGpBmG,ACvlGsB,GDulGtB;ECrlGD,EDqlGCnG,KAAA,EAED,SAAA2a,GAAGA,CAAE3Y,CAAC,EAAG;ACrlGV,CAAC,KDulGC,IAAI,CAACgU,CAAC,IAAIhU,CAAC,CAACgU,CAAC;ACrlGf,IAAMmyH,EDslGJ,IAAI,CAACzmI,CAAC,CCtlGO,GDslGHM,ACtlGG0E,CDslGF,CAAChF,CAAC,ICtlGA,CAAAymI,SAAA,GAAG;EAEjBC,IDqlGC,CCrlGI,EAAE,CDqlGF,CAACx8G,CAAC,IAAI5pB,CAAC,CAAC4pB,CAAC;ICnlGbw+B,EDqlGA,MCrlGQ,CDqlGD,CCrlGG,GDqlGC,UCrlGa,IAAAD,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACU,QAAQ,EACpBV,WAAW,CAACnnF,GAAG,CACd,CAAC;IDglGJ,AC9kGCkO,YAAY,EAAE82E,WAAW,CAACe,cAAc;ED8kGxC,EC7kGA53E,cAAc,EAAE62E,WAAW,CAACgB;EAE7B,CAAC,CD2kGAl9H,GAAA;ECzkGDkiI,EDykGCroI,KAAA,ACzkGM,ED2kGP,AC3kGS,SD2kGT4a,SAASA,CAAEnZ,CAAC,EAAG;ICzkGd2oD,ED2kGA,IAAI,CAACp0C,CAAC,AC3kGE,EAAE,ED2kGAvU,CAAC,UC3kGa,IAAA0oD,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACU,QAAQ,EACpBV,WAAW,CAACkB,WAAW,EACvBlB,WAAW,CAACY,OAAO,EACnBZ,WAAW,CAACc,SAAS,EACrBd,WAAW,CAACgB,eAAe,EAC3BhB,WAAW,CAACnnF,GAAG,EACfmnF,WAAW,CAAC/4E,MAAM,EAClB;MDgkGD,AC/jGEnS,ID+jGE,CAAC53C,CAAC,EC/jGI,ED+jGAD,AC/jGE,CD+jGD;MACX,EChkGczB,EDgkGV,CAAC4rB,CAAC,CChkGa,EAAE,CDgkGXnqB,CAAC,WChkGwB,IAAIiyC,gBAAK,CAAE,QAAS;MDkkGvD,AClkGyD,ODkkGlD,IAAI;IAEZ,ACnkGE,CAAC,CACA,CAAC;EDkkGH,EChkGA6X,YAAY,EAAE82E,WAAW,CAACiB,gBAAgB;IDgkG1Cn9H,AC/jGAqlD,GD+jGA,WC/jGc,EAAE62E,WAAW,CAACkB;EAE7B,CAAC,CD6jGAvjI,KAAA,EAED,SAAA6a,UAAUA,CAAE1a,CAAC,EAAEmY,CAAC,EAAG;EC7jGnBgwH,ID+jGC,CC/jGI,EAAE,CD+jGF,CAACtyH,CAAC,GAAG7V,CAAC,CAAC6V,CAAC,GAAGsC,CAAC,CAACtC,CAAC;IC7jGlBo0C,ED8jGA,IAAI,CAAC1oD,CAAC,AC9jGE,EAAE,CD8jGDvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC,GC9jGM,IAAAyoD,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACU,QAAQ,EACpBV,WAAW,CAACkB,WAAW,EACvBlB,WAAW,CAACY,OAAO,EACnBZ,WAAW,CAACc,SAAS,EACrBd,WAAW,CAACgB,eAAe,EAC3BhB,WAAW,CAACnnF,GAAG,EACfmnF,WAAW,CAAC/4E,MAAM,EAClB;MDmjGD,ACljGEnS,IDkjGE,CAAC1tB,CAAC,ECljGI,CDkjGDzrB,CAAC,ACljGE,CDkjGDyrB,CAAC,GAAGtT,CAAC,CAACsT,CAAC;MAElB,ECpjGc5rB,KDojGP,ACpjGY,EAAE,EDojGV,WCpjGwB,IAAI0zC,gBAAK,CAAE,QAAS;IDsjGxD,ECtjG0D,CAAC;EDsjG1D,ICrjGE8F,QAAQ,EAAE;IDqjGZrzC,GAAA,CCrjGcnG,KAAK,EAAE,aAAc,IAAI0zC,gBAAK,CAAE,QAAS;IDqjGvD1zC,ECrjGyD,CAAC,EDqjG1D,EAED,SAAA8a,eAAeA,CAAE9Y,CAAC,EAAEP,CAAC,EAAG;MAEvB,ACxjGEk4C,IDwjGE,CAAC3jC,CAAC,GCxjGK,CDwjGDhU,CAAC,ACxjGE,CDwjGDgU,CAAC,GAAGvU,CAAC;MACjB,ECzjGezB,EDyjGX,CAAC0B,CAAC,CCzjGc,EAAE,CDyjGZM,CAAC,CAACN,CAAC,GAAGD,CAAC;MACjB,AC1jGyB,ID0jGrB,CAACmqB,CAAC,IAAI5pB,CAAC,CAAC4pB,CAAC,GAAGnqB,CAAC;ICzjGhB,CAAC,CD2jGF,AC1jGE,CAAC,MD0jGI,IAAI;IAEZ,AC1jGC8pD,YAAY,EAAE82E,WAAW,CAACuB,cAAc;ED0jGxC,ECzjGAp4E,cAAc,EAAE62E,WAAW,CAACwB;EAE7B,CAAC,CDujGA19H,GAAA;ECrjGDoiI,EDqjGCvoI,KAAA,CCrjGO,CDujGR,CCvjGU,QDujGV+a,GAAGA,CAAE/Y,CAAC,EAAG;ICrjGRooD,EDujGA,IAAI,CAACp0C,CAAC,ACvjGE,EAAE,EDujGAhU,CAAC,CAACgU,CAAC,QCvjGW,IAAAm0C,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACU,QAAQ,EACpBV,WAAW,CAACkB,WAAW,EACvBlB,WAAW,CAACY,OAAO,EACnBZ,WAAW,CAACc,SAAS,EACrBd,WAAW,CAACgB,eAAe,EAC3BhB,WAAW,CAACsB,YAAY,EACxBtB,WAAW,CAACoB,YAAY,EACxBpB,WAAW,CAACnnF,GAAG,EACfmnF,WAAW,CAAC/4E,MAAM,EAClB;MD2iGD,AC1iGEnS,ID0iGE,CAAC53C,CAAC,EC1iGI,ED0iGAM,AC1iGE,CD0iGD,CAACN,CAAC;MACb,EC3iGc1B,ED2iGV,CAAC4rB,CAAC,CC3iGa,EAAE,CD2iGX5pB,CAAC,CAAC4pB,CAAC,SC3iGsB,IAAI8nB,gBAAK,CAAE,QAAS;MD6iGvD,AC7iGyD,CAAC,MD6iGnD,IAAI;IAEZ,EC9iGGuF,SAAS,EAAE;ED8iGb,MC9iGej5C,KAAK,EAAE;ID8iGtBmG,EC9iG0B,CD8iG1B,AC9iG2B;ID8iG3BnG,EC7iGEk5C,GD6iGF,EAED,IC/iGY,EAAE,GD+iGdl+B,SAASA,CAAEvZ,CAAC,EAAG;MAEd,ECjjGezB,EDijGX,CAACgW,CAAC,CCjjGc,EAAE,CDijGZvU,CAAC;MACX,ACljG0B,CAAC,GDkjGvB,CAACC,CAAC,IAAID,CAAC;MACX,ACljGEw6C,IDkjGE,CAACrwB,CAAC,IAAInqB,CAAC,ICljGM,EAAE;MDojGnB,ECpjGqBzB,KDojGd,ACpjGmB,EAAE,EDojGjB;IAEZ,ECtjG+B;EDsjG9B,ECrjGC,CAAC,CACA,CAAC;IDojGHmG,ACljGAolD,GDkjGA,SCljGY,EAAE82E,WAAW,CAACyB,iBAAiB;IDkjG3C9jI,ACjjGAwrD,KDijGA,EAED,OCnjGe,EDmjGfvwC,ACnjGiBonH,UDmjGPpnH,CAAE9a,ACnjGgB,CDmjGf,ACnjGgB4jI,EDmjGdzrH,CAAC,EAAG;ECjjGnB,CAAC,GDmjGA,IAAI,CAACtC,CAAC,GAAG7V,CAAC,CAAC6V,CAAC,GAAGsC,CAAC,CAACtC,CAAC;ECjjGnBwyH,IDkjGC,ACljGG,EAAE,EDkjGD,CAAC9mI,CAAC,GAAGvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC;IChjGlB0oD,EDijGA,IAAI,CAACx+B,CAAC,ACjjGE,EAAE,CDijGDzrB,CAAC,CAACyrB,CAAC,GAAGtT,CAAC,CAACsT,CAAC,GCjjGM,IAAAu+B,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACU,QAAQ,EACpBV,WAAW,CAACkB,WAAW,EACvBlB,WAAW,CAACY,OAAO,EACnBZ,WAAW,CAACc,SAAS,EACrBd,WAAW,CAACgB,eAAe,EAC3BhB,WAAW,CAACwB,WAAW,EACvBxB,WAAW,CAACnnF,GAAG,EACfmnF,WAAW,CAAC/4E,MAAM,EAClB;MDwiGD,ACviGEnS,ODuiGK,CCviGG,EAAE,CDuiGD;IAEZ,ICziGet5C,KAAK,EAAE,aAAc,IAAI0zC,gBAAK,CAAE,QAAS;EDyiGvD,ICziGyD;IDyiGzDvtC,ACxiGC,CAAC,CACA,CDuiGF,ACviGG;IDuiGHnG,ACriGAurD,KDqiGA,EAED,KCviGa,EAAE82E,EDuiGfnnH,QAAQA,CAAElZ,ACviGgB,CDuiGf,ACviGgBgiI,EDuiGb,WCviG0B;IACvCx4E,EDwiGA,IAAI,CAACx1C,CAAC,IAAIhU,CAAC,CAACgU,ACxiGE,CDwiGD,CCxiGGqsH,WAAW,CAAC4B;EAE7B,CAAC,GDuiGA,IAAI,CAACviI,CAAC,IAAIM,CAAC,CAACN,CAAC;ECriGdg5C,IDsiGC,ECtiGK,EDsiGD,ACtiGG,CDsiGF9uB,CAAC,IAAI5pB,CAAC,CAAC4pB,CAAC;ICpiGbw+B,EDsiGA,MCtiGQ,CDsiGD,CCtiGG,GDsiGC,UCtiGa,IAAAD,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACY,OAAO,EACnBZ,WAAW,CAACc,SAAS,EACrBd,WAAW,CAACgB,eAAe,EAC3BhB,WAAW,CAACnnF,GAAG,EACf;IDkiGF,ECjiGG3C,MAAM,EAAE;EDiiGV,MCjiGY16C,KAAK,EAAE;IDiiGnBmG,ECjiGwB,CDiiGxB;IAAAnG,AChiGC,CAAC,CACA,CAAC,ED+hGH,EAED,SAAAmb,cAAcA,CAAEf,MAAM,EAAG;IC/hGxBmxC,EDiiGA,IAAI,CAACv1C,CAAC,IAAIoE,ACjiGE,EAAEioH,IDiiGE,OCjiGS,CAACmB,eAAe;IACzCh4E,EDiiGA,IAAI,CAAC9pD,CAAC,IAAI0Y,ECjiGI,EAAEioH,EDiiGA,SCjiGW,CAACoB;EAE7B,CAAC,GDgiGA,IAAI,CAAC73G,CAAC,IAAIxR,MAAM;EC9hGjB0e,IDgiGC,EChiGK,EAAE,GDgiGA,IAAI;IAEZ,AChiGCsxB,QAAQ,EAAE,aAAc,IAAAD,wBAAa,EAAE,CACtCq6E,WAAW,CAAC1rG,MAAM,EAClB0rG,WAAW,CAACnnF,GAAG,CACd,CAAC;ED6hGH,EC3hGAkO,YAAY,EAAE82E,WAAW,CAAC6B,WAAW;ID2hGrC/9H,AC1hGAqlD,GD0hGA,WC1hGc,EAAE62E,WAAW,CAAC8B;EAE7B,CAAC,CDwhGAnkI,KAAA,EAED,SAAAq1B,eAAeA,CAAEl1B,CAAC,EAAEmY,CAAC,EAAG;ECxhGxBmwH,ID0hGC,EC1hGK,ED0hGD,AC1hGG,CD0hGFzyH,CAAC,GAAG7V,CAAC,CAAC6V,CAAC,GAAGsC,CAAC,CAACtC,CAAC;ICxhGlBo0C,EDyhGA,IAAI,CAAC1oD,CAAC,ACzhGE,EAAE,CDyhGDvB,CAAC,CAACuB,CAAC,GAAG4W,CAAC,CAAC5W,CAAC,GCzhGM,IAAAyoD,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACnnF,GAAG,EACf;MDuhGD,ACthGEv7B,IDshGE,CAAC8J,ACthGE,CDshGD,CCthGG,EDshGAzrB,CAAC,CAACyrB,CAAC,GAAGtT,CAAC,CAACsT,CAAC;MAElB,ECxhGW5rB,KDwhGJ,ACxhGS,EAAE,EDwhGP;IAEZ,EC1hGqB,CAAC;ED0hGrB,ICzhGE68C,QAAQ,EAAE;IDyhGZ12C,GAAA,CCzhGcnG,KAAK,EAAE;IDyhGrBA,ECzhGuB,CAAC,EDyhGxB,EAED,SAAAs1B,UAAUA,CAAEpE,KAAK,EAAG;MAEnB,AC5hGEw3G,OD4hGK,EC5hGI,ED4hGA,AC5hGE,CD4hGDnzG,eAAe,CAAEC,aAAa,CAACvE,YAAY,CAAEC,KAAM,CAAE,CAAC;IAEnE,IC9hGgBlxB,KAAK,EAAE;ED8hGtB,IC9hGwB;ID8hGxBmG,AC7hGC,CAAC,CACA,CD4hGF,AC5hGG;ID4hGHnG,AC1hGAurD,KD0hGA,EAED,KC5hGa,EAAE82E,ED4hGf5sG,SC5hG0B,CAACytG,ID4hGbztG,CAAE/D,IAAI,EAAEtV,IC5hGoB,CD4hGf,EAAG;IC3hG7BovC,ED6hGA,OAAO,IAAI,CAACj2B,AC7hGE,EAAE8sG,WAAW,CAACc,CD6hGD,CAAE3tG,aAAa,CAAC/D,gBAAgB,CAAEC,IAAI,EAAEtV,KAAM,CAAE,CAAC;EC3hG7E,CAAC,CD6hGD;EAAC,AC3hGD0R,KAAK,EAAE;ID2hGN3nB,ACzhGAikD,GDyhGA,KCzhGQ,EAAE,aAAc,IAAAD,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACgB,eAAe,CAC1B,CAAC;IDshGHxlI,ACphGAurD,KDohGA,EAED,KCthGa,EAAE82E,EDshGf/mH,SCthG0B,CAACsnH,EDshGftnH,CAAExF,CAAC,EAAG,ICthGmB;IACpC01C,EDuhGA,IAAMx1C,CAAC,GAAG,IAAI,ACvhGA,CDuhGCA,CAAC,ACvhGAqsH,WAAW,CAACQ;EAE7B,CAAC,KDqhGkBnhI,CAAC,GAAG,IAAI,CAACA,CAAC;ECnhG7B41B,MDmhG+B1L,ACnhGzB,CDmhG0B,CCnhGxB,EDmhG2B,IAAI,CAACA,CAAC;ICjhGxCw+B,EDkhGA,IAAM7qD,CAAC,CClhGC,EDkhGEuW,AClhGA,CDkhGC,CAACyF,QAAQ,GClhGI,IAAA4uC,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACY,OAAO,EACnBZ,WAAW,CAACc,SAAS,EACrBd,WAAW,CAACgB,eAAe,EAC3B;MD+gGD,AC9gGEjvF,ID8gGE,CAACvgC,CAAC,CC9gGG,ED8gGAzW,AC9gGE,CD8gGD,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGqsB,CAAC;MAC7C,EC/gGa5rB,ED+gGT,CAAC0B,CAAC,CC/gGY,ED+gGTnC,AC/gGW,CD+gGV,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGqsB,CAAC;MAC7C,AChhGwB,IDghGpB,CAACA,CAAC,GAAGrsB,CAAC,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGqsB,CAAC;IC/gG5C,CAAC,CDihGF,AChhGE,CAAC,MDghGI,IAAI;IAEZ,AChhGC2/B,YAAY,EAAE82E,WAAW,CAACqB,eAAe;EDghGzC,EC/gGAl4E,cAAc,EAAE62E,WAAW,CAACsB;EAE7B,CAAC,CD6gGAx9H,GAAA;EC3gGD+5D,ED2gGClgE,IC3gGK,CD2gGL,CC3gGO,CD6gGR,SAAA01B,iBAAiBA,CAAE5f,CAAC,EAAG;IC3gGtBs0C,ED6gGA,MC7gGQ,CD6gGD,CC7gGG,GD6gGC,CAAC9uC,SC7gGY,GD6gGA,CAAExF,AC7gGFq0C,CD6gGI,CAAC,CAACtwC,SAAS,CAAC,CAAC,UC7gGJ,EAAE,CACtC2qH,WAAW,CAACtkE,MAAM,EAClBskE,WAAW,CAACnnF,GAAG,CACd,CAAC;ID4gGJ,AC1gGCkO,YAAY,EAAE82E,WAAW,CAACiC,WAAW;ED0gGrC,ECzgGA94E,cAAc,EAAE62E,WAAW,CAACkC;EAE7B,CAAC,CDugGAp+H,GAAA;ECrgGDmpC,EDqgGCtvC,KAAA,EAED,CCvgGU,EAAE,MDugGZisB,YAAYA,CAAEnW,CAAC,EAAG;ICrgGjBs0C,EDugGA,IAAMp0C,CAAC,CCvgGC,EDugGE,ACvgGA,IDugGI,CAACA,CAAC;MCtgGfkyH,EDsgGiBxmI,CAAC,GAAG,IAAI,CAACA,ACtgGf,CDsgGgB,CCtgGd;QDsgGgBkqB,ACtgGd5rB,CDsgGe,GAAG,CCtgGb,EAAE,CDsgGe,CAAC4rB,CAAC,UCtgGH,IAAI5N,kBAAO,CAAC;MDugGjD,ACvgGmD,CAAC,GDugG9Cze,CAAC,GAAGuW,CAAC,CAACyF,QAAQ;MAEpB,ACxgGCotH,GAAG,CDwgGE98G,CAAC,ACxgGD,GDwgGI,CAAC,IAAKtsB,CAAC,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,GAAGqsB,CAAC,GAAGrsB,CAAC,CAAE,EAAE,CAAE,CAAE;MAEjE,EC1gGQS,ED0gGJ,CAACgW,CAAC,CC1gGO,ED0gGJ,AC1gGM,CD0gGJzW,CAAC,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGqsB,CAAC,GAAGrsB,CAAC,CAAE,EAAE,CAAE,IAAKssB,CAAC;MAC/D,AC3gGoB,CAAC,GD2gGjB,CAACnqB,CAAC,GAAG,CAAEnC,CAAC,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGqsB,CAAC,GAAGrsB,CAAC,CAAE,EAAE,CAAE,IAAKssB,CAAC;MAC/D,AC3gGCspC,ID2gGG,CAACvpC,CAAC,GAAG,CAAErsB,CAAC,CAAE,CAAC,CAAE,GAAGyW,CAAC,CC3gGD,ED2gGIzW,AC3gGF,CD2gGG,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,GAAGqsB,CAAC,GAAGrsB,CAAC,CAAE,EAAE,CAAE,IAAKssB,CAAC;MAEhE,EC7gGwB7rB,KD6gGjB,AC7gGsB,EAAE,ED6gGpB;IAEZ,EC/gGkC;ED+gGjC,EC9gGA,CAAC;ID8gGDmG,AC5gGAolD,GD4gGA,SC5gGY,EAAE82E,WAAW,CAACC,eAAe;ID4gGzCtiI,AC3gGAwrD,KD2gGA,EAED,OC7gGe,ED6gGfj2B,AC7gGiB8sG,WAAW,CAACE,GD6gGdhtG,CAAEld,CAAC,EAAG;EC3gGrB,CAAC,GD6gGA;EC3gGDuwH,cAAc,EAAE;IAEfx+E,ED2gGA,IAAMz0B,EAAE,AC3gGA,EAAE,CD2gGC,IAAI,CAAC3f,CAAC;MC1gGhB8lC,ED0gGkBlmB,EAAE,EC1gGd,CD0gGiB,CC1gGf,GD0gGmB,CAACl0B,CAAC;QAAEm0B,AC1gGrB71B,ED0gGuB,GAAG,AC1gGrB,EAAE,ED0gGuB,CAAC4rB,CAAC;MAC3C,AC3gGuB,CAAC,GD2gGlBkK,EAAE,GAAGzd,CAAC,CAACrC,CAAC;MC1gGb+uH,ED0gGehvG,EAAE,GAAG1d,CAAC,CAAC3W,CAAC,AC1gGb,EAAE;QD0gGas0B,AC1gGXh2B,ED0gGa,GAAGqY,AC1gGX,CD0gGY,CAACuT,AC1gGX,CD0gGY,AC1gGV;MAAE,CAAC,CD0gGSqK,EAAE,GAAG5d,CAAC,CAACwT,CAAC;MCzgG3CqpC,oBAAoB,EAAE;MD2gGvB,EC3gGyBl1D,KAAK,EAAE;MD4gGhC,AC5gGkC,CAAC,GD4gG7BuhB,EAAE,GAAG,CAAC,IAAKwU,EAAE,GAAGF,EAAE,GAAGG,EAAE,GAAGJ,EAAE,CAAE;MACpC,AC5gGCu/B,ID4gGK3zC,EAAE,GAAG,CAAC,IAAKwU,EAAE,GAAGL,AC5gGF,ED4gGI,AC5gGF,GD4gGKG,EAAE,GAAGD,EAAE,CAAE;MACpC,EC7gGwB71B,ED6gGlBk2B,EAAE,CC7gGqB,ED6gGlB,AC7gGoB,CD6gGnB,IAAKJ,EAAE,GAAGF,EAAE,GAAGG,EAAE,GAAGJ,EAAE,CAAE;MC7gGH,CAAC;MD+gGlC,AC9gGCy/B,kBAAkB,EAAE;MD+gGrB,EC/gGuBp1D,ED+gGnB,CAACgW,CAAC,CC/gGsB,ED+gGnB2f,AC/gGqB,ED+gGnB,GAAGM,EAAE,GAAG1U,EAAE,CC/gGuB,ED+gGpBwU,EAAE,AC/gGsB/X,GD+gGnBkY,EAAE,GAAGF,EAAE,GAAGxU,EAAE,GC/gGc,CAAC;MDghGxD,AChhG0D,IDghGtD,CAAC9f,CAAC,GAAGk0B,EAAE,GAAGK,EAAE,GAAGzU,EAAE,GAAGwU,EAAE,GAAGzU,EAAE,GAAGuU,EAAE,GAAGI,EAAE;IC/gGzC,CAAC,CDghGD,IAAI,CAACtK,CAAC,GAAGiK,EAAE,GAAGI,EAAE,GAAGC,EAAE,GAAGJ,EAAE,GAAGtU,EAAE,GAAGuU,EAAE,GAAGxU,EAAE;IC9gGzCgqC,EDghGA,OAAO,GChhGK,CDghGD,CChhGG82E,WAAW,CAACG,mBAAmB;IDkhG9C,ACjhGCh3E,cAAc,EAAE62E,WAAW,CAACI;EDihG5B,AC/gGD,CAAC;EAEDoG,ED6gGC1iI,EC7gGG,CD6gGH,CC7gGK;ID6gGLnG,AC3gGAoqD,KD2gGA,EAED,CC7gGS,EAAE,MD6gGXj0B,OAAOA,CAAEC,MAAM,EAAG;MAEjB,AC9gGC0yG,KAAK,ED8gGC,AC9gGC,ID8gGG,CAAC78G,YAAY,CAAEmK,MAAM,CAACC,kBAAmB,CAAC,CAACpK,YAAY,CAAEmK,MAAM,CAACnS,gBAAiB,CAAC;IAE9F,IChhGWjkB,KAAK,EAAE;EDghGjB,IChhGsB,CAAC;IDghGvBmG,EC/gGC4iI,CD+gGD,IC/gGM,EAAE;ID+gGR/oI,IC/gGUA,CD+gGV,EAED,ECjhGgB,EAAE,CAAE,IDihGpBs2B,SAASA,CAAEF,MAAM,EAAG;MAEnB,ACnhGqB,CAAC,MDmhGf,IAAI,CAACnK,YAAY,CAAEmK,MAAM,CAACG,uBAAwB,CAAC,CAACtK,YAAY,CAAEmK,MAAM,CAACI,WAAY,CAAC;IAE9F,ECphGE+f,OAAO,EAAE;EDohGV,MCphGYv2C,KAAK,EAAE;IDohGnBmG,ECphGuB,CDohGvB;IAAAnG,ACnhGA,CAAC,IDmhGD,EAED,SAAAy2B,kBAAkBA,CAAE3gB,CAAC,EAAG;ICnhGvBy1C,EDqhGA,UCrhGY,EAAE82E,WAAW,CAACK,SAAS;IACnCl3E,EDqhGA,YCrhGc,EAAE62E,WAAW,CAACM;EAE7B,CAAC;EAEDqG,IDmhGC,IAAMhzH,ACnhGC,CDmhGA,CCnhGE,EDmhGC,IAAI,CAACA,CAAC;ICjhGhBo0C,IDihGkB1oD,CAAC,GAAG,ACjhGd,EAAE,EDihGgB,CAACA,CAAC;MChhG3BwvD,EDghG6BtlC,CAAC,GAAG,GChhGxB,CDghG4B,CAACA,AChhG3B,CDghG4B;MACxC,ECjhGc5rB,EDihGRT,CAAC,ECjhGY,CDihGTuW,CAAC,ACjhGU,CDihGTyF,QAAQ;MAEpB,ACnhG0B,IDmhGtB,CAACvF,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGqsB,CAAC;IClhG7C,CAAC,CDmhGD,IAAI,CAAClqB,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGyW,CAAC,GAAGzW,CAAC,CAAE,CAAC,CAAE,GAAGmC,CAAC,GAAGnC,CAAC,CAAE,CAAC,CAAE,GAAGqsB,CAAC;ICjhG7C2/B,EDkhGA,IAAI,CAAC3/B,CAAC,GAAGrsB,CAAC,AClhGE,CDkhGA,CAAC,AClhGC8iI,CDkhGC,GAAGrsH,CAAC,GAAGzW,CAAC,CAAE,CAAC,AClhGD,CDkhGG,AClhGFyjI,GDkhGKthI,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE,CClhGH,EDkhGMqsB,CAAC;ICjhG9C4/B,EDmhGA,OAAO,IAAI,CAAC3xC,ACnhGE,EAAEwoH,ODmhGK,CAAC,CAAC,ECnhGI,CAACY;EAE7B,CAAC,CDmhGD;EAAC,ACjhGDgG,YAAY,EAAE;IDihGb9iI,AC/gGAikD,GD+gGA,KC/gGQ,EAAE,aAAc,IAAAD,wBAAa,EAAE,CACtCq6E,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACgB,eAAe,EAC3B;ID4gGDxlI,EC3gGEkpI,GD2gGF,EAED,SAAA9tH,GC7gGoB,EAAE,CD6gGhBA,CAAEpZ,CAAC,EAAG;MAEX,EC/gGuBhC,ED+gGnB,CAACgW,CAAC,CC/gGsB,EAAE,CD+gGpBhU,CAAC,CAACgU,CAAC,SC/gG+B,IAAImf,kBAAO,CAAC;MDghGxD,AChhG0D,CAAC,GDghGvD,CAACzzB,CAAC,IAAIM,CAAC,CAACN,CAAC;MACb,AChhGEynI,IDghGE,CAACv9G,CAAC,IAAI5pB,CAAC,CAAC4pB,AChhGE,CDghGD,CChhGG;MDkhGhB,EClhGkB5rB,KDkhGX,AClhGgB,EAAE,EDkhGd;IAEZ,ECphG4B,CAAC;EDohG5B,ICnhGEopI,WAAW,EAAE;IDmhGfjjI,GAAA,CCnhGiBnG,KAAK,EAAE;IDmhGxBA,ECnhG6B,GDmhG7B,EAED,SAAAqb,YAAYA,CAAEjB,MAAM,EAAG;ICphGrB,CAAC,CDshGF,ACrhGE,CAAC,MDqhGI,IAAI,CAACe,cAAc,CAAE,CAAC,GAAGf,MAAO,CAAC;IAEzC,ACrhGCmxC,YAAY,EAAE82E,WAAW,CAACS,iBAAiB;EDqhG3C,ECphGAt3E,cAAc,EAAE62E,WAAW,CAACU;EAE7B,CAAC,CDkhGA58H,GAAA;EChhGDk9F,EDghGCrjG,IChhGK,CDghGL,CChhGO,CDkhGR,SAAA2V,GAAGA,CAAE3T,CAAC,EAAG;IChhGRooD,EDkhGA,IAAI,CAACp0C,CAAC,AClhGE,EAAE,CDkhGDjB,IAAI,CAACY,GAAG,CAAE,GClhGK,CDkhGD,CAACK,CAAC,CClhGDm0C,CDkhGGnoD,CAAC,CAACgU,CAAE,CAAC,mBClhGK,EAAE,CACtCwuH,WAAW,CAAC/4E,MAAM,EAClB+4E,WAAW,CAACnnF,GAAG,EACf;MDghGD,AC/gGEz4B,ID+gGE,CAACljB,AC/gGE,CD+gGD,CC/gGG,ED+gGAqT,IAAI,CAACY,GAAG,CAAE,IAAI,CAACjU,CAAC,EAAEM,CAAC,CAACN,CAAE,CAAC;MAChC,EChhGW1B,EDghGP,CAAC4rB,CAAC,CChhGU,EDghGP7W,AChhGS,IDghGL,CAACY,GAAG,CAAE,IAAI,AChhGS,CDghGRiW,CAAC,EAAE5pB,AChhGS0xC,CDghGR,CAAC9nB,CAAE,CAAC,YChhGS,CAAE,OAAQ;MDkhGnD,AClhGqD,CAAC,MDkhG/C,IAAI;IAEZ,ECnhGG2qB,OAAO,EAAE;EDmhGX,MCnhGav2C,KAAK,EAAE;IDmhGpBmG,ECnhGwB,CDmhGxB;IAAAnG,AClhGC,CAAC,CACA,CAAC,EDihGH,EAED,SAAA4V,GAAGA,CAAE5T,CAAC,EAAG;ICjhGRupD,EDmhGA,IAAI,CAACv1C,CAAC,GAAGjB,CCnhGG,EAAEstH,CDmhGD,CAACzsH,GAAG,CAAE,IAAI,CAACI,ACnhGC,CDmhGA,ACnhGCouH,EDmhGCpiI,CAAC,CAACgU,CAAE,CAAC,KCnhGK;IACrCw1C,EDmhGA,IAAI,CAAC9pD,CAAC,GAAGqT,GCnhGK,CDmhGD,CAACa,ACnhGEysH,GDmhGC,CAAE,IAAI,CAAC3gI,CAAC,CCnhGE,CDmhGAM,ACnhGCqiI,CDmhGA,CAAC3iI,CAAE,CAAC;ECjhGjC,IDkhGC,IAAI,CAACkqB,CAAC,GAAG7W,IAAI,CAACa,GAAG,CAAE,IAAI,CAACgW,CAAC,EAAE5pB,CAAC,CAAC4pB,CAAE,CAAC;AChhGlC,CAAC,KDkhGC,OAAO,IAAI;AChhGbu8G,IDkhGC,KClhGQ,CAACkB,QAAQ,GAAG;EDkhGnB,AChhGDj/E,QAAQ,EAAE,aAAc,IAAAD,wBAAa,EAAE,CACtCg+E,SAAS,CAACI,QAAQ,CAACn+E,QAAQ,EAC3B;ID8gGAjkD,AC7gGCyzC,GD6gGD,MC7gGU,EAAE;ID6gGZ55C,EC7gGcA,GD6gGd,EAED,AC/gGoB,EAAE,OD+gGtB0V,KAAKA,CAAEC,GAAG,EAAEC,GAAG,EAAG;IC/gGM,CAAC,CDihGxB;IChhGCkkC,YAAY,EAAE;MDkhGf,AClhGiB95C,IDkhGb,CAACgW,AClhGiB,CDkhGhB,CClhGkB,EDkhGfN,MAAK,CAAE,IAAI,CAACM,CAAC,EAAEL,GAAG,CAACK,CAAC,EAAEJ,GAAG,CAACI,CAAE,CAAC;IClhGT,CAAC,CDmhG9B,IAAI,CAACtU,CAAC,GAAGgU,MAAK,CAAE,IAAI,CAAChU,CAAC,EAAEiU,GAAG,CAACjU,CAAC,EAAEkU,GAAG,CAAClU,CAAE,CAAC;IClhGrC4nI,EDmhGD,IAAI,CAAC19G,CAAC,GAAGlW,MAAK,CAAE,GCnhGM,CDmhGF,CAACkW,ACnhGG,CDmhGF,EAAEjW,GAAG,CAACiW,CAAC,EAAEhW,GAAG,CAACgW,CAAE,CAAC;MAEtC,ACrhG0B5rB,KAAK,EDqhGxB,ACrhG0B,IDqhGtB,SCrhGoC,IAAIge,kBAAO,CAAC;IDuhG5D,ACvhG8D,CAAC;EDuhG9D,ECthGCg8B,kBAAkB,EAAE;IDshGrB7zC,ECthGuBnG,CDshGvB,ICthG4B,EAAE;IDshG9BA,ACthGmC,CAAC,IDshGpC,EAED,SAAAwb,WAAWA,CAAEC,MAAM,EAAEC,MAAM,EAAG;ICvhG5B6tH,EDyhGD,IAAI,CAACvzH,CAAC,GAAGN,MAAK,CAAE,IAAI,CAACM,CAAC,EAAEyF,CCzhGI,EAAE,GDyhGA,EAAEC,MAAO,CAAC;MACxC,AC1hGgC1b,ID0hG5B,CAAC0B,AC1hGgC,CD0hG/B,CC1hGiC,ED0hG9BgU,MAAK,CAAE,IAAI,AC1hGiC,CD0hGhChU,CAAC,EAAE+Z,AC1hGiCuC,MD0hG3B,EAAEtC,MAAO,CAAC,GC1hGwB,CAAC;IAAE,CAAC,CD2hGpE,IAAI,CAACkQ,CAAC,GAAGlW,MAAK,CAAE,IAAI,CAACkW,CAAC,EAAEnQ,MAAM,EAAEC,MAAO,CAAC;IC1hGvCu+B,ED4hGD,OAAO,IAAI,OC5hGU,EAAE;ID8hGxB,EC9hG0Bj6C,KAAK,EAAE,aAAc,IAAIga,kBAAO,CAAE,CAAC,EAAE,CAAE;ED8hGhE,EC9hGkE,CAAC;ID8hGnE7T,AC7hGC0zC,GD6hGD,eC7hGmB,EAAE;ID6hGrB75C,EC7hGuBA,GD6hGvB,EAED,AC/hG6B,EAAE,OD+hG/B2b,WAAWA,CAAEhG,GAAG,EAAEC,GAAG,EAAG;IC/hGS,CAAC,CDiiGjC,IAAMtR,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;IChiG3By1C,EDkiGD,OAAO,IAAI,CAAC1+B,OCliGU,EAAE,GDkiGA,CAAE/W,MAAM,IAAI,CAAE,CAAC,CAAC6W,cAAc,CAAEzF,MAAK,CAAEpR,MAAM,EAAEqR,GAAG,EAAEC,GAAI,CAAE,CAAC;IAEpF,ECpiG2B5V,KAAK,EAAE;EDoiGjC,ECpiGsC,CAAC;IDoiGvCmG,ACniGCqjI,GDmiGD,2BCniG+B,EAAE;IDmiGjCxpI,ECniGmCA,GDmiGnC,EAED,ACriGyC,EAAE,ODqiG3CmX,KAAKA,CAAA,ACriGoD,EDqiGjD,ECriGqD6G,kBAAO,CAAC;IAAE,CAAC,CDuiGvE,IAAI,CAAChI,CAAC,GAAGjB,IAAI,CAACoC,KAAK,CAAE,IAAI,CAACnB,CAAE,CAAC;ICtiG5BkkC,EDuiGD,IAAI,CAACx4C,CAAC,ECviGK,CDuiGFqT,CCviGI,GDuiGA,CAACoC,KAAK,CAAE,IAAI,CAACzV,CAAE,CAAC;MAC7B,ACxiGe1B,IDwiGX,CAAC4rB,ACxiGe,CDwiGd,CCxiGgB,EDwiGb7W,IAAI,CAACoC,KAAK,CAAE,IAAI,CAACyU,CAAE,CAAC;ICxiGL,CAAC,CD0iGzB,OAAO,IAAI;IAEZ,AC3iGEuuB,WAAW,EAAE;ED2iGd,IC3iGgBn6C,KAAK,EAAE;ID2iGvBmG,AC3iGyB,CAAC,ED2iG1B;IAAAnG,AC1iGCs6C,KD0iGD,EAED,OC5iGgB,ED4iGhBtiC,AC5iGkB,ID4iGdA,CAAA,EAAG;MAEN,AC9iGmBhY,ID8iGf,CAACgW,AC9iGmB,CD8iGlB,CC9iGoB,ED8iGjBjB,IAAI,CAACiD,IAAI,CAAE,IAAI,CAAChC,CAAE,CAAC;IC9iGG,CAAC,CD+iGhC,IAAI,CAACtU,CAAC,GAAGqT,IAAI,CAACiD,IAAI,CAAE,IAAI,CAACtW,CAAE,CAAC;IC9iG3B+nI,ED+iGD,IAAI,CAAC79G,CAAC,GAAG7W,IAAI,CAACiD,IAAI,CAAE,EC/iGI,ED+iGA,AC/iGE,CD+iGD4T,CAAE,CAAC;MAE5B,ACjjG4B5rB,KAAK,EDijG1B,ACjjG4B,IDijGxB,SCjjGsC,IAAIge,kBAAO,CAAC;IDmjG9D,ACnjGgE,CAAC;EDmjGhE,ECljGCo8B,cAAc,EAAE;IDkjGjBj0C,ECljGmBnG,CDkjGnB,ICljGwB,EAAE;IDkjG1BA,ACljG8B,CAAC,IDkjG/B,EAED,SAAA8Z,KAAKA,CAAA,EAAG;ICnjGN4vH,EDqjGD,IAAI,CAAC1zH,CAAC,GAAGjB,IAAI,CAAC+E,KAAK,CAAE,IAAI,CAAC9D,ACrjGE,CDqjGA,CAAC,ACrjGC;MDsjG9B,ACtjGgChW,IDsjG5B,CAAC0B,ACtjGgC,CDsjG/B,CCtjGiC,EDsjG9BqT,IAAI,CAAC+E,KAAK,CAAE,IAAI,CAACpY,CAAE,CAAC;ICtjGc,CAAC,CDujG5C,IAAI,CAACkqB,CAAC,GAAG7W,IAAI,CAAC+E,KAAK,CAAE,IAAI,CAAC8R,CAAE,CAAC;ICtjG5B+9G,EDwjGD,OAAO,IAAI,cCxjGiB,EAAE;ID0jG/B,EC1jGiC3pI,KAAK,EAAE;ED0jGvC,EC1jG2C,CAAC;ID0jG5CmG,ACzjGCo0C,GDyjGD,oBCzjGwB,EAAE;IDyjG1Bv6C,ECzjG4BA,GDyjG5B,EAED,AC3jGkC,EAAE,OD2jGpC4b,WAAWA,CAAA,EAAG;IC3jG2B,CAAC,CD6jGzC,IAAI,CAAC5F,CAAC,GAAGjB,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAAC7F,CAAE,CAAC;IC5jG5B4zH,ED6jGD,IAAI,CAACloI,CAAC,GAAGqT,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAACna,CAAE,CAAC,GC7jGI,EAAE;MD8jGnC,AC9jGqC1B,ID8jGjC,CAAC4rB,AC9jGqC,CD8jGpC,CC9jGsC,ED8jGnC7W,IAAI,CAAC8G,KAAK,CAAE,AC9jGqC,ID8jGjC,AC9jGqCmC,CD8jGpC4N,CAAE,CAAC,eC9jGwC,CAAC;IAAE,CAAC,CDgkGzE,OAAO,IAAI;IAEZ,ACjkGEutB,KAAK,EAAE;EDikGR,ICjkGUn5C,KAAK,EAAE;IDikGjBmG,ACjkGmB,CAAC,EDikGpB;IAAAnG,AChkGCo5C,KDgkGD,EAED,GClkGY,EAAE,IDkkGdt9B,MAAMA,CAAA,EAAG;MAER,ACpkGe9b,IDokGX,CAACgW,ACpkGe,CDokGd,CCpkGgB,EDokGb,CAAE,IAAI,CAACA,CAAC,ICpkGmB,IAAI09B,gBAAK,CAAE,QAAS;IAAE,CAAC,CDqkG3D,IAAI,CAAChyC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;ICpkGhB6rF,EDqkGD,IAAI,CAAC3hE,CAAC,GAAG,CAAE,CCrkGG,EAAE,CDqkGD,CAACA,CAAC;MAEjB,ACvkGkB5rB,KAAK,EDukGhB,ACvkGkB,IDukGd;IAEZ,ACzkG+B,CAAC;EDykG/B,ECxkGC6pI,sBAAsB,EAAE;IDwkGzB1jI,ECxkG2BnG,CDwkG3B,ICxkGgC,EAAE,aAAc,IAAIge,kBAAO,CAAC;IDwkG5Dhe,ACxkG8D,CAAC,IDwkG/D,EAED,SAAA+b,GAAGA,CAAE/Z,CAAC,EAAG;ICzkGPq3C,ED2kGD,OAAO,IAAI,CAACrjC,AC3kGG,CD2kGF,CC3kGI,ED2kGDhU,CAAC,CAACgU,CAAC,GAAG,IAAI,CAACtU,CAAC,GAAGM,CAAC,CAACN,CAAC,GAAG,IAAI,CAACkqB,CAAC,GAAG5pB,CAAC,CAAC4pB,CAAC;IAElD,EC7kGoB5rB,KAAK,EAAE;IAAE,CAAC;ID+kG9B,AC9kGEwtF,iBAAiB,EAAE;ED8kGrB,IC9kGuBxtF,KAAK,EAAE;ID8kG9BmG,AC9kGmC,CAAC,ED8kGpC;IAAAnG,AC7kGE8pI,KD6kGF,EAEA,SAAA7tH,QAAQA,CAAA,CC/kGoB,CD+kGjB,CC/kGmB;MDilG7B,ACjlG+Bjc,KAAK,EDilG7B,ACjlG+B,IDilG3B,CAACgW,CAAC,GAAG,IAAI,ACjlGgC,CDilG/BA,CAAC,ECjlGkCgI,CDilG/B,IAAI,CAACtc,CAAC,GAAG,IAAI,CAACA,CAAC,ECjlGuB,CDilGpB,ACjlGqB,IDilGjB,CAACkqB,CAAC,GAAG,IAAI,CAACA,CAAC;IAE3D,ACnlGmE,CAAC;EDmlGnE,ECllGCywB,YAAY,EAAE;IDklGfl2C,ECllGiBnG,CDklGjB,ICllGsB,EAAE;IDklGxBA,ACllG0B,CAAC,IDklG3B,EAED,SAAAsE,MAAMA,CAAA,EAAG;ICnlGPg4C,EDqlGD,OAAOvnC,IAAI,CAACmH,CCrlGI,EAAE,CDqlGF,CAAE,IAAI,CAAClG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACtU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACkqB,CAAC,GAAG,IAAI,CAACA,CAAE,CAAC;IAExE,ECvlGqB5rB,KAAK,EAAE;EDulG3B,ECvlGgC,CAAC;IDulGjCmG,ACtlGC4jI,GDslGD,qBCtlGyB,EAAE;IDslG3B/pI,ECtlG6BA,GDslG7B,EAED,ACxlGmC,EAAE,ODwlGrCmc,MCxlGmD,IAAI6B,KDwlGxC7B,CAAA,EAAG,UCxlG4C,CAAC;IAAE,CAAC,CD0lGjE,OAAOpH,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAACb,CAAE,CAAC,GAAGjB,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAACnV,CAAE,CAAC,GAAGqT,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAAC+U,CAAE,CAAC;IAEpE,AC3lGEo+G,uBAAuB,EAAE;ED2lG1B,IC3lG4BhqI,KAAK,EAAE,aAAc,IAAIga,kBAAO,CAAC;ID2lG7D7T,AC3lG+D,CAAC,ED2lGhE;IAAAnG,AC1lGCiqI,KD0lGD,EAED,SAAApwH,MC5lGwB,EAAE,CD4lGjBA,CAAA,EAAG;MAEX,AC9lG2B7Z,KAAK,ED8lGzB,AC9lG2B,ID8lGvB,CAACqb,YAAY,CAAE,IAAI,CAAC/W,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C,AChmGwC,CAAC;EDgmGxC,EC/lGCi4C,SAAS,EAAE;ID+lGZp2C,EC/lGcnG,CD+lGd,IC/lGmB,EAAE;ID+lGrBA,AC/lGuB,CAAC,ID+lGxB,EAED,SAAA+c,SAASA,CAAEzY,MAAM,EAAG;IChmGlBk4C,EDkmGD,OAAO,GClmGM,CDkmGF,CAAC3iC,AClmGG,SDkmGM,CAAC,CAAC,CAACsB,cAAc,CAAE7W,MAAO,CAAC;IAEjD,ECpmGkBtE,KAAK,EAAE;EDomGxB,ECpmG6B,CAAC;IDomG9BmG,ACnmGC+jI,GDmmGD,kBCnmGsB,EAAE;IDmmGxBlqI,ECnmG0BA,GDmmG1B,EAED,ACrmGgC,EAAE,ODqmGlCsW,IAAIA,CAAEtU,CAAC,ACrmGyC,EDqmGvCgb,ECrmG2CgB,GDqmGtC,EAAG,aCrmG0C,CAAC;IAAE,CAAC,CDumG9D,IAAI,CAAChI,CAAC,IAAI,CAAEhU,CAAC,CAACgU,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKgH,KAAK;ICtmGjCy/B,EDumGD,IAAI,CAAC/6C,CAAC,IAAI,CAAEM,CAAC,CAACN,CAAC,GAAG,ACvmGE,EAAE,EDumGA,CAACA,CAAC,IAAKsb,KAAK;MAClC,ACxmGwBhd,IDwmGpB,CAAC4rB,ACxmGwB,CDwmGvB,CCxmGyB,GDwmGrB,CAAE5pB,CAAC,CAAC4pB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK5O,KAAK;ICxmGD,CAAC,CD0mGlC,OAAO,IAAI;IAEZ,AC3mGE0/B,gBAAgB,EAAE;ED2mGnB,IC3mGqB18C,KAAK,EAAE,aAAc,IAAI0zC,gBAAK,CAAE,QAAS;ID2mG9DvtC,AC3mGgE,CAAC,ED2mGjE;IAAAnG,AC1mGC05C,KD0mGD,EAED,MC5mGe,EAAE,CD4mGjBz8B,WAAWA,CAAEC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,AC9mGkBhd,ID8mGd,CAACgW,AC9mGkB,CD8mGjB,CC9mGmB,ED8mGhBkH,EAAE,CAAClH,CAAC,GAAG,CAAEmH,EAAE,CAACnH,AC9mGkB,CD8mGjB,GAAGkH,AC9mGkBw2B,ED8mGhB,CAAC19B,CAAC,IAAKgH,KAAK,GC9mGS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE;IAAE,CAAC,CD+mG7D,IAAI,CAACtb,CAAC,GAAGwb,EAAE,CAACxb,CAAC,GAAG,CAAEyb,EAAE,CAACzb,CAAC,GAAGwb,EAAE,CAACxb,CAAC,IAAKsb,KAAK;IC9mGtC6+B,ED+mGD,IAAI,CAACjwB,CAAC,GAAG1O,EAAE,CAAC0O,CAAC,CC/mGI,ED+mGD,AC/mGG,CD+mGDzO,EAAE,CAACyO,CAAC,GAAG1O,EAAE,CAAC0O,CAAC,IAAK5O,KAAK;MAEvC,ACjnGqBhd,KAAK,EDinGnB,ACjnGqB,IDinGjB;IAEZ,ACnnGkC,CAAC;EDmnGlC,EClnGCmqI,yBAAyB,EAAE;IDknG5BhkI,EClnG8BnG,CDknG9B,IClnGmC,EAAE,aAAc,IAAIge,kBAAO,CAAC;IDknG/Dhe,AClnGiE,CAAC,IDknGlE,EAED,SAAAgc,KAAKA,CAAEha,CAAC,EAAG;ICnnGTy3C,EDqnGD,OAAO,IAAI,CAAC/iB,GCrnGM,EAAE,ODqnGI,CAAE,IAAI,EAAE10B,CAAE,CAAC;IAEpC,ECvnGuBhC,KAAK,EAAE;EDunG7B,ECvnG+B,CAAC;IDunGhCmG,ACtnGCy1C,GDsnGD,iBCtnGqB,EAAE;IDsnGvB57C,ECtnGyBA,GDsnGzB,EAED,ACxnG+B,EAAE,ODwnGjC02B,YAAYA,CAAEv2B,CAAC,EAAEmY,CAAC,EAAG;ICxnGiB,CAAC,CD0nGtC,IAAMqe,EAAE,GAAGx2B,CAAC,CAAC6V,CAAC;ICznGbo0H,IDynGexzG,EAAE,GAAGz2B,CAAC,CAACuB,CAAC,iBCznGM,EAAE;MAAE1B,EDynGR62B,EAAE,CCznGW,EDynGR12B,ACznGU,CDynGT,CAACyrB,CAAC,UCznGqB,IAAI5N,kBAAO,CAAC;IAAE,CAAC,CD0nGtE,IAAM8Y,EAAE,GAAGxe,CAAC,CAACtC,CAAC;ICznGbq0H,IDynGetzG,EAAE,GAAGze,CAAC,CAAC5W,CAAC,ICznGP,EAAE;MAAE1B,EDynGKg3B,EAAE,CCznGF,EDynGK1e,ACznGH,CDynGI,CAACsT,CAAC,UCznGQ,IAAI5R,kBAAO,CAAC;IAAE,CAAC,CD2nGzD,IAAI,CAAChE,CAAC,GAAG4gB,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;IC1nGzB0jB,ED2nGD,IAAI,CAAC/4C,CAAC,GAAGm1B,EAAE,AC3nGG,EAAE,CD2nGFC,EAAE,GAAGH,EAAE,GAAGK,EAAE;MAC1B,AC5nGkBh3B,ID4nGd,CAAC4rB,AC5nGkB,CD4nGjB,CC5nGmB,ED4nGhB+K,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;IC5nGI,CAAC,CD8nG/B,OAAO,IAAI;IAEZ,AC/nGEwzG,sBAAsB,EAAE;ED+nGzB,IC/nG2BtqI,KAAK,EAAE,aAAc,IAAIge,kBAAO,CAAC;ID+nG5D7X,AC/nG8D,GD+nG9D;EC9nGA,CAAC,CD8nGDnG,AC7nGC,CAAC,ID6nGF,EAED,SAAAi3B,eAAeA,CAAEj1B,CAAC,EAAG;EC7nGrBupD,ID+nGC,IAAMhvC,IC/nGK,EAAE8lH,KD+nGI,GAAGrgI,CAAC,CAACia,CC/nGE,CAAC6nH,MD+nGK,CAAC,CAAC,SC/nGU;EAC3Ct4E,IDgoGC,IAAKjvC,MChoGQ,EAAE8lH,GDgoGC,KAAK,CAAC,EAAG,AChoGC,CAAC0B,MDgoGK,IAAI,CAAC7qH,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AC9nGrD,CAAC,KDgoGC,IAAMkB,MAAM,GAAGpY,CAAC,CAAC+Z,GAAG,CAAE,IAAK,CAAC,GAAGQ,WAAW;AC9nG5C,IAAMguH,EDgoGJ,EChoGQ,GAAG,EDgoGJ,IAAI,CAAC7vH,IAAI,CAAE1Y,CAAE,CAAC,CAACmZ,cAAc,CAAEf,MAAO,CAAC;EChoGjC3a,CAAC,CDkoGf,CCloGiB,CAAC;EDkoGjB,ACloGmB6Y,CAAC,EAAE,CAAC;EAAEpW,CAAC,CDkoG1BiE,CCloG4B,EDkoG5B;ACloG8B,CAAC,GDkoG/BnG,KAAA,EAED,SAAAk3B,cAAcA,CAAEC,WAAW,EAAG;ACnoG/B,IAAMqzG,EDqoGJpzG,GCroGS,GAAG,GDqoGH,CAAC1c,IAAI,CAAE,IAAK,ACroGK,CDqoGJ,CAACuc,ECroGOiP,aDqoGQ,CAAE/O,ECroGL,CAAC,CAAC,ODqoGe,CAAC;ACpoGvD,IAAMoQ,EDsoGJ,GCtoGS,GAAG,CDsoGL,IAAI,CAACxsB,GAAG,CAAEqc,GCtoGS,IAAIyJ,EDsoGH,CAAC,eCtoGS,CAAC,CAAC;AAEzC,IDsoGC,KCtoGQ4pG,eAAeA,CAAEjgF,QAAQ,EAAEkgF,QAAQ,EAAEC,UAAU,EAAEhV,KAAK,EAAE/V,OAAO,EAAE5iG,KAAK,EAAEw7B,kBAAkB,EAAG;EDsoGpG,ACpoGD,IAAMoyF,UAAU,GAAG,IAAIl3F,gBAAK,CAAE,QAAS,CAAC;EACxC,EDmoGCvtC,ECnoGG0kI,CDmoGH,SCnoGa,GAAG7tH,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;EAEvC,EDioGChd,ECjoGG8qI,GDioGH,EAED,ICnoGa,KDmoGbzzG,OAAOA,CAAEC,MAAM,EAAG;ECloGlB,IDooGC,ACpoGGyzG,OAAO;EAEX,IDmoGC,ACnoGGC,iBAAiB,GAAG,IAAI;EAC5B,IAAIC,wBAAwB,GAAG,CAAC;EAChC,IDmoGC,ACnoGGC,ODmoGI,IAAI,CAACnwH,GAAG,CAAEqc,ECnoGI,GAAG,IDmoGE,ACnoGE,CDmoGD1c,IAAI,CAAE4c,MAAO,CAAC,CAACnc,cAAc,CAAE,CAAC,GAAG,IAAI,CAACY,GAAG,CAAEub,MAAO,CAAE,CAAE,CAAC;ECjoGrF,EDmoGA,OCnoGS6zG,aAAaA,CAAEt7E,KAAK,EAAG;EDmoG/B,ECjoGA,IAAIvgB,UAAU,GAAGugB,KAAK,CAACxgB,OAAO,KAAK,IAAI,GAAGwgB,KAAK,CAACvgB,UAAU,GAAG,IAAI;IDioGjEnpC,AC/nGA,GD+nGA,CC/nGKmpC,UAAU,IAAIA,UAAU,CAACvlB,SAAS,EAAG;ID+nG1C/pB,EC7nGC,GD6nGD,CC7nGOorI,CD+nGR,OC/nGgB,ED+nGhB9uH,CC/nGmBuzC,KAAK,CD+nGjBvzC,AC/nGkB44C,CD+nGhBlzD,CAAC,EAAG,gBC/nGgC,GAAG,CAAC,CAAC,CAAC;MDioGlD,AChoGCstC,IDgoGK/yB,MChoGK,GAAG,CAAE6uH,CDgoGC,GAAGr2H,IAAI,AChoGA,CDgoGCmH,EChoGEyuH,EDgoGE,CAAE,IAAI,CAAC1uH,EChoGC,GAAGyuH,GDgoGI,CAAC,CAAC,GAAG1oI,AChoGD,CDgoGE,CAACia,AChoGA/B,GAAG,CAAEo1B,IDgoGG,CAAC,CAAE,CAAC,GChoGI,CAAC;IAEpE,EDgoGA,IAAK/yB,WAAW,KAAK,CAAC,EAAG,OAAOxH,IAAI,CAACC,EAAE,GAAG,CAAC;IC9nG3C,EDgoGA,IAAMwH,CChoGC8yB,IDgoGI,GAAG,GChoGG,CDgoGC,CAACvzB,GAAG,CAAE/Z,CAAE,CAAC,GAAGua,WAAW;EC9nG1C;EAEA,ID8nGC,KC9nGQ+zC,MAAMA,CAAET,KAAK,EAAG;IAExB,IAAIw7E,UAAU,GAAG,KAAK;IACtB,ED6nGA,EC7nGM/7F,KD6nGCv6B,IAAI,CAAC0H,AC7nGI,GAAG0uH,CD6nGH,CAAEz1H,MAAK,CAAE8G,IC7nGO,CD6nGF,AC7nGIqzC,ED6nGF,CAAE,CAAC,CC7nGK,CD6nGH,AC7nGI,CD6nGF,CAAE,CAAC;IAE3C,AC7nGC,IAAKvgB,UAAU,KAAK,IAAI,EAAG;ED6nG3B,IC3nGCg8F,QAAQ,CAAEV,UAAU,EAAEC,UAAW,CAAC;ID2nGnC1kI,ACznGA,CAAC,EDynGD,ICznGO,IAAKmpC,UAAU,IAAIA,UAAU,CAACC,OAAO,EAAG;IDynG/CvvC,ECvnGCsrI,GDunGD,EAED,GCznGU,CAAEh8F,KDynGZ5yB,KCznGsB,EAAE,CAAE,CAAC,CDynGjBA,CAAE1a,CAAC,EAAG;MAEf,AC1nGCqpI,OD0nGMt2H,GC1nGI,CD0nGA,CAACmH,CC1nGE,GD0nGE,CAAE,AC1nGA,ID0nGI,CAACS,iBAAiB,CAAE3a,CAAE,CAAE,CAAC;IAEhD,AC1nGC;ED0nGA,ECxnGA,IAAMupI,oBAAoB,GAAG/gF,QAAQ,CAAC4F,EAAE,CAACo7E,uBAAuB,CAAC,CAAC;IDwnGlErlI,ACtnGA,GDsnGA,CCtnGKolI,oBAAoB,KAAK,UAAU,EAAG;IDsnG3CvrI,ECpnGC21H,GDonGD,EAED,ACtnGO,CAACyC,OAAO,CDsnGfz7G,ACtnGgBiI,KAAK,CAAC0mH,QAAQ,CAAE,CAAC,CDsnGhB3uH,CAAE3a,ACtnGgB,CDsnGf,ACtnGgB,EDsnGb,ACtnGe,CAAC,EAAE,CAAC,EAAEw2C,kBAAmB,CAAC;IAE/D,CAAC,CDsnGD,IAAM57B,CCtnGC,CDsnGC,GAAG,ACtnGC2uH,IDsnGG,CAACv1H,CAAC,GAAGhU,CAAC,CAACgU,CAAC,QCtnGS,KAAK,aAAa,EAAG;MAEpD2/G,EDonGwB94G,EAAE,CCpnGrB,CAACu7G,CDonGuB,IAAI,CAAC12H,CAAC,ACpnGtB,CAACkjB,EDonGwB5iB,CAAC,CAACN,CAAC,ACpnGtB,CAAC4pI,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE9yF,kBAAmB,CAAC;IAE/D,IDknG4CjhB,EAAE,GAAG,IAAI,CAAC3L,CAAC,GAAG5pB,CAAC,CAAC4pB,CAAC;IChnG7D,EDknGA,EClnGK4+B,KDknGE5tC,EAAE,CClnGI,CAAC6uH,CDknGF7uH,EAAE,GAAGC,EAAE,CClnGI,EDknGDA,EAAE,AClnGGwuH,GDknGA9zG,EAAE,GAAGA,EAAE,AClnGG,EAAG;IDonGzC,EClnGE;EDknGD;IAAApxB,EChnGCwvH,CDgnGD,IChnGM,CAACyC,OAAO,CAACtqG,KAAK,CAAC49G,OAAO,CAAE,IAAK,CAAC;IDgnGpC1rI,EC/mGC21H,GD+mGD,EAED,ACjnGO,CAACyC,OAAO,CDinGft7G,ACjnGgBgR,KAAK,CAAC69G,OAAO,CAAE,IAAK,CDinGjB7uH,ACjnGkB,CDinGhB9a,CAAC,EAAG;MAExB,AClnGC2zH,KAAK,CAACyC,CDknGArjH,IAAI,CAAC8B,CClnGE,CAAC+N,CDknGA,CAAE,GClnGG,CDknGC,AClnGA+mH,CDknGC31H,CAAC,GAAGhU,CAAC,CAACgU,AClnGA,CDknGE,AClnGA,CDknGC,GAAGjB,AClnGC,CAAC,GDknGE,CAAC8B,GAAG,CAAE,IAAI,CAACnV,CAAC,GAAGM,CAAC,CAACN,CAAE,CAAC,GAAGqT,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAAC+U,CAAC,GAAG5pB,CAAC,CAAC4pB,CAAE,CAAC;IAEtF,EClnGE4+B,QAAQ,CAAC56B,KAAK,CAAE46B,QAAQ,CAACohF,cAAc,EAAEphF,QAAQ,CAACqhF,cAAc,EAAErhF,QAAQ,CAACshF,gBAAiB,CAAC;EDknG9F,EChnGA;EAED,ED8mGC3lI,GAAA;EC5mGD,ED4mGCnG,KAAA,EAED,AC9mGS+rI,SD8mGTv0G,MC9mGwBu0G,CAAEC,SD8mGVx0G,CAAE/1B,AC9mGkB,CD8mGjB,CC9mGmBouD,CD8mGhB,IC9mGqB,EAAG;IAE7C,ED8mGA,EC9mGMvgB,KD8mGC,IAAI,CAAC7X,AC9mGI,GAAG0zG,aAAa,CAAEt7E,KD8mGA,AC9mGM,CD8mGJpuD,AC9mGK,CD8mGJ,CAACi2B,MAAM,EAAEj2B,CAAC,CAACk2B,GAAG,EAAEl2B,CAAC,CAAC+a,KAAM,CAAC;IAE/D,AC9mGC,IAAK8yB,UAAU,KAAMA,UAAU,CAACqhB,aAAa,IAAIrhB,UAAU,CAACjmB,OAAO,KAAKje,kCAAuB,CAAE,EAAG;ED8mGpG,IC5mGC,IAAK2/H,OAAO,KAAK/2H,SAAS,EAAG;ID4mG9B7N,GAAA,CC1mGE4kI,OAAO,GAAG,IAAIhkF,eAAI,CACjB,IAAIsB,sBAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAC1B,IAAI4C,yBAAc,CAAE;IDwmGvBjrD,KAAA,CCvmGI0E,CDymGL,GCzmGS,EAAE,IDymGX+yB,oBCzmGmC,EDymGbA,CAAEC,MAAM,EAAEC,GAAG,EAAEnb,KAAK,EAAG;MAE5C,IAAMob,AC1mGFwyB,QAAQ,EAAE,ED0mGI,EC1mGJH,CD0mGOl1C,IAAI,CAAC0D,GAAG,CAAEkf,GAAI,CAAC,GAAGD,MAAM,CC1mGlB,EAAEywG,SAAS,CAACS,cAAc,CAACx+E,QAAS,CAAC;MD4mGhE,IAAI,AC3mGAmB,CD2mGCv1C,CAAC,GAAG4hB,OC3mGO,EAAEuwG,GD2mGG,GAAGpzH,GC3mGG,CD2mGC,AC3mGA6zH,CD2mGCnwH,GAAG,CAAE+D,KAAM,CAAC,GC3mGC,CAAC+uC,YAAY;MD4mGvD,IAAI,AC3mGAC,CD2mGC9pD,CAAC,GAAGqT,IAAI,CAACyD,GAAG,CAAEmf,AC3mGD,EAAEwwG,CD2mGG,CAAC,GAAGzwG,IC3mGE,CAACkxG,CD2mGG,aC3mGW,CAACp9E,cAAc;MD4mG3D,IAAI,AC3mGAnV,CD2mGCzqB,CAAC,EC3mGE,CD2mGCgM,CC3mGC9vB,WD2mGW,GAAGiN,IAAI,CAACyD,AC3mGX,GD2mGc,CAAEgE,KAAM,CAAC;MAEzC,IC5mGI26B,GD4mGG,IAAI,EC5mGE,EAAE,KAAK;ID8mGrB,MC7mGKC,UAAU,EAAE,KAAK;ED6mGrB,QC5mGIiG,GAAG,EAAE;ID4mGTl3C,GAAA,CC3mGG,CAAE,CACH,CAAC;ID0mGHnG,ICxmGE+qI,CDwmGF,EAED,IC1mGU,CAAChxG,ID0mGXlC,IC1mGmB,CAACirB,aD0mGFjrB,CAAEx3B,CAAC,AC1mGc,CAAE,CD0mGb,OC1mGsB,CAAC;MD4mG9C,EC3mGE0qI,KD2mGK,EC3mGE,CAAChxG,CD2mGC,CAACjC,MC3mGM,CAACgrB,eAAe,CAAE,CD2mGA,CAAEziD,CAAC,CAACq3B,AC3mGC,CAAC,KD2mGI,EAAEr3B,CAAC,CAACmc,KAAK,EAAEnc,CAAC,CAACqB,CAAE,CAAC;IAE/D,IC3mGGqpI,OAAO,CAACphG,cAAc,GAAG,UAAW6gB,QAAQ,EAAEqF,KAAK,EAAEz5B,MAAM,EAAG;ED2mGhE,QCzmGG,IAAI,CAACI,WAAW,CAAC8K,YAAY,CAAElL,MAAM,CAACI,WAAY,CAAC;IDymGtDrwB,GAAA,CCvmGE,CAAC;IDumGHnG,KAAA,EAED,SAAA83B,wBAAwBA,CAAEJ,MAAM,EAAElb,KAAK,EAAE9a,CAAC,EAAG;MAE5C,ECzmGE,EDymGE,CAACsU,CAAC,GAAG0hB,MAAM,GAAG3iB,IAAI,CAAC0D,GAAG,CAAE+D,KAAM,CAAC;MACnC,ECzmGE9c,EDymGE,CAACgC,CAAC,ECzmGE,CDymGCA,ACzmGA3B,CDymGC,aCzmGa,CAAEgrI,OAAO,CAAC96F,QAAQ,EAAE,QAAQ,EAAE;MD0mGrD,IAAI,ACxmGD/1B,CDwmGE0R,CAAC,CCxmGA,EDwmGG8L,ACxmGD,MDwmGO,GAAG3iB,ACxmGfmF,GAAGA,CDwmGgB,ACxmGhB,CDwmGiB1B,CCxmGH,EDwmGM,CAAEgE,KAAM,CAAC;MAEnC,MCxmGI,CDwmGG,IAAI,ECxmGA,IAAI,CAAC4tC,QAAQ,CAACtO,MAAM,CAAC97C,KAAK;ID0mGtC,MCxmGI;EDwmGH,MCtmGE,CAAE,CAAC;IDsmGLmG,GAAA,CCpmGEy5G,OAAO,CAACzuF,MAAM,CAAE45G,OAAQ,CAAC;IDomG3B/qI,EClmGC,GDkmGD,EAED,SAAAqtB,qBAAqBA,CAAEvX,CAAC,EAAG;MAE1B,ACpmGC00H,IDomGKjrI,CAAC,ACpmGD,CAACmb,EDomGG5E,CAAC,CAACyF,ACpmGD,CAAEs0C,KAAK,CAACuF,CDomGC,iBCpmGkB,CAAC;MDsmGvC,IAAI,CAACp/C,CAAC,GAAGzW,CAAC,CAAE,EAAE,CAAE;MAChB,ACrmGC,IDqmGG,CAACmC,CAAC,GAAGnC,CAAC,CAAE,EAAE,CAAE;MAChB,ACrmGCirI,IDqmGG,CAAC5+G,ACrmGC,CDqmGA,ACrmGC5V,CAAC,EDqmGCzW,CAAC,CAAE,ACrmGA,CAAE,CDqmGA,ACrmGC,CDqmGC;MAEhB,ACvmGiBirI,KAAK,CAAC9oI,CDumGhB,ACvmGiB,IDumGb,ACvmGiB,CAAE,CAAC;IDymGhC,ECzmGkC8oI,KAAK,CAAC5+G,CAAC,IAAI,CAAE,CAAC;EDymG/C,ICvmGC,IAAK0jB,UAAU,CAACqhB,aAAa,IAAIrhB,UAAU,CAACzkB,qBAAqB,KAAK,KAAK,EAAG;IDumG/E1kB,GAAA,CCrmGE;IDqmGFnG,ICpmGEwqI,CDomGF,EAED,ECtmGQ,CAAC9oI,CAAC,IAAI,CDsmGdq2B,ACtmGgB,CAAC,iBDsmGCA,CAAEjiB,CAAC,EAAG;MAEvB,ECvmGE00H,EDumGI/oH,EAAE,CCvmGD,CAACmK,CDumGG,ACvmGF,IDumGM,ACvmGF,CDumGGoM,ACvmGD,CAAC,kBDumGmB,CAAEliB,CAAC,EAAE,CAAE,CAAC,CAACxR,MAAM,CAAC,CAAC;MACpD,ACtmGC,IDsmGKod,EAAE,GAAG,IAAI,CAACsW,mBAAmB,CAAEliB,CAAC,EAAE,CAAE,CAAC,CAACxR,MAAM,CAAC,CAAC;MACpD,ACrmGCymI,IDqmGK9yG,EAAE,CCrmGA,CAACgY,CDqmGE,IAAI,CAACjY,ECrmGC,CAACoyB,QAAQ,CAACtO,MAAM,CDqmGE,ACrmGD97C,CDqmGG8V,CAAC,EAAE,CAAE,ACrmGH,CDqmGI,CAACxR,CCrmGFgrC,KDqmGQ,CAAC,CAAC,GCrmGA;MDumGpD,ACtmGCy7F,IDsmGG,CAAC/0H,CAAC,CCtmGE,CAACi6B,CDsmGAxuB,EAAE,KCtmGM,CAAC2oC,QAAQ,CAAC26E,UAAU,CAAC/kI,KAAK,GAAKsvC,UAAU,CAACqhB,aAAa,IAAIrhB,UAAU,CAACzkB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MDumGlI,ACtmGCkgH,IDsmGG,CAACrpI,CAAC,CCtmGE,CAACuuC,CDsmGAvuB,EAAE,KCtmGM,CAAC0oC,QAAQ,CAAC8K,oBAAoB,CAACl1D,KAAK,GAAG6vD,KAAK,CAACqF,oBAAoB;MDumGlF,ACtmGC61E,IDsmGG,CAACn/G,CAAC,CCtmGE,CAACqkB,CDsmGAhY,EAAE,KCtmGM,CAACmyB,QAAQ,CAAC+K,mBAAmB,CAACn1D,KAAK,GAAG6vD,KAAK,CAACsF,mBAAmB;MDwmGhF,ACvmGC41E,ODumGM,ACvmGC,CAAC96F,GDumGE,KCvmGM,CAACma,QAAQ,CAACgL,kBAAkB,CAACp1D,KAAK,CAACmf,cAAc,CAAEooB,KAAK,CAACzF,qBAAqB,CAAE0oG,KAAM,CAAE,CAAC;IDymG3G,ECxmGEO,OAAO,CAAC96F,QAAQ,CAACyI,UAAU,GAAGn0B,0BAAe,CAACkB,WAAW,CAAE6pB,UAAU,CAAC9pB,UAAW,CAAC,KAAKrU,uBAAY;EDwmGpG,ICtmGC,IAAK65H,iBAAiB,KAAK17F,UAAU,IACpC27F,wBAAwB,KAAK37F,UAAU,CAAClnB,OAAO,IAC/C8iH,kBAAkB,KAAK1gF,QAAQ,CAACyhF,WAAW,EAAG;IDomGhD9lI,GAAA,CClmGE4kI,OAAO,CAAC96F,QAAQ,CAAC7kB,WAAW,GAAG,IAAI;IDkmGrCprB,IChmGEgrI,CDgmGF,EAED,SAAAhzG,KClmGoB,GAAGsX,UAAU,CDkmGdtX,CAAEliB,CAAC,EAAExB,KAAK,EAAG;MAE/B,ECnmGE22H,KDmmGK,IAAI,CAAC5tH,SAAS,CAAEvH,CAAC,CAACyF,ECnmGC,GAAG+zB,GDmmGI,EAAEh7B,KAAK,ACnmGD,CAAC8T,EDmmGG,CAAE,CAAC,GCnmGC;IDqmGhD,ICpmGG8iH,kBAAkB,GAAG1gF,QAAQ,CAACyhF,WAAW;EDomG3C,IClmGC;IDkmGD9lI,EChmGC4kI,CDgmGD,MChmGQ,CAAC7jG,MAAM,CAACJ,SAAS,CAAC,CAAC;IDgmG3B9mC,KAAA,EAED,SAAAkf,oBAAoBA,CAAEpJ,CAAC,EAAExB,KAAK,EAAG;MAEhC,AClmGC,ODkmGM,IAAI,CAAC+I,SAAS,CAAEvH,CAAC,CAACyF,QAAQ,EAAEjH,KAAK,GAAG,CAAE,CAAC;IAE/C,ECnmGE03H,UAAU,CAACE,OAAO,CAAEnB,OAAO,EAAEA,OAAO,CAAChxG,QAAQ,EAAEgxG,OAAO,CAAC96F,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAK,CAAC;EDmmG9E,ECjmGA,CAAC,MAAM,IAAKX,UAAU,IAAIA,UAAU,CAACvlB,SAAS,EAAG;IDimGjD5jB,EC/lGC,CD+lGD,GC/lGM2kI,SAAS,KAAK92H,SAAS,EAAG;ID+lGhChU,IC7lGE8qI,CD6lGF,EAED,MC/lGY,GD+lGZ75G,AC/lGe,IAAI81B,QD+lGP91B,CAAE1xB,CAAC,EAAG,GC/lGK,CACnB,IAAI0oF,wBAAa,CAAE,CAAC,EAAE,CAAE,CAAC,EACzB,IAAIh9B,yBAAc,CAAE;MD+lGvB,IAAI,AC9lGAvmD,CD8lGCsR,CAAC,EC9lGE,CD8lGCzW,CAAC,AC9lGA,CD8lGCoxB,EAAE,iBC9lGiB;MD+lG9B,IAAI,AC9lGAy5B,CD8lGC1oD,CAAC,GAAGnC,CAAC,CAACqxB,CC9lGC,CD8lGC,CC9lGC,IAAAq5B,wBAAa,EAAEk+E,SAAS,CAAC74F,UAAU,CAAC8a,QAAS,CAAC;MD+lG5D,IAAI,AC9lGAmB,CD8lGC3/B,CAAC,GAAGrsB,CAAC,CAACsxB,EAAE,GC9lGG,EAAEs3G,SAAS,CAAC74F,UAAU,CAACic,YAAY;MDgmGnD,IC/lGIC,GD+lGG,IAAI,OC/lGO,EAAE28E,SAAS,CAAC74F,UAAU,CAACkc,cAAc;IDimGxD,MChmGKnV,IAAI,EAAExuC,oBAAS;EDgmGnB,QC/lGIsvC,SAAS,EAAE,KAAK;ID+lGpBhxC,GAAA,GC9lGIixC,UAAU,EAAE,KAAK;ID8lGrBp3C,KAAA,CC7lGIq9C,CD+lGL,EC/lGQ,EAAE,KD+lGVnlB,YAAYA,CAAE73B,CAAC,EAAG;MAEjB,EChmGG,CAAE,CDgmGD,AC/lGF,CD+lGG2V,AC/lGF,CD+lGG,GAAG3V,CAAC,CAACZ,CAAC;MACZ,EC9lGEqrI,ED8lGE,CAACppI,CAAC,GAAGrB,CAAC,CAAC6B,AC9lGA,CD8lGC,AC9lGA63B,QAAQ,CAAC+oB,eAAe,CAAE,QAAS,CAAC;MD+lGhD,IAAI,CAACl3B,CAAC,GAAGvrB,CAAC,CAACiY,CAAC;MAEZ,EC/lGE,KD+lGK,IAAI;IAEZ,IChmGG5Y,MAAM,CAACK,cAAc,CAAE+qI,SAAS,CAAC76F,QAAQ,EAAE,KAAK,EAAE;EDgmGpD,QC9lGG/1B,GAAG,EAAE,SAALA,GAAGA,CAAA,EAAc;ID8lGpB/T,GAAA,KC5lGI,OAAO,IAAI,CAACikD,QAAQ,CAACu+E,GAAG,CAAC3oI,KAAK;ID4lGlCA,KAAA,CC1lGG,CD4lGJ,SAAAod,MAAMA,CAAEpb,CAAC,EAAG;MAEX,EC5lGE,CAAE,CAAC,GD4lGMA,CAAC,CAACgU,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQhU,CAAC,CAACN,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMM,CAAC,CAAC4pB,CAAC,KAAK,IAAI,CAACA,CAAG;IAExE,IC5lGGg0F,OAAO,CAACzuF,MAAM,CAAE25G,SAAU,CAAC;ED4lG7B,IC1lGC;ID0lGD3kI,ECxlGC2kI,CDwlGD,QCxlGU,CAAC76F,QAAQ,CAACma,QAAQ,CAACu+E,GAAG,CAAC3oI,KAAK,GAAGsvC,UAAU;IDwlGnDtvC,ECvlGC8qI,GDulGD,EAED,ICzlGW,CAAC76F,IDylGZ5yB,ICzlGoB,CAAC+sC,IDylGZ/sC,CAAE1I,GCzlGkB,CAACwgD,CDylGd,EAAe,gBCzlGkB,CAACn1D,KAAK,GAAG6vD,KAAK,CAACsF,mBAAmB;MDylGpD,ACxlG7B21E,IDwlGgBxtH,KCxlGP,CDwlGa,ACxlGZ2yB,GDwlGYr5B,KCxlGJ,CAAC8hC,GDwlGG,CAAAp0C,MAAA,ACxlGO,GAAGigB,KDwlGV3N,SAAA,QAAA5C,ICxlGyB,CAACyR,IDwlG1B,GAAA7O,ICxlGqC,CAAE04B,IDwlGvC,MAAG,ACxlG8C,CDwlG7C,ACxlG8C9pB,UAAW,CAAC,KAAKrU,uBAAY;MD0lGtG,ACxlGC,IDwlGG,ACxlGEm+B,CDwlGDt5B,CAAC,GAAGrB,KAAK,ACxlGE,CDwlGA2I,ACxlGC+M,MDwlGK,CAAE,SCxlGS,KAAK,IAAI,EAAG;MDylG7C,ECvlGEilB,EDulGE,CAAC5tC,CAAC,GAAGiT,GCvlGG,CAACqW,CDulGC,CAAE1N,MAAM,GAAG,CAAC,ACvlGD,CDulGG,ACvlGF,CAAC;MDwlG3B,ACtlGC,IDslGG,CAACsO,CAAC,GAAGjX,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE;MAE5B,ACtlGCwtH,ODslGM,ECtlGG,CAAC76F,CDslGA,OCtlGQ,CAACma,QAAQ,CAAC89E,WAAW,CAACloI,KAAK,CAAC0a,IAAI,CAAE40B,UAAU,CAACjtB,MAAO,CAAC;IDwlGzE,ECtlGE,IAAK2oH,iBAAiB,KAAK17F,UAAU,IACpC27F,wBAAwB,KAAK37F,UAAU,CAAClnB,OAAO,IAC/C8iH,kBAAkB,KAAK1gF,QAAQ,CAACyhF,WAAW,EAAG;EDolGhD,MCllGEnB,SAAS,CAAC76F,QAAQ,CAAC7kB,WAAW,GAAG,IAAI;IDklGvCjlB,GAAA,CChlGE6kI,iBAAiB,GAAG17F,UAAU;IDglGhCtvC,IC/kGEirI,CD+kGF,EAED,SAAA1tH,OAAOA,CAAA,EAA2B,ECjlGP,GAAG+xB,UAAU,CAAClnB,OAAO;MDilGd,EChlG/B8iH,EDglGMv2H,KAAK,GAAAiC,QChlGO,CDglGP,CAAAtS,CChlGUkmD,KDglGV,GChlGkB,CAACyhF,IDglGnBr1H,OChlG8B,EDglG9B,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,EAAE;MAAA,AC9kGjB,ID8kGmB0G,MAAM,GAAA1G,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;MAE9BjC,AC9kGCm2H,KD8kGI,CAAExtH,GC9kGG,CAAC4pB,ED8kGE,CAAE,GAAG,AC9kGD,CAACJ,GD8kGI,CAAC9wB,CAAC,IC9kGG,CAAC,CAAC;MD+kG7BrB,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC5b,CAAC;MAC5BiT,AC9kGC,KD8kGI,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACsO,CAAC;MAE5B,AC/kGCogH,OD+kGMr3H,GC/kGI,CAACu3H,CD+kGA,MC/kGO,CAAEpB,SAAS,EAAEA,SAAS,CAAC/wG,QAAQ,EAAE+wG,SAAS,CAAC76F,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAK,CAAC;IDilGrF,AC/kGC;ED+kGA,AC7kGD;EAEA,ED2kGC9pC,GAAA,IC3kGQmlI,QAAQA,CAAE1mH,KAAK,EAAE5H,KAAK,EAAG;ID2kGjChd,ACzkGA4kB,KDykGA,ACzkGK,CAACuwB,CD2kGP,KC3kGa,CAAEo1F,GD2kGf/sH,CC3kGmB,EAAE,IAAA+sC,YD2kGF/sC,CAAEC,SAAS,EAAEnJ,KAAK,EAAG,KC3kGM,EAAEk2C,QAAS,CAAE,CAAC;IAE3DmrE,ED2kGA,GC3kGK,CD2kGD,AC3kGEyC,CD2kGDpiH,CAAC,GAAGyH,EC3kGI,CAACmH,KAAK,CD2kGD,AC3kGE0mH,CD2kGD5tH,IAAI,CAAEpJ,EC3kGG,CAAEi2H,ED2kGC,CAAC,CC3kGE,CAAC9qI,CAAC,EAAE8qI,IAAI,CAACroI,CAAC,EAAEqoI,IAAI,CAACjyH,CAAC,EAAE0E,KAAK,EAAEw7B,kBAAmB,CAAC;EAElF,ID0kGC,IAAI,CAAC92C,CAAC,GAAG+b,SAAS,CAACE,IAAI,CAAErJ,KAAM,CAAC;ECxkGjC,IDykGC,IAAI,CAACsX,ACzkGGJ,CDykGF,GAAG/N,GCzkGM+N,CAAA,EAAG,GDykGA,CAAC8B,IAAI,CAAEhZ,KAAM,CAAC;ICvkGhC,EDykGA,ECzkGKy2H,KDykGE,ECzkGK,EDykGD,GCzkGM/2H,SAAS,EAAG;ID2kG9B,ECzkGE+2H,OAAO,CAAChxG,QAAQ,CAACvO,OAAO,CAAC,CAAC;EDykG3B,ICxkGCu/G,OAAO,CAAC96F,QAAQ,CAACzkB,OAAO,CAAC,CAAC;IDwkG3BrlB,ECtkGC4kI,CDskGD,MCtkGQ,GAAG/2H,SAAS;IDskGpBhU,ACpkGA,KDokGA,EAED,SAAAoV,MAAMA,CAAA,EAAG;ICpkGR,EDskGA,ECtkGK01H,EDskGD,CAAC90H,CAAC,GAAGjB,ECtkGK,EDskGD,CAACK,ECtkGKpB,IDskGC,CAAC,CAAC,GCtkGM,EAAG;MDukG/B,ACrkGC82H,IDqkGG,CAACppI,CAAC,GAAGqT,ACrkGC,CAACglB,GDqkGE,CAAC3kB,ICrkGK,CAACoW,CDqkGA,CAAC,CAAC,ICrkGK,CAAC,CAAC;MDskG7B,ACrkGCs/G,IDqkGG,CAACl/G,CAAC,GAAG7W,ACrkGC,CAACk7B,GDqkGE,CAAC76B,ICrkGK,CAACoW,CDqkGA,CAAC,CAAC,ICrkGK,CAAC,CAAC;MDukG7B,ACrkGCs/G,ODqkGM,ECrkGG,EDqkGC,CCrkGE92H,SAAS;IDukGvB,ACrkGC;EDqkGA,ACnkGD;EAEA,EDikGC7N,GAAA,ECjkGM;IDikGNnG,AC/jGAmsI,KD+jGA,EAED,MCjkGc,EAAE,CDikGhBh0G,QCjkGCg0G,ODikGch0G,CAAA,EAAG,GCjkGJg0G,CAAA,EAAc;MDmkG3B,ACjkGC,OAAOvB,UAAU;IAElB,CAAC;IACDwB,EDgkGA,IAAM5vH,KAAK,EChkGE,CDgkGCzH,CChkGC,GDgkGG,CAACK,KChkGnBg3H,CDgkGyB,CAAC,CAAC,GAAGr3H,IAAI,CAACC,EAAE,AChkGxBo3H,CAAaxnH,EDgkGc,CAAC,EChkGV,EAAc;MDikG7C,ACjkG6C,IDikGvCrkB,ACjkG2Byc,CDikG1B,GAAGjI,CCjkG4B,GDikGxB,ACjkGwB6B,CDikGvBxB,MAAM,CAAC,CAAC,ACjkGe,CAAA9Q,EDikGZ,CAAC,GAAG,ACjkGQ,CDikGP,OCjkGOsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;MDkkG1C,AChkGCg0H,IDgkGKvqI,CAAC,GAAG0U,EChkGC,CAACmE,CDgkGE,CAACgD,CChkGA,CAAE0I,EDgkGE,CAAE,CAAC,CChkGC,CAAC,CDgkGCrkB,CAAC,GAAGA,CAAE,CAAC;MAEhC,ACjkGCsqI,IDikGG,CAAC70H,CAAC,GAAG3V,CAAC,ACjkGC,GDikGE0U,ACjkGCiI,IDikGG,CAACxE,ACjkGC,GDikGE,CAAEgE,KAAM,CAAC;MAC9B,ACjkGC8uH,IDikGG,CAAC5pI,CAAC,ECjkGG,CDikGAnB,ACjkGEqqI,CDikGD,SCjkGW,EAAEC,UAAW,CAAC;IAEnC,CAAC,CDgkGD,IAAI,CAACj/G,CAAC,GAAGvrB,CAAC,GAAG0U,IAAI,CAAC0D,GAAG,CAAE+D,KAAM,CAAC;IC/jG9B6vH,EDikGA,OAAO,IAAI,ACjkGE,EAAE,SAAfA,aAAaA,CAAA,EAAc;IDmkG5B,ECjkGE,OAAOxB,UAAU;EDikGlB,EC/jGA,CAAC;ID+jGD1kI,AC9jGAmmI,GD8jGA,EAEEpsI,MAAM,CAACE,CChkGI,EAAE,KDgkGE,IChkGjBksI,aAAaA,CAAatvH,KAAK,EAAG;IDgkGjBhd,EC9jGhB6qI,GD8jGgB,OC9jGN,GAAG7tH,KD8jGG1d,AC9jGE,mBD8jGF,GAAAqF,IAAA,CAAlB,SAAA3E,MAAA;MAAA,AC7jGEsrI,OD6jGFhsI,CC7jGU,CAAEsrI,UAAU,EAAEC,KD6jGxB,GAAAhqI,EC7jGmC,CAAC,CD6jGpC,UAAAid,OAAAsa,SAAA;IC3jGC,CAAC,GD2jGF,kBAAAA,SAAA,CAAAhzB,IAAA,GAAAgzB,SAAA,CAAA30B,IAAA;IC1jGC6sD,MD0jGD,AC1jGO,EAAEA,MAAM;IACdy7E,QDyjGD3zG,OCzjGgB,EDyjGhB,ACzjGkB2zG,CDyjGlBtoI,IAAA,UCzjGiC;IAChC+nB,OAAO,CD0jGP,CC1jGSA,MD0jGH,IAAI,CAACxV,CAAC;ECxjGb,CAAC,ODwjGY;ACtjGd,YDsjGcoiB,SAAA,CAAA30B,IAAA;ACpjGd,SAAS8oI,GDqjGP,OAAM,IAAI,CAAC7qI,CAAC,ECrjGa6qI,CAAEjpH,EAAE,EAAE8+B,UAAU,EAAG;EAE7C,IAAMoqF,IDmjGO,eCnjGY,GAAGlpH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAACmpH,kBAAmB,CAAC;EAEpE,IAAMC,MDijGOt0G,OCjjGM,EDijGN,CAAA30B,ACjjGS,CAAC,CAAC,EDijGX;EC/iGb,IAAMkpI,MDgjGL,MChjGiB,CDgjGX,EChjGcC,EDgjGV,CAAChhH,CAAC,cChjG0B,CAAE,IAAK,CAAC;EAC/C,IAAIihH,ID+iGS,QC/iGG,GAAGF,YAAY;EAC/B,IAAIG,ID8iGS,OC9iGE,GAAG,KAAK;EAEvB,SAASC,CD4iGI,IC5iGCA,CAAE5zG,ED4iGHf,IC5iGS,EAAE6X,GD4iGX,CAAA1qC,IAAA,AC5iGmB,EAAEynI,OAAO,EAAEjzG,QAAQ,EAAEzlB,KAAK,EAAG;IAE5D,ID0iGY,AC1iGR24H,aAAa,GAAG,KAAK;IAEzB,EDwiGY,ECxiGNtX,CDwiGM31H,ICxiGD,CDwiGC,ECxiGEktI,eAAe,CAAEnzG,QAAQ,EAAEizG,OAAO,EAAE/8F,QAAS,CAAC;IDwiGhD,ACtiGZ,CDwiGA,GCxiGK48F,YAAY,KAAKlX,KAAK,EAAG;EDwiG9B,ICtiGCkX,YAAY,GAAGlX,KAAK;ADsiGrB,MCriGCwX,qBAAqB,CAAEN,YAAY,CAAC1zG,MAAO,CAAC;ADyiG/C,IAAM/B,ACviGJ,SDuiGa,GAAG,aAAc,IAAIjC,OAAO,CAAC,CAAC;AAC7C,IAAMK,ACtiGJy3G,aDsiGiB,ACtiGJ,GDsiGO,ACtiGJ7hH,WAAW,CAAE+N,CDsiGK,IAAI1I,CCtiGH,EAAEsJ,ODsiGW,CAAC,ACtiGJ,CDsiGK,CCtiGHizG,OAAO,EAAE14H,KAAM,CAAC;ADsiGZ,IAE/C+jB,ACtiGJ,IDsiGQ,ACtiGH40G,GDsiGGvmI,OAAA,CAAA2xB,ECtiGU,EDsiGV,ACtiGa+0G,SAAS,CAAEj0G,MAAM,EAAEY,QAAQ,EAAEizG,OAAO,EAAE14H,KAAM,CAAC;EDwiGnE,ECtiGC,IAAKA,GDsiGN+jB,ECtiGW,GDsiGX,EAAgI,ACtiGhH,IAAI,EAAG;IDsiGyG,ECpiG9H+pB,EDoiGWzsC,GAAG,GAAAiB,ECpiGJ,CAACua,MDoiGG,ACpiGG,CDoiGH7sB,ACpiGKgQ,KAAK,CDoiGV,CCpiGYgP,EAAE,CAAC+pH,IDoiGfz2H,SAAA,OCpiGoC,CDoiGpC5C,ACpiGqC,SDoiGrC,GAAA4C,SAAA,MAAG,IAAIue,OAAO,CAAE,CAAEmD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC;IAAA,ACliGnE,IDkiGqE1iB,GAAG,GAAAgB,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAIue,OAAO,CAAE,CAAEmD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC;IAAAtyB,AChiG5H,IAAKinI,WDgiGuH,EChiG1G,IAAIH,CDgiGsGz0G,IAAA,MChiG3F,EAAG;IDkiGpC,EChiGCy0G,EDgiGG,CAACv0G,MAAM,EChiGC,CDgiGE,EChiGC,EDgiGG,GChiGE;IDkiGpB,EChiGC+0G,EDgiGG,CAAC33H,GAAG,GAAGA,GAAG,SChiGQ,CAAEwjB,MAAM,EAAE8W,QAAQ,EAAE+8F,OAAO,EAAEjzG,QAAS,CAAC;IDiiG7D,EC/hGC,ED+hGG,CAACnkB,CC/hGCtB,ED+hGE,GAAGsB,AC/hGA,GD+hGG,EC/hGE,IAAI,EAAG;EDiiGxB,MC/hGG0N,EAAE,CAACk1G,UAAU,CAAEl1G,EAAE,CAAC+pH,oBAAoB,EAAEjrF,UAAU,CAACloC,GAAG,CAAE5F,KAAM,CAAC,CAACqO,MAAO,CAAC;ED+hG1E,IC7hGC,GD6hGDvc,YAAA,CAAAiyB,IAAA;IAAAlyB,AC3hGA,GD2hGA;ECzhGD,EDyhGCnG,KAAA,EAED,SAAAkZ,GAAGA,CAAEvD,GAAG,EAAEC,GAAG,EAAG;ECzhGhB,ID2hGC,IAAI,CAACD,AC3hGG43H,GD2hGA,CAAC7yH,IAAI,CAAE/E,GAAI,CAAC,UC3hGW43H,CAAA,EAAG;IAElC,ED0hGA,IAAI,CAAC33H,AC1hGE0N,EAAE,CD0hGD,AC1hGEkqH,CD0hGD9yH,IAAI,CAAE9E,GAAI,CAAC,OC1hGO,CAAC,CAAC;EAE9B,ID0hGC,OAAO,IAAI;ECxhGZ,ED0hGA,OC1hGSu3H,qBAAqBA,CAAEM,GAAG,EAAG;ED0hGrC,ECxhGA,OAAOnqH,EAAE,CAACoqH,eAAe,CAAED,GAAI,CAAC;EAEjC,EDshGCtnI,GAAA;ECphGD,EDohGCnG,KAAA,EAED,ACthGS2tI,SDshGTn1G,YAAYA,CAAE7jB,CCthGkBg5H,CAAEF,GDshGf,ACthGkB,EDshGf,ACthGkB;IAEvC,EDshGA,IAAI,CAACh1G,ACthGEnV,EAAE,CAACsqH,MDshGI,CAAC,CAAC,SCthGW,CAAEH,GAAI,CAAC;EAEnC,IDshGC,KAAM,IAAIxtI,CAAC,GAAG,CAAC,EAAE4uB,EAAE,GAAGla,KAAK,CAACrQ,MAAM,EAAErE,CAAC,GAAG4uB,EAAE,EAAE5uB,CAAC,IAAI,CAAC,EAAG;ECphGtD,MDshGE,GCthGOitI,CDshGH,CAACx0G,aAAa,ACthGIw0G,CDshGFv0G,ACthGIoB,QAAQ,CDshGH,CAAC1c,ACthGI2vH,OAAO,EDshGF,ACthGI/8F,CDshGFt7B,KAAK,EAAE1U,ACthGG,CDshGD,CAAE,ACthGE,CDshGD;ICphGtD,EDshGA,ECthGM+8C,SAAS,GAAK/M,QAAQ,CAAC+M,SAAS,KAAK,IAAM;IAEjD,EDshGA,ECthGI6wF,KDshGG,IAAI,CCthGG,GAAGnB,aAAa,CAAE3yG,QAAQ,CAACuR,EAAE,CAAE;IDwhG9C,ACthGC,IAAKuiG,UAAU,KAAK75H,SAAS,EAAG;EDshGhC,ICphGC65H,UAAU,GAAG,CAAC,CAAC;IDohGhB1nI,ECnhGCumI,CDmhGD,YCnhGc,CAAE3yG,QAAQ,CAACuR,EAAE,CAAE,GAAGuiG,UAAU;IDmhG1C7tI,ACjhGA,KDihGA,EAED,SAAA44B,sBAAsBA,CAAEnb,SAAS,EAAG;ICjhGnC,EDmhGA,ECnhGIqwH,EDmhGA,CAACr1G,KCnhGO,GAAGo1G,CDmhGD,CAAC,CAAC,OCnhGS,CAAEb,OAAO,CAAC1hG,EAAE,CAAE;IAEvC,EDmhGA,ECnhGKwiG,GDmhGC,IAAI7tI,CAAC,ACnhGE,GDmhGC,CAAC,CCnhGG+T,CDmhGD6a,EAAE,GAAGpR,GCnhGK,EAAG,IDmhGC,CAAC+Q,KAAK,EAAEvuB,CAAC,GAAG4uB,EAAE,EAAE5uB,CAAC,EAAG,EAAG;MCjhGrD6tI,EDmhGA,IAAI,CAACp1G,CCnhGG,GAAG,CAAC,CAAC,ODmhGK,CAAEC,SAAS,CAACnb,mBAAmB,CAAEC,SAAS,EAAExd,CAAE,CAAE,CAAC;MAEpE,ACphGC4tI,UAAU,CAAEb,OAAO,CAAC1hG,EAAE,CAAE,GAAGwiG,QAAQ;IAEpC,EDohGA,OAAO,IAAI;IAEZ,ACphGC,IAAInY,KAAK,GAAGmY,QAAQ,CAAE9wF,SAAS,CAAE;EDohGjC,EClhGA,IAAK24E,KAAK,KAAK3hH,SAAS,EAAG;IDkhG3B7N,EChhGCwvH,CDghGD,IChhGM,GAAGiX,kBAAkB,CAAEW,uBAAuB,CAAC,CAAE,CAAC;IDghGxDvtI,EC/gGC8tI,GD+gGD,EAED,GCjhGU,CAAE9wF,KDihGZnkB,ICjhGqB,CAAE,GAAG88F,KDihGb98F,ACjhGkB,CDihGhBC,MAAM,EAAG;IC/gGvB,EDihGA,IAAI,CAACL,SAAS,CAAC,CAAC;IC/gGhB,EDihGA,KAAM,ACjhGCk9F,IDihGG11H,CAAC,ACjhGC,GDihGE,CAAC,EAAE4uB,EAAE,GAAGiK,MAAM,CAACx0B,MAAM,EAAErE,CAAC,GAAG4uB,EAAE,EAAE5uB,CAAC,EAAG,EAAG;EC/gGrD,MDihGE,IAAI,CAACy4B,aAAa,CAAEI,MAAM,CAAE74B,CAAC,CAAG,CAAC;EC/gGnC,IDihGC,KCjhGQ2sI,kBAAkBA,CAAEa,GAAG,EAAG;IAElC,EDihGA,ECjhGMM,KDihGC,IAAI,ICjhGQ,GAAG,EAAE;IDmhGzB,AClhGC,IAAMC,iBAAiB,GAAG,EAAE;EDkhG5B,ECjhGA,IAAMC,iBAAiB,GAAG,EAAE;IDihG5B9nI,AC/gGA,GD+gGA,EC/gGM,IAAIlG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGusI,mBAAmB,EAAEvsI,CAAC,EAAG,EAAG;ID+gGjDD,EC7gGC+tI,GD6gGD,EAED,QC/gGe,CD+gGfh1G,AC/gGiB94B,CAAC,CAAE,GAAG,CAAC,cD+gGJ84B,CAAElb,MAAM,EAAEmb,IAAI,EAAG;MAEpC,AChhGCg1G,IDghGK/0G,QAAQ,GAAGN,EChhGC,CAAE14B,CAAC,CAAE,GAAG,CDghGA,AChhGC,CDghGAya,IAAI,CAAEse,IAAK,CAAC,CAAC7d,cAAc,CAAE,GAAI,CAAC;MAE7D,ACjhGC8yH,IDihGG,CAACt4H,GAAG,CAAC+E,IAAI,CAAEmD,GCjhGG,CAAE5d,CAAC,CDihGC,ACjhGC,CDihGA,CAAC8a,CCjhGE,CAAC,CDihGA,CAAEke,QAAS,CAAC;IC/gGvC,EDghGA,IAAI,CAACrjB,GAAG,CAAC8E,IAAI,CAAEmD,MAAO,CAAC,CAAClD,GAAG,CAAEse,QAAS,CAAC;IC9gGvC,EDghGA,KChhGO,EDghGA,IAAI;IAEZ,EChhGE;EDghGD,IC/gGCc,QAAQ,EAAE,IAAI;ID+gGf5zB,EC9gGC6mI,CD8gGD,MC9gGQ,EAAE,IAAI;ID8gGdhtI,EC7gGCg9C,GD6gGD,EAED,IC/gGW,EAAE,GD+gGb9jB,EC/gGkB,WD+gGLA,CAAEC,MAAM,EAAoB;MAAA,AC7gGvC40G,ID6gGqB30G,OAAO,EC7gGf,CD6gGexiB,CC7gGbm3H,QD6gGa,CAAAzpI,IC7gGA,ED6gGA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,KAAK;MAErC,AC9gGCo3H,ID8gGG,CAACv1G,SAAS,CAAC,CAAC,CC9gGE,EAAEu1G,iBAAiB;MDghGrC,AC/gGCC,OD+gGM,IAAI,CAAC50G,KC/gGM,EAAE40G,OD+gGM,CAAE90G,MAAM,EAAEC,CC/gGC,MD+gGO,CAAC;IAE9C,EChhGED,MAAM,EAAEs0G,GAAG;EDghGZ,IC/gGCrrF,UAAU,EAAE,CAAC,CAAC;ID+gGfj8C,EC9gGCmO,CD8gGD,IC9gGM,EAAE;ID8gGRtU,AC5gGA,CAAC,ID4gGD,EAED,SAAAya,KAAKA,CAAA,EAAG;EC5gGR,ID8gGC,OAAO,IAAI,IAAI,CAAChW,WAAW,CAAC,CAAC,CAACiW,IAAI,CAAE,IAAK,CAAC;EC5gG3C,ED8gGA,OC9gGS0Q,WAAWA,CAAE+N,MAAM,EAAEY,QAAQ,EAAEizG,OAAO,EAAE14H,KAAK,EAAG;ED8gGxD,EC5gGA,IAAM45H,gBAAgB,GAAGrB,YAAY,CAACzqF,UAAU;ID4gGhDj8C,AC3gGA,GD2gGA,CC3gGMgoI,kBAAkB,GAAGp0G,QAAQ,CAACqoB,UAAU;ID2gG9CpiD,ACzgGA,IAAIouI,CDygGJ,EAED,SAAA1zH,CC3gGkB,GD2gGdA,AC3gGiB,CD2gGf4e,AC3gGgB,GD2gGb,EAAG;ICzgGX,ED2gGA,EC3gGM+0G,ED2gGF,CAAC14H,GAAG,CAAC+E,IAAI,CAAE4e,GAAG,CAAC3jB,CC3gGI,ED2gGA,CAAC,AC3gGEq3H,OAAO,CAACsB,aAAa,CAAC,CAAC;IAEjD,ED0gGA,GC1gGM,CD0gGF,CAAC14H,EC1gGOlR,CD0gGJ,CAACgW,EC1gGO,ED0gGH,CAAE4e,CC1gGK+0G,ED0gGF,CAACz4H,GAAI,CAAC,UC1gGa,EAAG;MD4gGxC,AC1gGC,IAAM24H,GD0gGA,IAAI,SC1gGY,GAAGF,iBAAiB,CAAE3pI,IAAI,CAAE;ID4gGpD,EC1gGE,IAAK6pI,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;ED0gGvC,MCxgGE,IAAMC,eAAe,GAAGP,gBAAgB,CAAExpI,IAAI,CAAE;IDwgGlDyB,GAAA,CCvgGE,IAAIuoI,iBAAiB,GAAGP,kBAAkB,CAAEzpI,IAAI,CAAE;IDugGpD1E,ICrgGE,CDqgGF,EAED,CCvgGQ0uI,QDugGRj2G,SAASA,ACvgGgB,CDugGhB,EAAG,ECvgGkBzkB,SAAS,EAAG;MDygGzC,IAAI,ACvgGD,CDugGE2B,GAAG,ACvgGAjR,CDugGCsR,CAAC,ECvgGE,CDugGC,IAAI,ACvgGA,CDugGCL,GAAG,CAACjU,CAAC,GAAG,IAAI,CAACiU,ECvgGE,CDugGC,CAACiW,CAAC,CCvgGCuN,EDugGE,CAAEb,GCvgGE,CAACsU,IDugGK,UCvgGS,EAAG8hG,iBAAiB,GAAGv1G,MAAM,CAACyT,cAAc;MDwgGtG,IAAI,ACvgGD,CDugGEh3B,GAAG,ACvgGAlR,CDugGCsR,CAAC,ECvgGE,CDugGC,IAAI,ACvgGA,CDugGCJ,GAAG,CAAClU,CAAC,GAAG,IAAI,CAACkU,CCvgGC,EDugGE,CAACgW,CAAC,ACvgGAuN,GDugGG,CAAEb,ECvgGC,CAACuU,KDugGM,QCvgGO,EAAG6hG,iBAAiB,GAAGv1G,MAAM,CAAC0T,aAAa;MDygGnG,ECvgGE,KDugGK,IAAI;IAEZ,ICvgGG,IAAK4hG,eAAe,KAAKz6H,SAAS,EAAG,OAAO,IAAI;EDugGlD,MCrgGE,IAAKy6H,eAAe,CAAChxH,SAAS,KAAKixH,iBAAiB,EAAG,OAAO,IAAI;IDqgGpEvoI,GAAA,CCngGE,IAAKuoI,iBAAiB,IAAID,eAAe,CAAC1mH,IAAI,KAAK2mH,iBAAiB,CAAC3mH,IAAI,EAAG,OAAO,IAAI;IDmgGzF/nB,ICjgGEouI,CDigGF,EAED,SAAA70G,CCngGgB,EAAG,IDmgGZA,CAAA,EAAG;MAET,ACngGC;IAED;IAEA,EDigGA,ECjgGKszG,KDigGI,IAAI,CAACj3H,ECjgGG,CDigGA,ACjgGCw4H,CDigGAp4H,CAAC,GAAG,IAAI,CAACL,GAAG,ACjgGC,CDigGAK,CAAC,GCjgGIo4H,CDigGI,IAAI,CAACx4H,GAAG,CAAClU,CAAC,ECjgGD,CDigGI,CCjgGD,GDigGK,CAACiU,GAAG,ACjgGF,CDigGGjU,CAAG,ECjgGF,EDigGQ,IAAI,CAACkU,GAAG,CAACgW,CAAC,GAAG,IAAI,CAACjW,GAAG,CAACiW,CAAG;IAEjG,ACjgGC,IAAKihH,YAAY,CAACv4H,KAAK,KAAKA,KAAK,EAAG,OAAO,IAAI;EDigG/C,EC//FA,OAAO,KAAK;EAEb,ED6/FCnO,GAAA;EC3/FD,ED2/FCnG,KAAA,EAED,AC7/FSotI,SD6/FT5zG,AC7/FkB4zG,CAAEj0G,MAAM,ED6/FjBK,AC7/FmBO,CD6/FjBrlB,MAAM,CC7/FmB,CD6/FhB,CC7/FkBs4H,OAAO,EAAE14H,KAAK,EAAG;IAEtD,ED6/FA,EC7/FM+7B,KD6/FC,AC7/FI,GAAG,CD6/FH,AC7/FI,CD6/FH9W,AC7/FI,OD6/FG,CAAC,CAAC,GAAG7kB,MAAM,CAACwE,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAGxE,MAAM,CAACmG,UAAU,CAAE,IAAI,CAAClF,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC,CAACuF,cAAc,CAAE,GAAI,CAAC;IAE9G,AC9/FC,IAAMinC,UAAU,GAAGroB,QAAQ,CAACqoB,UAAU;ED8/FtC,EC7/FA,IAAIgsF,aAAa,GAAG,CAAC;ID6/FrBjoI,AC3/FA,GD2/FA,CC3/FMkoI,iBAAiB,GAAGrB,OAAO,CAACsB,aAAa,CAAC,CAAC;ID2/FjDtuI,ACz/FA,KDy/FA,ACz/FM,ED2/FP,EC3/Fa0E,IAAI,GD2/FjB+0B,CC3/FqB40G,MD2/Fd50G,CAAE/kB,MAAM,EAAG,EC3/FoB,EAAG;MD6/FxC,AC3/FC,IAAM65H,GD2/FA,IAAI,CAACh1G,OAAO,CAAC,AC3/FG,CD2/FF,EC3/FK80G,CD2/FF35H,MAAM,CAACwE,GAAG,CAAE,CAAC,EAAE,CAAC,CC3/FG,CD2/FD,AC3/FGxU,CD2/FD,CAAC,EC3/FI,CD2/FDgQ,AC3/FG,MD2/FG,CAACuG,UAAU,CAAE,IAAI,CAACrF,GAAG,EAAE,IAAI,CAACD,GAAI,CAAC;IAExF,EC3/FE,IAAK44H,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;ED2/FvC,MCz/FE,IAAI/wH,SAAS,GAAG2kC,UAAU,CAAE19C,IAAI,CAAE;IDy/FpCyB,GAAA,CCv/FE,IAAKsX,SAAS,KAAKzJ,SAAS,EAAG;IDu/FjChU,KAAA,CCr/FG,CDu/FJ,GCv/FS0E,IAAI,EDu/Fbg0B,GCv/FkB,UDu/FLA,CAAEgB,KAAK,ACv/Fc,EDu/FX,ECv/FeP,MAAM,CAACyT,cAAc,EAAGnvB,SAAS,GAAG0b,MAAM,CAACyT,cAAc;MDy/F9F,IAAI,ACx/FD,CDw/FEj3B,GAAG,ACx/FAjR,CDw/FCiR,GAAG,ACx/FA,CDw/FE+jB,ICx/FG,CDw/FG,CAAC,aCx/FW,IAAIP,MAAM,CAAC0T,aAAa,EAAGpvB,SAAS,GAAG0b,MAAM,CAAC0T,aAAa;MDy/F3F,ECv/FE,EDu/FE,CAACj3B,GAAG,CAACA,GAAG,CAAE8jB,KAAM,CAAC;MAErB,ECv/FE,IAAM3R,CDu/FD,GCv/FK,CDu/FD,ECv/FI,CAAC,CAAC;IDy/FlB,ICx/FGA,IAAI,CAACtK,SAAS,GAAGA,SAAS;EDw/F5B,MCt/FE,IAAKA,SAAS,IAAIA,SAAS,CAACsK,IAAI,EAAG;IDs/FrC5hB,GAAA,GCp/FG4hB,IAAI,CAACA,IAAI,GAAGtK,SAAS,CAACsK,IAAI;IDo/F7B/nB,ICl/FE,CDk/FF,EAED,SAAA25B,cAAcA,CAAEC,MAAM,EAAG;MAExB,ECp/FEyW,EDo/FE,CAAC16B,ECp/FE,CDo/FC,ACp/FCjR,CDo/FAqW,GAAG,ACp/FC,CDo/FC6e,ACp/FC,GAAG7R,GDo/FG,CAAC,ACp/FA;MDq/FtB,ECn/FEqmH,EDm/FE,CAACx4H,GAAG,CAAC+E,GAAG,CAAEif,ECn/FC,EAAG,EDm/FG,CAAC;MAEtB,ACn/FC,ODm/FM,IAAI;IAEZ,ACn/FC;EDm/FA,ECj/FAizG,YAAY,CAACzqF,UAAU,GAAG/R,KAAK;IDi/F/BlqC,ACh/FA0mI,GDg/FA,SCh/FY,CAACuB,aAAa,GAAGA,aAAa;IDg/F1CpuI,AC9+FA6sI,KD8+FA,EAED,KCh/Fa,CAACv4H,GDg/FdulB,ECh/FmB,GAAGvlB,KAAK,IDg/FbulB,CAAEzf,MAAM,EAAG;EC9+FzB,IDg/FC,IAAI,CAACzE,GAAG,CAACiF,SAAS,CAAE,CAAER,MAAO,CAAC;EC9+F/B,ID++FC,IAAI,CAACxE,AC/+FG+4H,GD++FA,CAAC/zH,SAAS,CAAER,AC/+FEu0H,CAAA,EAAG,GD++FE,CAAC;IC7+F5B,ED++FA,EC/+FMZ,KD++FC,IAAI,IC/+FQ,GAAGlB,YAAY,CAACkB,aAAa;IDi/FjD,AC/+FC,KAAM,IAAI9tI,CAAC,GAAG,CAAC,EAAE4uB,EAAE,GAAGk/G,aAAa,CAACzpI,MAAM,EAAErE,CAAC,GAAG4uB,EAAE,EAAE5uB,CAAC,EAAG,EAAG;ED++F3D,IC7+FC8tI,aAAa,CAAE9tI,CAAC,CAAE,GAAG,CAAC;ID6+FvBkG,AC3+FA,GD2+FA;ECz+FD,EDy+FCnG,KAAA,EAED,SAAAq5B,cAAcA,CAAEF,MAAM,EAAoB;ECz+F1C,IDy+F0C,IAAlBC,CCz+Ffw1G,MDy+FsB,GAAAh4H,MCz+FPg4H,CAAEnxH,EDy+FK,CAAAnZ,MAAA,ACz+FI,EAAG,MDy+FPsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,KAAK;ICv+FtCi4H,EDy+FA,uBCz+FyB,CAAEpxH,SAAS,EAAE,CAAE,CAAC;EAE1C,IDw+FC;ECt+FD,SAASoxH,yBAAyBA,CAAEpxH,SAAS,EAAEm+C,gBAAgB,EAAG;IAEjE,EDs+FAziC,ECt+FM40G,IDs+FA,CAACj0G,QCt+FY,GAAG+yG,MDs+FE,CAAE,KAAK,ACt+FG,CAACkB,CDs+FF,KAAM,CAAC,MCt+FQ;IAChD,EDu+FA,ECv+FMC,EDu+FAj0G,QAAQ,GAAGZ,ICv+FM,EDu+FA,CAACY,ACv+FE8yG,QDu+FM,ICv+FM,CAACmB,iBAAiB;IACxD,EDw+FA,ECx+FMC,EDw+FDl0G,QAAQ,KAAK/lB,ECx+FK,GAAG64H,IDw+FC,EAAG,MCx+FQ,CAACoB,iBAAiB;IAExDF,IDw+FC,IAAM/zG,KCx+FM,CAAEvc,SAAS,CAAE,CDw+FF,ECx+FK,CDw+FFsc,ACx+FG,QDw+FK,CAACE,YAAY,CAAE,UAAW,CAAC;ICt+F9D,IAAK+zG,iBAAiB,CAAEvwH,SAAS,CAAE,KAAK,CAAC,EAAG;MAE3C6F,EDs+FA,ACt+FE,CAACwrH,uBAAuB,CAAErxH,SAAU,CAAC;MACvCuwH,EDs+FA,eCt+FiB,CAAEvwH,SAAS,CAAE,GAAG,CAAC;IAEnC;IAEA,IDo+FC,ACp+FIwwH,IDo+FC70G,OAAO,KAAK,CCp+FI,CAAE3b,EDo+FF,IAAIuc,GCp+FO,CAAE,KAAK4hC,QDo+FG,KAAK5nD,GCp+FQ,EAAG,IDo+FF,IAAImlB,MAAM,CAACe,eAAe,KAAK,IAAI,EAAG;MCl+F9F5W,EAAE,CAACyrH,CDo+FF,KAAM,IAAI9uI,CAAC,GAAG,CAAC,EAAEsB,CAAC,CCp+FG,CAAEkc,CDo+FFuc,QCp+FW,EAAE4hC,ODo+FI,CAACptC,KAAK,EAAEvuB,CAAC,ACp+FI,CAAC,EDo+FFsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MCn+F7DguI,MDq+FE,IAAK90G,MAAM,CAACgB,ACr+FG,CAAE1c,KDq+FC,ICr+FQ,CDq+FH,ACr+FK,GAAGm+C,CDq+FJ,EAAG,aCr+FiB;IAElD,UDq+FIziC,MAAM,CAACiB,iBAAiB,CAAEn6B,CAAC,EAAE04B,SAAU,CAAC;ECn+F7C,UDq+FI,CAAC,MAAM;ECn+FX,SAASq2G,GDq+FJr2G,SAAS,CAACnb,UCr+FiBwxH,CAAA,EAAG,MDq+FD,CAAEh1G,iBAAiB,EAAE/5B,CAAE,CAAC;ICn+FzD,IAAM8tI,IDq+FH,SCr+FgB,GAAGlB,YAAY,CAACkB,aAAa;IAChD,IAAMC,IDs+FHr1G,SAAS,CAAC1M,GCt+FU,GAAG4gH,MDs+FD,CAAE1zG,KCt+FW,CDs+FL,ACt+FM60G,CDs+FLx3G,WAAY,CAAC,ICt+FS;IAExD,KAAM,GDq+FH,CCr+FOv2B,CAAC,EDq+FJ,CAACy4B,ACr+FM,CAAC,EAAE7J,EAAE,GAAGm/G,KDq+FD,CAAEr1G,SAAU,CAAC,CCr+FK,CAACr0B,MAAM,EAAErE,CAAC,GAAG4uB,EAAE,EAAE5uB,CAAC,EAAG,EAAG;MAE9D,IDq+FC,ACr+FI+tI,iBAAiB,CAAE/tI,CAAC,CAAE,KAAK8tI,aAAa,CAAE9tI,CAAC,CAAE,EAAG;QDu+FrD,ACr+FCqjB,CDq+FA,CCr+FE,CAAC2rH,IDq+FG,oBCr+FqB,CAAEhvI,CAAE,CAAC;QAChC+tI,EDs+FA,IAAK70G,MAAM,CAACkB,ICt+FK,CAAEp6B,CAAC,CAAE,GAAG,CDs+FF,ACt+FG,KDs+FE+T,SAAS,EAAG;MCp+FzC,MDs+FE;ICp+FH;EAED,UDo+FI,IAAKmlB,MAAM,CAACkB,WAAW,KAAK,IAAI,EAAG;ECl+FvC,SAAS60G,GDo+FJ/1G,MAAM,CAACmB,SCp+FgB40G,CAAE56H,KAAK,EAAE0kB,CDo+FP,CAAC,CAAC,CCp+FS,EAAE73B,IAAI,EAAE89C,UAAU,EAAE6G,MAAM,EAAExoC,MAAM,EAAE6xH,OAAO,EAAG;IAEtF,IAAKA,IDo+FF,GCp+FS,KAAK,IAAI,EAAG;MAEvB7rH,EAAE,CAAC8rH,GDo+FD70G,MAAM,CAAC7f,IAAI,CAAEye,KCp+FQ,CDo+FF,ACp+FI7kB,CDo+FH+lB,ICp+FQ,EAAErB,IAAI,CDo+FF,CAAC,ACp+FG73B,IAAI,EAAE2kD,MAAM,EAAExoC,MAAO,CAAC;IAE7D,CAAC,KDq+FC,CAAC,ACr+FI,MDq+FE;MCn+FRgG,EAAE,CAAC4rH,GDq+FD,gBCr+FoB,CAAE56H,KAAK,EAAE0kB,IAAI,EAAE73B,IAAI,EAAE89C,UAAU,EAAE6G,MAAM,EAAExoC,MAAO,CAAC;IAExE;EAED,UDm+FI,IAAKyc,QAAQ,CAACM,WAAW,KAAK,IAAI,EAAG;ECj+FzC,SAASizG,GDm+FJvzG,QAAQ,CAACO,SCn+FgBgzG,CAAEn0G,MAAM,EDm+FN,ACn+FQ8W,CDm+FP,CAAC,MCn+Fc,EAAE+8F,OAAO,EAAEjzG,QAAQ,EAAG;IAErE40G,QDm+FG,MCn+FW,CAAC,CAAC;IAEhB,IAAMR,IDm+FH5zG,MAAM,CAAC7f,IAAI,CAAEqf,ECn+FQ,GAAGA,GDm+FH,CAACM,ICn+FU,CAAC+nB,MDm+FC,CAAC,GCn+FQ;IAE9C,IAAMisF,EDm+FJ,eCn+FqB,GAAGrB,OAAO,CAACsB,aAAa,CAAC,CAAC;IAEjD,IAAMe,EDm+FJ90G,MAAM,CAACtO,YAAY,CAAEkN,MAAM,CAAC3C,CCn+FM,GAAGyZ,ODm+FG,CAAC,ACn+FI,CAAC6b,sBAAsB;IAEtE,KAAM,CDm+FJ,GCn+FUpnD,CDm+FN,CAAC81B,ECn+FS,GDm+FJ,CAAED,ACn+FM8zG,MDm+FC,CAAC,UCn+Fe,EAAG;MAEvC,EDm+FA,ECn+FME,gBAAgB,GAAGF,iBAAiB,CAAE3pI,IAAI,CAAE;MDq+FnD,ACn+FC,IAAK6pI,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;MDq+FvC,ECn+FE,EDm+FI/zG,ECn+FAi0G,MDm+FQ,GAAGv1G,MAAM,CAACsB,CCn+FD,GAAG0zG,IDm+FM,cCn+FY,CAAEzpI,IAAI,CAAE;MDq+FpD,ECn+FE,GDm+FI,CCn+FCgqI,GDm+FGzuI,GAAC,GAAG,CAAC,EAAEsB,EAAC,GAAGk5B,ACn+FG,KAAKzmB,GDm+FA,CAAC1P,KCn+FQ,CDm+FF,CCn+FK,CDm+FHrE,GAAC,GAAGsB,EAAC,EAAEtB,GAAC,EAAG,EAAG;QAEnD,ECn+FE,EDm+FE,CAACo5B,CCn+FE30B,IAAI,KAAK,IDm+FG,CAAE+1B,QAAQ,CAAEx6B,ECn+FC,CDm+FA,CAAE,EAAEm5B,ACn+FAD,MAAM,CDm+FE,ACn+FDyT,CDm+FE,aCn+FY,EAAG8hG,iBAAiB,GAAGv1G,MAAM,CAACyT,cAAc;MDq+FtG,ICp+FG,IAAKloC,IAAI,KAAK,eAAe,IAAIy0B,MAAM,CAAC0T,aAAa,EAAG6hG,iBAAiB,GAAGv1G,MAAM,CAAC0T,aAAa;MDs+FnG,ECp+FE,KDo+FK,IAAI;IAEZ,ICp+FG,IAAK6hG,iBAAiB,KAAK16H,SAAS,EAAG;EDo+FzC,QCl+FG,IAAMirC,UAAU,GAAGyvF,iBAAiB,CAACzvF,UAAU;IDk+FlD94C,GAAA,GCj+FG,IAAM6yB,IAAI,GAAG01G,iBAAiB,CAAC1vF,QAAQ;IDi+F1Ch/C,KAAA,CC/9FG,CDi+FJ,GCj+FUyd,MDi+FVid,GCj+FmB,GAAG0nB,ODi+FT1nB,CAAEhB,ECj+FiB,CAACxf,EDi+Fb,CCj+FgB,CDi+Fb,ACj+Few0H,iBAAkB,CAAC;MDm+FxD,OAAOh1G,KAAK,CAAC1jB,CAAC,IAAI,IAAI,CAACL,GAAG,CAACK,CAAC,IAAI0jB,KAAK,CAAC1jB,CAAC,IAAI,IAAI,CAACJ,GAAG,CAACI,CAAC,IACpD0jB,KAAK,CAACh4B,CAAC,IAAI,IAAI,CAACiU,GAAG,CAACjU,CAAC,IAAIg4B,KAAK,CAACh4B,CAAC,IAAI,IAAI,CAACkU,GAAG,CAAClU,CAAC,IAC9Cg4B,KAAK,CAAC9N,CAAC,IAAI,IAAI,CAACjW,GAAG,CAACiW,CAAC,IAAI8N,KAAK,CAAC9N,CAAC,IAAI,IAAI,CAAChW,GAAG,CAACgW,CAAC;IAEhD,MCr+FI;EDq+FH;IAAAzlB,GAAA,GCn+FG,IAAKsX,SAAS,KAAKzJ,SAAS,EAAG;IDm+FlChU,KAAA,CCj+FG,CDm+FJ,GCn+FU2iB,MDm+FVgY,ACn+FgB,GAAGld,QDm+FRkd,CAAErB,ACn+Fe,CAAC3W,EDm+Fb,EAAG,ECn+FgB;MDq+FlC,ICp+FG,GDo+FI,CCp+FExhB,GDo+FE,CAACwU,ACp+FC,GDo+FE,ACp+FC8H,CDo+FAzH,CAAC,IAAIsjB,GAAG,ACp+FC,CDo+FA3jB,ACp+FCxU,GDo+FE,CAAC6U,ACp+FC,CDo+FA,IAAIsjB,GAAG,CAAC1jB,GAAG,CAACI,CAAC,IAAI,IAAI,CAACJ,GAAG,CAACI,CAAC,IACxD,IAAI,CAACL,GAAG,CAACjU,CAAC,IAAI43B,GAAG,CAAC3jB,GAAG,CAACjU,CAAC,IAAI43B,GAAG,CAAC1jB,GAAG,CAAClU,CAAC,IAAI,IAAI,CAACkU,GAAG,CAAClU,CAAC,IAClD,IAAI,CAACiU,GAAG,CAACiW,CAAC,IAAI0N,GAAG,CAAC3jB,GAAG,CAACiW,CAAC,IAAI0N,GAAG,CAAC1jB,GAAG,CAACgW,CAAC,IAAI,IAAI,CAAChW,GAAG,CAACgW,CAAC;IAEpD,MCv+FI,IAAMm7C,eAAe,GAAGtpD,SAAS,CAACspD,eAAe;EDu+FpD;IAAA5gE,GAAA,GCr+FG;IDq+FHnG,KAAA,EAED,SAAA46B,YAAYA,CAAElB,KAAK,EAAEhlB,MAAM,EAAG;MAE7B,ICv+FG,IAAMy6H,OAAO,GAAKhuI,IAAI,KAAKmiB,EAAE,CAACy1G,GAAG,IAAI53H,IAAI,KAAKmiB,EAAE,CAACw1G,YAAY,IAAI4V,iBAAiB,CAACrvF,OAAO,KAAK/yC,kBAAS;MDw+F3G,ICt+FG,IAAKoiI,iBAAiB,CAAC7oF,4BAA4B,EAAG;YAErD,IAAM99B,IAAI,GAAG2mH,iBAAiB,CAAC3mH,IAAI;MDs+FvC,MCr+FI,CDq+FGrT,GCr+FGoxC,GDq+FG,CAAC5sC,ECr+FE,CDq+FC,CAChB,CAAEwgB,ACt+FgB3R,IAAI,CDs+Ff,ACt+FgB+9B,CDs+Ff9vC,CAAC,GAAG,CCt+FiB,GDs+Fb,CAACL,GAAG,CAACK,CAAC,KAAO,IAAI,CAACJ,GAAG,CAACI,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,CAAE,EACtD,CAAE0jB,KAAK,CAACh4B,CAAC,GAAG,IAAI,CAACiU,GAAG,CAACjU,CAAC,KAAO,IAAI,CAACkU,GAAG,CAAClU,CAAC,GAAG,IAAI,CAACiU,GAAG,CAACjU,CAAC,CAAE,EACtD,CAAEg4B,KAAK,CAAC9N,CAAC,GAAG,IAAI,CAACjW,GAAG,CAACiW,CAAC,KAAO,IAAI,CAAChW,GAAG,CAACgW,CAAC,GAAG,IAAI,CAACjW,GAAG,CAACiW,CAAC,CACrD,CAAC;IAEF,QC1+FK,IAAMtO,MAAM,GAAGoxH,iBAAiB,CAACpxH,MAAM;ED0+F3C,UCx+FI,IAAKyK,IAAI,CAAC4jG,4BAA4B,EAAG;IDw+F7CxlH,GAAA,OCt+FK,KAAM,IAAIlG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsuI,gBAAgB,CAACe,YAAY,EAAErvI,CAAC,EAAG,EAAG;IDs+FhED,KAAA,EAED,KCt+FO6uI,IDs+FPh0G,aAAaA,CAAEvB,GAAG,EAAG,ECt+FW,CAAEi1G,gBAAgB,CAACC,QAAQ,GAAGvuI,CAAC,EAAE8nB,IAAI,CAAC6zC,gBAAiB,CAAC;MDw+FvF,QCt+FK;MDu+FL,OAAOtiC,CCr+FF,EDq+FK,CAAC1jB,CCr+FDujB,EDq+FI,CAACnjB,CAAC,ECr+FA,CAACkkB,CDq+FG,IAAI,CAACvkB,GAAG,CAACK,CAAC,IAAIsjB,ACr+FF,GDq+FK,CAAC3jB,CCr+FD,EDq+FI,CAACK,CAAC,ACr+FF,IDq+FM,ACr+FF+jB,IDq+FM,CAACnkB,GAAG,ACr+FF,CDq+FGI,ACr+FFo4B,CDq+FG,IACxD9U,GAAG,CAAC1jB,GAAG,CAAClU,CAAC,GCt+F6D,CDs+FzD,IAAI,ACt+F0DsS,CDs+FzD2B,GAAG,CAACjU,CAAC,GCt+F6D,CDs+FzD43B,CCt+F4D,EDs+FzD,CAAC3jB,GAAG,CAACjU,CAAC,IAAI,IAAI,CAACkU,GAAG,CAAClU,CAAC,IAClD43B,GAAG,CAAC1jB,GAAG,CAACgW,CAAC,IAAI,IAAI,CAACjW,GAAG,CAACiW,CAAC,IAAI0N,GAAG,CAAC3jB,GAAG,CAACiW,CAAC,IAAI,IAAI,CAAChW,GAAG,CAACgW,CAAC;IAEpD,YCv+FOmO,QAAQ,CAACqU,iBAAiB,GAAGrmB,IAAI,CAAC6zC,gBAAgB,GAAG7zC,IAAI,CAACyG,KAAK;EDu+FrE,YCr+FK;IDq+FLroB,GAAA,KCn+FI,CAAC,MAAM;IDm+FXnG,KAAA,EAED,GCn+FM,KAAM,CDm+FZ86B,GCn+FgB76B,GAAC,GAAG,CAAC,EAAEA,GAAC,CDm+FR66B,CAAEC,CCn+FSwzG,KDm+FH,EAAG,SCn+FgB,CAACe,YAAY,EAAErvI,GAAC,EAAG,EAAG;MDq+FhE,UCn+FM2uI,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAGvuI,GAAE,CAAC;MDo+FtD,IAAI,CAAC+6B,GCl+FA,ODk+FU,CAAED,MAAM,CAACld,MAAM,EAAE8a,SAAU,CAAC;YCh+FvC;MDk+FJ,MCh+FIrV,EAAE,CAACk1G,UAAU,CAAEl1G,EAAE,CAACisH,YAAY,EAAE5sH,MAAO,CAAC;MDi+F5C,MC/9FI,CD+9FGgW,IC/9FG,IAAI14B,CD+9FE,CAAC0c,CC/9FF,GAAG,CAAC,EAAE1c,GAAC,GAAGsuI,ID+9FS,CAAExzG,MAAM,CAACld,IC/9FF,CAACyxH,CD+9FQ,CAAC,IAAMv0G,MAAM,AC/9FT,CD+9FUrD,CC/9FRz3B,GAAC,ED+9Fa,AC/9FV,EAAG,CD+9FU86B,MAAM,CAACrD,MAAQ;IAEzF,UC/9FMw3G,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAGvuI,GAAC,EAC7B+4B,IAAI,GAAGu1G,gBAAgB,CAACe,YAAY,EACpCnuI,IAAI,EACJ89C,UAAU,EACV6G,MAAM,GAAGihB,eAAe,EACxB,CAAEzpD,MAAM,GAAK0b,IAAI,GAAGu1G,gBAAgB,CAACe,YAAY,GAAKrvI,GAAC,IAAK8mE,eAAe,EAC3EooE,OACD,CAAC;EDu9FN,UCr9FI;IDq9FJhpI,GAAA,GCn9FG,CAAC,MAAM;IDm9FVnG,KAAA,EAED,CCn9FK,IAAK0uI,IDm9FVzzG,aCn9F2B,CAAC4gC,CDm9Fb5gC,CAAEC,KAAK,EAAG,iBCn9F6B,EAAG;MDq9FxD,QCn9FK,KAAM,IAAIj7B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGsuI,gBAAgB,CAACe,YAAY,EAAErvI,GAAC,EAAG,EAAG;MDo9FhE,UCl9FM4uI,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAGvuI,GAAC,EAAEyuI,iBAAiB,CAAC9yE,gBAAiB,CAAC;cAE/F;MDk9FL,IAAIjmD,GAAG,CCh9FF,CDg9FIC,GAAG,ACh9FFujB,MAAM,CAACe,eAAe,KAAK,IAAI,IAAIH,QAAQ,CAACqU,iBAAiB,KAAKp6B,SAAS,EAAG;MDk9FxF,IAAKknB,KAAK,CAAC5D,ACh9FLyC,MDg9FW,CAAC/jB,CAAC,ACh9FL,CAACo4B,EDg9FO,CAAC,EAAG,YCh9FM,GAAGsgG,iBAAiB,CAAC9yE,gBAAgB,GAAG8yE,iBAAiB,CAAClgH,KAAK;QDk9F9F7Y,GAAG,GAAGulB,ACh9FF,KDg9FO,CAAC5D,MAAM,CAACthB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;QACjCJ,GAAG,CC/8FA,CAAC,CD+8FEslB,KAAK,AC/8FD,CD+8FE5D,MAAM,CAACthB,CAAC,GAAG,IAAI,CAACJ,GAAG,CAACI,CAAC;MAElC,CAAC,MAAM,CC/8FF,KAAM,IAAI/V,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGsuI,gBAAgB,CAACe,YAAY,EAAErvI,GAAC,EAAG,EAAG;QDi9F/D0V,GAAG,GAAGulB,EC/8FD0zG,GD+8FM,CAACt3G,MAAM,CAACthB,CAAC,GAAG,AC/8FH,CAAEu4H,GD+8FK,CAAC34H,GAAG,CAACI,CAAC,OC/8FK,CAACw4H,QAAQ,GAAGvuI,GAAE,CAAC;QDg9FrD2V,GAAG,GAAGslB,AC98FF,KD88FO,CAAC5D,MAAM,CAACthB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;MAElC,MC98FI;MDg9FJ,IAAKklB,EC98FD5X,EAAE,CD88FI,AC98FHk1G,CD88FIlhG,MAAM,CAAC51B,CAAC,CC98FF,CAAE4hB,CD88FG,CAAC,AC98FF,CAACisH,CD88FI,WC98FQ,EAAE5sH,MAAO,CAAC;QDg9F3ChN,GAAG,CC98FA,GD88FIulB,EC98FE,GD88FG,CAAC5D,AC98FAr3B,GAAC,GD88FK,AC98FF,CD88FGyB,AC98FF,CD88FG,CC98FDzB,ED88FI,CC98FH,GD88FO,AC98FJsuI,CD88FK54H,GAAG,CAACjU,CAAC,UC98FM,CAAC4tI,YAAY,EAAErvI,GAAC,EAAG,EAAG;QD+8F9D2V,GAAG,GC78FCs5H,CD68FGh0G,KAAK,CAAC5D,MAAM,CAAC51B,CAAC,GAAG,CC78FD,CAClB6sI,ED48FuB,CAAC34H,GAAG,CAAClU,CAAC,QC58Fb,CAAC8sI,QAAQ,GAAGvuI,GAAC,EAC7B+4B,IAAI,GAAGu1G,gBAAgB,CAACe,YAAY,EACpCnuI,IAAI,EACJ89C,UAAU,EACVjmB,IAAI,GAAG+tC,eAAe,EACpB/tC,IAAI,GAAGu1G,gBAAgB,CAACe,YAAY,GAAKrvI,GAAC,GAAG8mE,eAAe,EAC9DooE,OACD,CAAC;MDu8FN,CAAC,KCr8FG,CDq8FG;QAENx5H,ECr8FE,CDq8FC,IAAIulB,KAAK,CAAC5D,MAAM,CAAC51B,CAAC,GAAG,IAAI,CAACkU,GAAG,CAAClU,CAAC;QAClCkU,ACp8FC,CAAC,EDo8FC,IAAIslB,ACp8FC,IAAKm0G,CDo8FD,CAAC/3G,MAAM,CAAC51B,CAAC,GAAG,IAAI,CAACiU,GAAG,CAACjU,CAAC,OCp8FS,KAAKsS,SAAS,EAAG;MDs8F7D,ICp8FG,IAAMhU,KAAK,GAAGqvI,8BAA8B,CAAE3qI,IAAI,CAAE;MDs8FvD,IAAKw2B,ACp8FF,IAAKl7B,CDo8FE,CAACs3B,GCp8FE,GDo8FI,CAAC1L,CAAC,ACp8FD5X,GDo8FI,CAAC,EAAG,GCp8FC,EAAG;QDs8F7B2B,GAAG,CCp8FA,GDo8FIulB,KAAK,ACp8FAl7B,CDo8FCs3B,ICp8FI,CAAChzB,CDo8FC,CAACsnB,CAAC,GAAG,ACp8FA,IDo8FI,CAACjW,GAAG,CAACiW,CAAC;QAClChW,GAAG,GCn8FC,CDm8FGslB,ICn8FE,CDm8FG,ACn8FF,CDm8FG5D,MAAM,CAAC1L,CAAC,GAAG,IAAI,CAAChW,GAAG,CAACgW,CAAC;MAEnC,CAAC,MAAM,GCp8FDtI,EAAE,CAACksH,eAAe,CAAEjB,gBAAgB,CAACC,QAAQ,EAAExuI,KAAM,CAAC;QDs8F3D2V,GAAG,IAAIulB,CCr8FF,IDq8FO,CAAC5D,MAAM,CAAC1L,CAAC,GAAG,IAAI,CAAChW,GAAG,CAACgW,CAAC;QAClChW,GAAG,GCp8FC,CDo8FGslB,ICp8FE,CDo8FG,ACp8FF,CDo8FG5D,MAAM,CAAC1L,CAAC,GAAG,IAAI,CAACjW,GAAG,CAACiW,CAAC;MAEnC,UCr8FMtI,EAAE,CAACmsH,eAAe,CAAElB,gBAAgB,CAACC,QAAQ,EAAExuI,KAAM,CAAC;MDu8F5D,OAAS2V,GAAG,ACt8FN,IDs8FU,CAAEulB,KAAK,CAACC,QAAQ,IAAIvlB,GAAG,IAAI,CAAEslB,KAAK,CAACC,QAAQ;IAE5D,UCt8FM,KAAK,CAAC;EDs8FX,cCr8FM7X,EAAE,CAACosH,eAAe,CAAEnB,gBAAgB,CAACC,QAAQ,EAAExuI,KAAM,CAAC;IDq8F5DmG,GAAA,SCp8FM;IDo8FNnG,KAAA,EAED,GCp8FM,MDo8FNo7B,kBAAkBA,CAAEC,QAAQ,EAAG;MAE9B,IAAK,IAAI,CAAC9B,CCr8FJjW,EAAE,CAACqsH,GDq8FQ,CAAC,CAAC,EAAG,QCr8FE,CAAEpB,gBAAgB,CAACC,QAAQ,EAAExuI,KAAM,CAAC;QDu8F3D,ICr8FG,GDq8FI,KAAK;MAEb,ICr8FG;QAED;MDq8FF,ACn8FC;IAED,EDk8FA,IAAI,CAACw5B,SAAS,CAAE8B,OAAQ,CAAC;ICh8FzB0zG,EDi8FAzzG,QAAQ,CAACtgB,UAAU,CAAE,CCj8FE,CAAC,CAAC,CDi8FA,CAACrF,GAAG,EAAE0lB,OAAQ,CAAC;EC/7FzC;EAEA,ID+7FC,KC/7FQ9P,OAAOA,CAAA,EAAG;IAElBpnB,ED87FAo3B,GC97FK,CAAC,CD87FD,AC97FE,CD87FDvgB,UAAU,CAAEogB,QAAQ,CAACl7B,CAAC,EAAEm7B,OAAQ,CAAC;IC57FvC,ED67FAG,GC77FM,ED67FD,CAACxgB,CC77FM6oD,SD67FI,CAAEzoC,AC77FI,IAAIqxG,ID67FA,CAACp0H,CAAC,EAAEgjB,KC77FS,ED67FD,AC77FI,CD67FH;MACvCI,AC57FC,IAAMmyG,CD47FF,CAAC5yH,QC57FW,ED47FD,CAAEogB,AC57FEqxG,QD47FM,CAACrsI,CAAC,EAAEi7B,CC57FG,CAAEwoC,KD47FG,CAAC,IC57FM,CAAE;MAE9C,KAAM,IAAM8rE,SAAS,IAAI/B,UAAU,EAAG;MD47FvC,EC17FE,IAAMC,QAAQ,GAAGD,UAAU,CAAE+B,SAAS,CAAE;MD27F1Cj0G,ECz7FE,CDy7FC,CAAC1gB,GCz7FI,IAAM+hC,GDy7FA,CAAEvhB,KAAK,ACz7FE,EDy7FAD,ECz7FIsyG,GDy7FE,CAAC,ICz7FK,EAAG;MD07FtClyG,GAAG,CAAC3gB,ACx7FD0yH,UDw7FW,CAAEjyG,KAAK,EAAED,KAAM,ACx7FH,CDw7FI,ACx7FFqyG,QAAQ,CAAE9wF,SAAS,CAAE,CAAC7jB,MAAO,CAAC;MDy7F1D0C,GAAG,CAAC5gB,ACv7FD,OAAO6yH,GDu7FI,CAAEtyG,ICv7FE,CDu7FG,ACv7FDwhB,EDu7FGthB,KAAM,CAAC,CCv7FD,CAAE;QAE7B;MDu7FF,ECr7FE,OAAOmyG,UAAU,CAAE+B,SAAS,CAAE;MDs7FhC,ACp7FC;MDq7FD,ACn7FC,OAAOlD,aAAa,CAAE5oE,UAAU,CAAE;IAEnC,EDk7FA,IAAIhoC,IAAI,GAAG,CACV,CAAC,EAAE,CAAEH,GAAG,CAAC/P,CAAC,EAAE+P,GAAG,CAACj6B,CAAC,EAAE,CAAC,EAAE,CAAEk6B,GAAG,CAAChQ,CAAC,EAAEgQ,GAAG,CAACl6B,CAAC,EAAE,CAAC,EAAE,CAAEm6B,GAAG,CAACjQ,CAAC,EAAEiQ,GAAG,CAACn6B,CAAC,EACvDi6B,GAAG,CAAC/P,CAAC,EAAE,CAAC,EAAE,CAAE+P,GAAG,CAAC3lB,CAAC,EAAE4lB,GAAG,CAAChQ,CAAC,EAAE,CAAC,EAAE,CAAEgQ,GAAG,CAAC5lB,CAAC,EAAE6lB,GAAG,CAACjQ,CAAC,EAAE,CAAC,EAAE,CAAEiQ,GAAG,CAAC7lB,CAAC,EACvD,CAAE2lB,GAAG,CAACj6B,CAAC,EAAEi6B,GAAG,CAAC3lB,CAAC,EAAE,CAAC,EAAE,CAAE4lB,GAAG,CAACl6B,CAAC,EAAEk6B,GAAG,CAAC5lB,CAAC,EAAE,CAAC,EAAE,CAAE6lB,GAAG,CAACn6B,CAAC,EAAEm6B,GAAG,CAAC7lB,CAAC,EAAE,CAAC,CACvD;ECp7FF,IDq7FC,IAAK,CAAE+lB,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAS,CAAC,EAAG;ECn7F5D,MDq7FE,GCr7FOs0G,IDq7FA,KAAK,cCr7FkBA,CAAE91G,QAAQ,EAAG;IAE5C,EDq7FA,ECr7FK2yG,aAAa,CAAE3yG,QAAQ,CAACuR,EAAE,CAAE,KAAKt3B,SAAS,EAAG;IAElD,IAAM65H,UAAU,GAAGnB,aAAa,CAAE3yG,QAAQ,CAACuR,EAAE,CAAE;IAE/C,EDm7FA,GCn7FM,IAAMskG,SAAS,IAAI/B,UAAU,EAAG;MDo7FtC/xG,ACl7FC,IDk7FG,ACl7FGgyG,GDk7FA,CAAE,CAAC,EAAE,CAAC,ACl7FE,EDk7FA,CAAC,ACl7FED,EDk7FA,CAAC,EAAE,CAAC,EAAE,CAAC,CCl7FG,CDk7FD,ACl7FG+B,CDk7FF,EAAE,CAAC,EAAE,CAAC,CAAE,CCl7FG,CAAE;MDm7FzC,ACj7FC,IDi7FI,CAAE7zG,ACj7FA,IAAMihB,MDi7FI,CAAElhB,ECj7FG,EDi7FC,EAAEN,ACj7FCsyG,KDi7FI,EAAEryG,CCj7FE,EAAG,EDi7FA,EAAEC,KAAK,EAAEH,QAAS,CAAC,EAAG;QAE1D,ACj7FCoyG,ODi7FM,KAAK,WCj7FY,CAAEG,QAAQ,CAAE9wF,SAAS,CAAE,CAAC7jB,MAAO,CAAC;MDm7FzD,ECj7FE,OAAO20G,QAAQ,CAAE9wF,SAAS,CAAE;MAE7B;MDi7FD,AC/6FC,OAAO6wF,UAAU,CAAE+B,SAAS,CAAE;IAE/B,ED86FA;IC56FA,ED66FA5zG,KC76FO0wG,UD66FQ,CAACh2G,EC76FI,CAAEqD,QAAQ,CD66FF,AC76FGuR,CD66FD3P,CC76FG,CAAE,CD66FF,EAAEC,GAAI,CAAC;EC36FzC,ID46FCE,IAAI,GAAG,CAAEE,eAAe,CAAChmB,CAAC,EAAEgmB,eAAe,CAACt6B,CAAC,EAAEs6B,eAAe,CAACpQ,CAAC,CAAE;EC16FnE,ID46FC,KC56FQkkH,ED46FD/zG,UAAU,CAAED,IAAI,EAAEN,GC56FKs0G,CAAE9C,CD46FF,EAAEvxG,IC56FO,CD46FF,CC56FK,CD46FHC,KAAK,EAAEH,QAAS,CAAC;IAEzD,AC56FC,KAAM,IAAMuoC,UAAU,IAAI4oE,aAAa,EAAG;ED46F1C,IC16FC,IAAMmB,UAAU,GAAGnB,aAAa,CAAE5oE,UAAU,CAAE;ID06F/C39D,ECx6FC,CDw6FD,GCx6FM0nI,UAAU,CAAEb,OAAO,CAAC1hG,EAAE,CAAE,KAAKt3B,SAAS,EAAG;IDw6F/ChU,ECt6FC,GDs6FD,CCt6FO8tI,CDw6FR,OCx6FgB,EDw6FhB9yG,CCx6FmB6yG,SDw6FT7yG,CAAEtB,ACx6FiB,CAAEszG,IDw6Fd,EAAEt4H,CCx6FmB,CAAC42B,EAAE,CAAE,CDw6FlB,EAAG;MAE3B,ACx6FC,KAAM,EDw6FA52B,ECx6FMsoC,IDw6FA,CAACtiC,IAAI,ACx6FI,CDw6FFgf,GCx6FMo0G,EDw6FA,CAAC,CAACp4H,ICx6FM,CDw6FD,CAAE,ACx6FE,IDw6FE,CAACC,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC;IAExD,ICx6FG+3H,uBAAuB,CAAEG,QAAQ,CAAE9wF,SAAS,CAAE,CAAC7jB,MAAO,CAAC;EDw6FzD,MCt6FE,OAAO20G,QAAQ,CAAE9wF,SAAS,CAAE;IDs6F9B72C,ECp6FC,CDo6FD;IAAAnG,ECl6FC,GDk6FD,EAED,ECp6FS6tI,ODo6FT5xG,GCp6FmB,CAAE+wG,OAAO,CAAC1hG,EAAE,CDo6FhBrP,ACp6FkB,CDo6FhBvC,KAAK,EAAG;ICl6FxB,EDo6FA,OAAO,IAAI,CAACsB,UAAU,CAAEtB,KAAK,EAAEf,SAAU,CAAC,CAACjc,UAAU,CAAEgd,KAAM,CAAC;ECl6F/D,EDo6FA;EAAC,ACl6FD,SAASt1B,KAAKA,CAAA,EAAG;IDk6FhB+B,ACh6FA4pI,GDg6FA,cCh6FiB,CAAC,CAAC;IDg6FnB/vI,AC/5FA8sI,KD+5FA,EAED,ICj6FY,GAAG,EDi6Ff5wG,ECj6FmB,eDi6FFA,CAAExnB,MAAM,EAAG;IC/5F3B,EDi6FA,ECj6FKm4H,EDi6FA,IAAI,CAACtzG,KCj6FO,EDi6FA,CAAC,CAAC,CCj6FGozG,CDi6FA,WCj6FY,EAAG;IAErCE,IDi6FCn4H,MAAM,CAAC+jB,CCj6FI,GAAGk0G,KDi6FE,CAAC,CAAC,KCj6FQ;IAC3BQ,EDk6FA,CAAC,MAAM,YCl6Fc,CAAEN,YAAY,CAAC1zG,MAAO,CAAC;EAE7C,MDk6FE,IAAI,CAACK,SAAS,CAAE9kB,MAAM,CAACmJ,MAAO,CAAC;QAE/BnJ,MAAM,CAACgjB,MAAM,GAAG,IAAI,CAAC+B,OAAO,CAAEd,SAAU,CAAC,CAACr0B,MAAM,CAAC,CAAC,GAAG,GAAG;ECl6F1D,IDo6FC;MAEA,OAAOoQ,MAAM;ECp6Fd,EDs6FA,OCt6FSq7H,iBAAiBA,CAAA,EAAG;EDs6F5B,ECp6FApD,YAAY,CAAC5yG,QAAQ,GAAG,IAAI;IDo6F5B5zB,ACn6FAwmI,GDm6FA,SCn6FY,CAACK,OAAO,GAAG,IAAI;IDm6F3BhtI,ACl6FA2sI,KDk6FA,EAED,KCp6Fa,CAAC3vF,GDo6Fd7gB,MCp6FuB,GDo6FdA,ACp6FiB,CDo6Ff7C,GAAG,CCp6FiB,CDo6Fd;ECl6FjB,IDo6FC,IAAI,CAAC3jB,GAAG,CAACC,GAAG,CAAE0jB,GAAG,CAAC3jB,GAAI,CAAC;ECl6FxB,IDm6FC,GCn6FM,CDm6FF,CAACC,GAAG,CAACD,GAAG,CAAE2jB,GAAG,CAAC1jB,GAAI,CAAC;ICj6FvBm3H,KAAK,EAAEA,KAAK;IACZ3oI,EDk6FA,GCl6FK,EAAEA,KAAK;IACZ2rI,EDk6FA,IAAK,IAAI,CAACx2G,MCl6FO,CDk6FA,CAAC,ACl6FCw2G,CDk6FA,EAAG,IAAI,CAACt3G,SAAS,ACl6FA,CDk6FC,CAAC;ICj6FtCjN,EDm6FA,KCn6FO,EDm6FA,ACn6FEA,IDm6FE,GCn6FK;IDq6FjB,ACp6FCqkH,uBAAuB,EAAEA,uBAAuB;EDo6FhD,ECn6FAC,sBAAsB,EAAEA,sBAAsB;IDm6F9C3pI,ACj6FAwoI,GDi6FA,WCj6Fc,EAAEA,cAAc;IDi6F9B3uI,ACh6FA4uI,KDg6FA,EAED,QCl6FgB,CDk6FhBp0G,CCl6FkBo0G,IDk6Fbp0G,CAAElB,GAAG,EAAG,KCl6FoB;IAChC01G,EDm6FA,IAAI,CAACr5H,GAAG,CAACA,GAAG,CAAE2jB,GAAG,CAAC3jB,GAAI,CAAC,ACn6FA,EAAEq5H;EAE1B,CAAC,GDk6FA,IAAI,CAACp5H,GAAG,CAACA,GAAG,CAAE0jB,GAAG,CAAC1jB,GAAI,CAAC;ACh6FzB,MDk6FE,OAAO,IAAI;ACh6Fb,IDk6FC,KCl6FQo6H,mBAAmBA,CAAE1sH,EAAE,EAAEqoC,UAAU,EAAE8a,IAAI,EAAG;EDk6FnD,ACh6FD,IAAI48C,IAAI;EAER,ED85FCl9G,GAAA,IC95FQ8pI,OAAOA,CAAEjwI,KAAK,EAAG;ID85FzBA,AC55FAqjH,IAAI,CD45FJ,EAED,AC95FQrjH,KAAK,ID85FbisB,YAAYA,CAAE5J,MAAM,EAAG;EC55FvB,ID85FC;EC55FD,ID65FC,IAAK,CC75FGiuC,GD65FC,CAAC/2B,EC75FI+2B,CAAE7Q,ID65FC,CAAC,AC75FG,CD65FF,CC75FIjxB,CD65FD,IC75FM,EAAG,CD65FF,IAAI;IC35FjClL,EAAE,CAAC4sH,UAAU,CAAE7sB,IAAI,EAAE5jE,KAAK,EAAEjxB,KAAM,CAAC;IAEnCi4C,ED25FA,EC35FI,CAACt1C,MAAM,CAAE3C,KAAK,EAAE60F,IAAI,EAAE,CAAE,CAAC;EAE9B,ID05FCjnF,OAAO,CAAE,CAAC,CAAE,CAACljB,GAAG,CAAE,IAAI,CAACvD,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAACjU,CAAC,EAAE,IAAI,CAACiU,GAAG,CAACiW,CAAE,CAAC,CAACK,YAAY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ECx5FhF,IDy5FC+Z,KCz5FQ+zG,EDy5FD,CAAE,CAAC,CAAE,CAACj3H,GAAG,CAAE,IAAI,CAACvD,ACz5FAw6H,CAAE1wF,EDy5FC,CAACzpC,CAAC,CCz5FE,CDy5FA,CCz5FEwY,GDy5FE,CAAC7Y,CCz5FE,EDy5FC,ACz5FCy6H,CDy5FA1uI,CAAC,EAAE,IAAI,CAACkU,ACz5FC,EAAG,CDy5FD,CAACgW,CAAE,CAAC,CAACK,YAAY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ICv5F/E,EDw5FA+Z,ECx5FKg0G,KDw5FE,CAAE,CAAC,CAAE,CAACl3H,ACx5FC,GDw5FE,CAAE,CCx5FC,CAAC,EDw5FE,ACx5FC,CDw5FAvD,GAAG,CAACK,CAAC,EAAE,IAAI,CAACJ,GAAG,CAAClU,CAAC,EAAE,IAAI,CAACiU,GAAG,CAACiW,CAAE,CAAC,CAACK,YAAY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ICt5F/EiB,EDu5FA8Y,ACv5FE,CAACi0G,MDu5FI,CAAE,CAAC,CAAE,CAACn3H,GAAG,CAAE,IAAI,CAACvD,ACv5FD,CAAE0tG,EDu5FE,CAACrtG,CAAC,ACv5FA,EDu5FE,ACv5FAypC,IDu5FI,CAAC7pC,ACv5FA,EAAE4Y,CDu5FC,CAAC9sB,CAAC,EAAE,ACv5FA,EAAE0uI,EDu5FE,CAACx6H,GAAG,CAACgW,CAAE,CAAC,ACv5FA,CDu5FCK,ACv5FA,YDu5FY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ICr5F/EokD,EDs5FArqC,ECt5FI,CAACjL,IDs5FE,CAAE,CAAC,ACt5FC,CDs5FC,ACt5FC3C,CDs5FAtV,GAAG,CAAE,ACt5FA,EAAEmqG,EDs5FE,CAACztG,CCt5FC,EDs5FE,ACt5FAw6H,CDs5FCp6H,CAAC,EAAE,IAAI,CAACL,ACt5FC,CAAC,EDs5FC,CAACjU,CAAC,EAAE,IAAI,CAACiU,GAAG,CAACiW,CAAE,CAAC,CAACK,YAAY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ECp5FhF,IDq5FC+Z,OAAO,CAAE,CAAC,CAAE,CAACljB,GAAG,CAAE,IAAI,CAACtD,GAAG,CAACI,CAAC,EAAE,IAAI,CAACL,GAAG,CAACjU,CAAC,EAAE,IAAI,CAACkU,GAAG,CAACgW,CAAE,CAAC,CAACK,YAAY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ECn5FhF,IDo5FC+Z,KCp5FQk0G,EDo5FD,CAAE,CAAC,CAAE,CAACp3H,GAAG,CAAE,IAAI,CAACtD,ACp5FA06H,CAAEC,EDo5FC,CAACv6H,CAAC,EAAE,ACp5FC,EAAEw6H,EDo5FC,CAAC56H,GAAG,ACp5FC,CDo5FAlU,CAAC,ACp5FC+uI,EDo5FC,IAAI,CAAC96H,ECp5FG,CDo5FA,CAACiW,ACp5FE,CDo5FA,CAAC,CAACK,YAAY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ICl5F/E,EDm5FA+Z,ECn5FKq0G,KDm5FE,CAAE,CAAC,CAAE,CAACv3H,ACn5FC,GDm5FE,CAAE,CCn5FC,CAAC,EDm5FE,ACn5FC,CDm5FAtD,GAAG,CAACI,CAAC,EAAE,IAAI,CAACJ,GAAG,CAAClU,CAAC,EAAE,IAAI,CAACkU,GAAG,CAACgW,CAAE,CAAC,CAACK,YAAY,CAAE5J,MAAO,CAAC,CAAC,CAAC;ICj5F/E,IAAMquH,SAAS,GAAG/kF,UAAU,CAACzxC,GAAG,CAAE,kBAAmB,CAAC;IACtDw2H,EDk5FA,IAAI,CAAC73G,ECl5FI,CAAC83G,UDk5FQ,CAAEv0G,OAAQ,CAAC,CCl5FC,CAAEinF,IAAI,EAAEktB,MAAM,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,SAAU,CAAC;IAEvE,EDk5FA,ECl5FIG,KDk5FG,IAAI,GCl5FK,GAAG,CAAC;IDo5FrB,ACn5FC,KAAM,IAAI3wI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwwI,SAAS,EAAExwI,CAAC,EAAG,EAAG;EDm5FvC,ICj5FC2wI,YAAY,IAAIJ,MAAM,CAAEvwI,CAAC,CAAE;IDi5F5BkG,AC/4FA,GD+4FA;IAAAnG,AC74FAymE,IAAI,CD64FJ,AC74FKt1C,ED+4FN,IC/4FY,CAAEy/G,ID+4FdzuH,QC/4F0B,CD+4FjBA,CAAE7E,AC/4FiB+lG,IAAI,ED+4Ff,AC/4FiB,CAAE,CD+4FhB,AC/4FiB;EAErC,ID+4FC,IAAI,CAAC1tG,GAAG,CAACgF,GAAG,CAAE2C,MAAO,CAAC;EC74FvB,ID84FC,IAAI,CAAC1H,AC94FGi7H,GD84FA,CAACl2H,GAAG,CAAE2C,MAAO,CAAC,SC94FUuzH,CAAEN,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEL,SAAS,EAAG;IAEzE,ED84FA,EC94FKK,KD84FE,IAAI,AC94FG,KAAK,CAAC,EAAG;IDg5FxB,AC94FC,IAAMC,SAAS,GAAG/kF,UAAU,CAACzxC,GAAG,CAAE,kBAAmB,CAAC;ED84FtD,EC54FA,IAAKw2H,SAAS,KAAK,IAAI,EAAG;ID44F1BvqI,EC14FC,CD04FD,IC14FO,IAAIlG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGswI,MAAM,CAACjsI,MAAM,EAAErE,CAAC,EAAG,EAAG;ID04F5CD,ICx4FEmwI,CDw4FF,EAED,SAAA/yH,GC14FkB,CAAEmzH,ED04FdnzH,CAAEkc,GAAG,AC14Fe,CAAEr5B,CD04Fd,AC14Fe,CAAE,EAAEuwI,MAAM,CAAEvwI,CAAC,CAAE,EAAEmwI,SAAS,CAAEnwI,CAAC,CAAG,CAAC;MD44F7D,AC14FC,OD04FMq5B,GAAG,CAAC3jB,GAAG,CAACyH,MAAM,CAAE,IAAI,CAACzH,GAAI,CAAC,IAAI2jB,GAAG,CAAC1jB,GAAG,CAACwH,MAAM,CAAE,IAAI,CAACxH,GAAI,CAAC;IAEhE,AC14FC,CAAC,MAAM;ED04FP,ICx4FC86H,SAAS,CAACI,6BAA6B,CAAEztB,IAAI,EAAEktB,MAAM,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEJ,SAAS,EAAE,CAAC,EAAEK,SAAU,CAAC;ADw4F/F,MCt4FC,IAAIG,YAAY,GAAG,CAAC;AD04FvB,IAAMx0G,ECz4FH,KDy4FU,ACz4FJ,GDy4FO,CACf,AC14FYn8B,GAAC,GAAG,CAAC,EAAEA,GAAC,CD04FN,EC14FSwwI,ED04FLt7G,OAAO,AC14FO,CD04FN,CAAC,AC14FOl1B,ED24FlC,CC34FmC,EAAG,EAAG,QD24F3B,IAAIk1B,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,CAC3B;AAED,IAAMwD,ICl5FFi4G,KDk5FW,GAAG,ICl5FF,IAAIJ,KDk5FY,CCl5FN,CAAEvwI,EDk5FQk1B,CCl5FP,CAAE,GAAGi7G,EDk5FS,CAAC,CAAC,KCl5FF,CAAEnwI,GAAC,CAAE;ADo5FhD,IAAMs6B,ECl5FH,IDk5FS,GAAG,aAAc,IAAIlC,IAAI,CAAC,CAAC;MCh5FpCouC,IAAI,CAACt1C,MAAM,CAAEy/G,YAAY,EAAEvtB,IAAI,EAAE,CAAE,CAAC;ADk5FvC,ICh5FE;EAED;ADg5FD,IAAM7nF,KAAK,GAAG,aAAc,IAAIrG,OAAO,CAAC,CAAC;AACzC,EC/4FC,ED+4FKsG,KAAK,GAAG,aAAc,IAAItG,OAAO,CAAC,CAAC;AACzC,IAAMuG,KAAK,GAAG,aAAc,IAAIvG,OAAO,CAAC,CAAC;EC94FxC,IAAI,CAAC86G,OAAO,GAAGA,OAAO;ADg5FvB,EC/4FC,IAAI,CAAC3/E,MAAM,GAAGA,MAAM;EACpB,IAAI,CAAC6/E,eAAe,GAAGA,eAAe;ADg5FvC,EC/4FC,ED+4FKx0G,EC/4FD,CD+4FI,AC/4FH20G,GD+4FM,YC/4FS,CD+4FK,EC/4FFA,ED+4FMn7G,OAAO,CAAC,CAAC,IC/4FA;ADg5FvC,EC/4FC,ED+4FKyG,EC/4FD,CD+4FI,AC/4FHi1G,GD+4FM,aAAc,IAAI17G,IC/4FA,GD+4FO,AC/4FJ07G,CD+4FK,CAAC,sBC/4FkB;ADg5FzD,AC94FA,ID84FMh1G,GAAG,GAAG,aAAc,IAAI1G,OAAO,CAAC,CAAC;AAEvC,AC94FA,ID84FMmG,KC94FGy1G,ED84FI,GAAG,YC94FUA,CD84FI,AC94FFztH,EAAE,ED84FI6R,AC94FFw2B,OD84FS,CAAC,CAAC,CC94FD,EAAEhc,UAAU,EAAEqhG,KAAK,EAAG;AD+4FhE,EC74FC,ED64FKz1G,EC74FD01G,MD64FS,GAAG,IC74FC,SD64Fa,IAAI97G,OAAO,CAAC,CAAC;AAC5C,EC54FC,ED44FK6G,OC54FIk1G,QD44FW,GAAG,KC54FEA,CAAA,EAAG,KD44FS,IAAI/7G,OAAO,CAAC,CAAC;AACnD,IAAMkH,AC34FJ,IAAK40G,KD24FQ,GAAG,KC34FE,KAAKj9H,GD24FO,IAAImhB,EC34FF,EAAG,GD24FM,CAAC,CAAC,EC34FD87G,aAAa;AD64FzD,IC34FE,IAAKtlF,CD24FE5vB,SC34FQ,CD24FEA,AC34FDqwD,CD24FGtwD,EC34FA,CAAE,CD24FE,EAAEQ,EAAE,EAAEpf,EAAE,EAAEC,EAAE,EAAEof,OAAO,EAAG,QC34FO,CAAC,KAAK,IAAI,EAAG;ED64FpE,IC34FE,CD24FI,GC34FEm0G,CD24FEzwI,CAAC,GAAG,CAAC,EAAEu8B,CAAC,AC34FD,GD24FIV,AC34FD6vB,ID24FK,CAACrnD,KC34FI,CD24FE,AC34FD4V,GD24FI,AC34FD,CD24FE,AC34FA,ED24FEja,CAAC,IAAIu8B,CAAC,EAAEv8B,CAAC,IAAI,CAAC,EAAG,cC34Fc,CAAC;ID64FrEo8B,EC34FC40G,OD24FQ,CAAC5zH,KC34FI,GAAGiG,CD24FE,CAAEwY,AC34FF,CAAClB,GD24FK,EAAE36B,CAAE,CAAC,KC34FE,CAAEywI,SAAS,CAACS,8BAA+B,CAAC;ID44F5E,AC14FA,CAAC,MAAM;ID24FP,ECz4FCF,EDy4FKxxI,CAAC,GAAG88B,OAAO,ACz4FH,CDy4FIvmB,CAAC,CCz4FF,CAAC,CDy4FIjB,IAAI,CAAC8B,GAAG,CAAEwlB,SAAS,CAACrmB,CAAE,CAAC,GAAGumB,OAAO,CAAC76B,CAAC,GAAGqT,IAAI,CAAC8B,GAAG,CAAEwlB,SAAS,CAAC36B,CAAE,CAAC,GAAG66B,OAAO,CAAC3Q,CAAC,GAAG7W,IAAI,CAAC8B,GAAG,CAAEwlB,SAAS,CAACzQ,CAAE,CAAC;IACzH,ACx4FA;IDy4FA,ACv4FA,IDu4FM6Q,EAAE,CCv4FDw0G,EDu4FI30G,EAAE,CAACvgB,GAAG,CAAEsgB,ICv4FC,KDu4FS,CAAC;ECr4F/B,EDs4FC,IAAMK,EAAE,GAAGxf,EAAE,CAACnB,GAAG,CAAEsgB,SAAU,CAAC;ECp4F/B,EDq4FC,IAAMM,EAAE,CCr4FAy0G,EDq4FGj0H,EAAE,CAACpB,GAAG,CAAEsgB,SAAU,CAAC,ECr4FD+0G,CAAEC,aAAa,EAAG;IDs4F/C,ACp4FA,IAAKA,aAAa,KAAKrkI,qBAAU,IAAIgkI,KAAK,CAACrsH,OAAO,CAAE0sH,aAAc,CAAC,KAAK/tH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAACguH,gCAAiC,CAAC,EAAG;IDq4FjI,ECn4FC,EDm4FIv8H,IAAI,CAACa,ACn4FF,GDm4FK,CAAE,CAAEb,ACn4FJ,IDm4FQ,CAACa,GAAG,CAAE6mB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC,EAAE5nB,IAAI,CAACY,GAAG,CAAE8mB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAE,CAAC,GAAGl9B,CAAC,EAAG;ICj4FxE,EDm4FC;ICj4FD,EDk4FC,KCl4FM,IAAI;EAEZ,IDi4FE,OAAO,KAAK;EC/3Fd,EDi4FC,OCj4FQ8xI,mBAAmBA,CAAEC,WAAW,EAAG;EDm4F5C,ECj4FC,IAAMC,uBAAuB,GAAKD,WAAW,KAAK/kI,wBAAa,KAAQk/C,UAAU,CAACygC,GAAG,CAAE,6BAA8B,CAAC,IAAIzgC,UAAU,CAACygC,GAAG,CAAE,wBAAyB,CAAC,CAAE;EDm4FvK,ECj4FC,IAAKolD,CDi4FC,IAAI,MCj4FM,KAAKtlI,2BAAgB,IAAI8kI,KAAK,CAACrsH,OAAO,CAAE6sH,WAAY,CAAC,KAAKluH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAACouH,8BAA+B,CAAC;ADm4FhI,ICn4FoI;ADq4FpI,IAAM90G,ACp4FH40G,MDo4FS,GAAG,ECp4FD,KAAKhlI,MDo4FU,IAAI6rB,IAAI,CAAC,CAAC,ICp4FX,IAAI,CAAEo5G,uBAAuB,EAAG;ADq4F5D,IAAM50G,ECn4FH,GDm4FQ,GAAG,CCn4FJ,KAAK,ODm4Fa,IAAI1H,OAAO,CAAC,CAAC;AACzC,IAAM2H,ACl4FJ,KDk4FS,GAAG,aAAc,IAAI3H,OAAO,CAAC,CAAC;AAAC,IAEpC4H,ACl4FJ,MDk4FU,CCl4FH,EDk4FGr2B,ECl4FC,KDk4FD,CAAAq2B,MAAA;EAEX,ACl4FA,SDk4FAA,OAAA,EAAoD;ECh4FpD,EDg4FoD,IAAvClf,GCh4FJ8zH,GDg4FU,GAAA/6H,SAAA,ACh4FK+6H,CDg4FLrtI,ACh4FO4zC,MDg4FP,GCh4FgB,EAAG,GDg4FnBthC,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAIue,OAAO,CAAC,CAAC;IAAA,AC93FlC,ID83FoCuC,AC93F/BwgB,MD83FqC,GAAAthC,AC93F5B,KAAK,ID83FuB,CAAAtS,EC93FhB,EAAG,ED83Fa,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAE,CAAC;IAAA5Q,EC53F/C,IAAKsd,EAAE,CAACsuH,MD43FuC,OAAA70G,MAAA,KC53Ff,CAAEzZ,EAAE,CAACuuH,aAAa,EAAEvuH,EAAE,CAACwuH,UAAW,CAAC,CAAC55F,SAAS,GAAG,CAAC,IAChF50B,EAAE,CAACsuH,wBAAwB,CAAEtuH,EAAE,CAACyuH,eAAe,EAAEzuH,EAAE,CAACwuH,UAAW,CAAC,CAAC55F,SAAS,GAAG,CAAC,EAAG;ID63FnF,IAAI,AC33FF,CD23FGlb,MC33FI,ED23FI,GAAG,EC33FA,ED23FI;IAEpB,EC33FC,ED23FG,CAACnf,MAAM,GAAGA,MAAM;IACpB,EC13FCq6B,ED03FG,CAACxgB,MAAM,AC13FD,GD03FIA,AC13FD,MD03FO,GC13FE;ED43FvB,EC13FC;ED03FA,ECx3FA,IAAKwgB,CDw3FL9xC,QCx3Fc,IDw3Fd,CAAA22B,ACx3FmB,MDw3FnB,GCx3F4B,EAAG;IDw3F/B52B,ECt3FC,CDs3FD,GCt3FMmd,EAAE,CAACsuH,wBAAwB,CAAEtuH,EAAE,CAACuuH,aAAa,EAAEvuH,EAAE,CAAC0uH,YAAa,CAAC,CAAC95F,SAAS,GAAG,CAAC,IAClF50B,EAAE,CAACsuH,wBAAwB,CAAEtuH,EAAE,CAACyuH,eAAe,EAAEzuH,EAAE,CAAC0uH,YAAa,CAAC,CAAC95F,SAAS,GAAG,CAAC,EAAG;IDq3FrFl4C,ICn3FE,CDm3FF,EAED,ICr3FU,KDq3FVkZ,GAAGA,CAAE2E,ACr3Fc,MDq3FR,EAAE6Z,MAAM,EAAG;MAErB,ACr3FC,IDq3FG,CAAC7Z,MAAM,CAACnD,IAAI,CAAEmD,MAAO,CAAC;ICn3F1B,EDo3FA,IAAI,CAAC6Z,MAAM,GAAGA,MAAM;ICl3FpB,EDo3FA,KCp3FO,EDo3FA,IAAI,ACp3FE;EAEd,EDo3FA;EAAC,ACl3FD,IAAIwgB,SAAS,GAAGvI,UAAU,CAACuI,SAAS,KAAKlkC,SAAS,GAAG27B,UAAU,CAACuI,SAAS,GAAG,OAAO;EACnF,EDi3FC/xC,ECj3FK8rI,CDi3FL,WCj3FiB,GAAGN,eAAe,CAAEz5F,SAAU,CAAC;EAEjD,ED+2FCl4C,EC/2FIiyI,GD+2FJ,EAED,OCj3FiB,EDi3FjBp5G,GCj3FsBqf,SAAS,CDi3FlBrf,CAAEC,ACj3FmB,MDi3Fb,EAAEmE,cAAc,EAAG;IC/2FvC9jB,EDi3FA,IAAM0E,CCj3FC,CAACzE,IDi3FI,ACj3FA,CAAE,EDi3FC,IAAI,CAACyE,MAAM,SCj3FU,EAAEq6B,SAAS,EAAE,sBAAsB,EAAE+5F,YAAY,EAAE,UAAW,CAAC;IACnG/5F,EDk3FA,IAAKjb,GCl3FI,GAAGg1G,QDk3FO,ICl3FK,CDk3FAj+H,SAAS,EAAG;ECh3FrC,MDk3FE6J,MAAM,CAACnD,IAAI,CAAEuiB,cAAe,CAAC;ECh3F/B,IDk3FC,ACl3FKi1G,CDk3FJ,MAAM,eCl3FoB,GAAGviG,UAAU,CAACuiG,sBAAsB,KAAK,IAAI;EACzE,IAAMC,EDm3FJv1G,MAAM,CAAC/D,SCn3Fe,GAAG8W,CDm3FL,CAAE7W,MAAO,CAAC,CAACU,ACn3FI,CAAC24G,QDm3FI,CAAEt0H,MAAO,CAAC,ECn3FI,KAAK,IAAI,IAAI8tC,UAAU,CAACygC,GAAG,CAAE,kBAAmB,CAAC;EAEzG,IDm3FC,ACn3FKgmD,WAAW,GAAG9uH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAAC+uH,uBAAwB,CAAC;EACjE,IDo3FC,ACp3FKC,IDo3FDp1G,WAAW,ECp3FO,CDo3FJ,CAAC,CCp3FM5Z,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAACivH,8BAA+B,CAAC;EAC9E,IDq3FC,ACr3FKC,KDq3FC,IAAIvyI,CAAC,GAAG,CAAC,ACr3FI,EDq3FF4uB,CCr3FKvL,CDq3FH,CCr3FK,CAACsX,CDq3FH9B,MAAM,CAACx0B,ICr3FQ,CAAEgf,CDq3FJ,CCr3FM,CDq3FJrjB,ACr3FKwyI,CDq3FJ,GAAG5jH,EAAE,EAAE5uB,CAAC,EAAG,EAAG,GCr3FO,CAAC;EAC7D,IAAMyyI,EDs3FJx1G,WAAW,CCt3FO,EDs3FJnoB,CCt3FOuO,EAAE,CDs3FL,ACt3FMsX,CDs3FLhlB,GAAG,CAAEsnB,OCt3FY,CAAE5Z,EAAE,CDs3FL,ACt3FMqvH,EDs3FJ90H,MAAM,CAAClB,gBCt3FuB,CDs3FN,ACt3FO,CDs3FLmc,MAAM,CAAE74B,CAAC,CAAG,CAAE,CAAC;ECp3FhF,IDs3FC,ACt3FK2yI,aAAa,GAAGtvH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAACmpH,kBAAmB,CAAC;EAC9D,IDu3FC,ACv3FKoG,IDu3FD,CAACn7G,MAAM,GAAG3iB,GCv3FQ,CDu3FJ,CAACmH,CCv3FMoH,EAAE,CDu3FJ,ACv3FKsX,CDu3FHsC,WAAY,ACv3FG,CDu3FF,ACv3FI5Z,EAAE,CAACwvH,0BAA2B,CAAC;EAC1E,IDw3FC,ACx3FKC,ODw3FE,IAAI,ACx3FK,GAAGzvH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAAC0vH,mBAAoB,CAAC;EAC7D,EDy3FA,ECz3FMC,mBAAmB,GAAG3vH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAAC4vH,4BAA6B,CAAC;EDy3F7E,ACv3FD,IAAMC,cAAc,GAAGb,iBAAiB,GAAG,CAAC;EAE5C,EDq3FCnsI,ECr3FKitI,CDq3FL,SCr3Fe,GAAG9vH,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAAC+vH,WAAY,CAAC;EAEpD,EDm3FCrzI,KAAA,ACn3FM,EDq3FP,SAAA0a,IAAIA,CAAEqgB,MAAM,EAAG;ICn3Fdu4G,EDq3FA,IAAI,CAACz1H,CCr3FG,EAAE,GDq3FC,CAACnD,ACr3FE,IDq3FE,CAAEqgB,MAAM,CAACld,MAAO,CAAC;ICr3FjB,EDs3FhB,IAAI,CAAC6Z,MAAM,GAAGqD,MAAM,CAACrD,MAAM;MAE3B,OAAO,IAAI;IAEZ,ACx3FCw5G,gBAAgB,EAAEA,gBAAgB;EDw3FlC,ECv3FAS,eAAe,EAAEA,eAAe;IDu3FhCxrI,ACr3FAirI,GDq3FA,kBCr3FqB,EAAEA,qBAAqB;IDq3F5CpxI,ACp3FAuxI,KDo3FA,EAED,SAAAh4G,GCt3FoB,EAAEg4G,EDs3Ffh4G,CAAA,EAAG,cCt3F+B;IAExC2e,EDs3FA,OAAS,ACt3FA,EAAEA,EDs3FE,CAACxgB,MAAM,ACt3FA,GDs3FG,CAAC;IAEzB,ACv3FCw6G,sBAAsB,EAAEA,sBAAsB;EDu3F9C,ECt3FAC,kBAAkB,EAAEA,kBAAkB;IDs3FtChsI,ACp3FAisI,GDo3FA,QCp3FW,EAAEA,WAAW;IDo3FxBpyI,ACn3FAsyI,KDm3FA,EAED,SAAA75G,CCr3FkB,EAAE65G,MDq3FX75G,CAAA,EAAG,QCr3FyB;IACpC+5G,EDs3FA,IAAI,CAAC30H,MAAM,CAAC3E,ACt3FE,EAAEs5H,CDs3FD,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,ICt3FI;IAC9BE,EDs3FA,IAAI,CAACh7G,MAAM,CCt3FG,EDs3FA,ACt3FEg7G,CDs3FA,CAAC,YCt3Fa;IAE9BE,EDs3FA,OAAO,IAAI,ACt3FE,EAAEA,aAAa;IDw3F7B,ACv3FCC,iBAAiB,EAAEA,iBAAiB;EDu3FpC,ECt3FAE,WAAW,EAAEA,WAAW;IDs3FxB5sI,ACr3FA8sI,GDq3FA,gBCr3FmB,EAAEA,mBAAmB;IDq3FxCjzI,ACn3FAmzI,KDm3FA,EAED,OCr3Fe,EDq3Ffz4G,ACr3FiBy4G,aDq3FJz4G,CAAEhB,ACr3FgB,KDq3FX,EAAG;ICn3FtB05G,EDq3FA,OAAS15G,CCr3FC,EAAE05G,EDq3FE,CAACz2H,iBAAiB,CAAE,IAAI,CAACkB,MAAO,CAAC,IAAM,IAAI,CAAC6Z,MAAM,GAAG,IAAI,CAACA,MAAQ;ECn3FjF,CAAC,CDq3FD;ACn3FD,EDm3FE;ACj3FF,IDi3FEvxB,GAAA,ECj3FOotI,aAAaA,CAAE/M,UAAU,EAAG;EAEpC,ED+2FCxmI,EC/2FK2oD,GD+2FL,EAED,ACj3FW,GAAG,IAAI,EDi3FlB1sB,eAAeA,CAAEvC,KAAK,EAAG;EC/2FzB,IDi3FC,ACj3FG85G,ODi3FM95G,ICj3FK,CDi3FA,CAAChd,CCj3FE,IAAI,KDi3FI,CAAE,IAAI,CAACmB,MAAO,CAAC,GAAG,IAAI,CAAC6Z,MAAM;IAEvD,ACl3FC+7G,eAAe,GAAG,CAAC;EDk3FnB,ECj3FAC,oBAAoB,GAAG,KAAK;IDi3F5BvtI,ACh3FAwtI,GDg3FA,aCh3FgB,GAAG,KAAK;EAEzB,ED82FC3zI,EC92FKk7B,GD82FL,EAED,ACh3FW,GAAG,IAAIuiC,EDg3FlB3iC,cCh3FuB,CAAC,CDg3FRA,ACh3FS,CDg3FPC,MAAM,EAAG;IC/2F1B64G,EDi3FA,IAAMz2G,SAAS,CCj3FC,EDi3FE,CCj3FC,GDi3FG,CAACzF,ACj3FA1Z,MDi3FM,GAAG+c,MAAM,CAACrD,ECj3FT,CAAC,CAAC,EDi3Fa;IC/2F7Cw0B,EDi3FA,KCj3FO,EDi3FAnxB,CCj3FG,KDi3FG,CAACld,MAAM,CAAClB,iBAAiB,CAAE,IAAI,CAACkB,MAAO,CAAC,IAAMsf,SAAS,GAAGA,SAAW;IAEnF,ECn3Fan9B,KAAK,EAAE,IAAI;EDm3FvB,ICn3FyBorB,WAAW,EAAE;IDm3FtCjlB,ACn3F4C,CAAC,EDm3F7C;ECj3FD,EDi3FCnG,ECj3FG,CAACksD,EDi3FJ,EAED,GCn3FY,GAAGA,GDm3FfrxB,ICn3FsB,SDm3FTA,CAAEvB,GAAG,EAAG;ECl3FrB,IDo3FC,ACp3FG,CAACu6G,MDo3FGv6G,GAAG,ACp3FG,CDo3FFwB,ECp3FK,CAAC,aDo3FU,CAAE,IAAK,CAAC;ECn3FpC,EDq3FA,ECr3FI,CAACg5G,eAAe,GAAG,CAAC;EDq3FvB,ACn3FD,IAAI,CAAC54E,IAAI,GAAG,UAAW2D,MAAM,EAAEk1E,mBAAmB,EAAG;IDm3FpD5tI,ACj3FA,GDi3FA,CCj3FMqe,OAAO,GACZq6C,MAAM,CAACv6D,MAAM,KAAK,CAAC,IACnByvI,mBAAmB;ID+2FpB/zI,AC92FC,KD82FD,EAED,SAAAi7B,eAAeA,CAAEC,KAAK,EAAG;IC/2FvB,EDi3FD,OAAOnmB,IAAI,CAAC8B,GAAG,CAAEqkB,KAAK,CAACe,eAAe,CAAE,IAAI,CAACpe,MAAO,CAAE,CAAC,IAAI,IAAI,CAAC6Z,MAAM;IAEvE,ACl3FE+7G,eAAe,KAAK,CAAC,IACrBC,oBAAoB;EDi3FrB,EC/2FAA,oBAAoB,GAAGK,mBAAmB;ID+2F1C5tI,AC72FAstI,GD62FA,YC72Fe,GAAG50E,MAAM,CAACv6D,MAAM;ID62F/BtE,AC32FA,KD22FA,EAED,AC72FQwkB,OAAO,ED62FfwW,UAAUA,CAAEtB,KAAK,EAAEhlB,MAAM,EAAG;EC32F5B,CAAC,GD62FA,IAAM0oB,aAAa,GAAG,IAAI,CAACvf,MAAM,CAAClB,iBAAiB,CAAE+c,KAAM,CAAC;EC32F7D,ID62FChlB,AC72FG,CAACs/H,KD62FE,CAACt5H,IAAI,CAAEgf,CC72FG,GAAG,CD62FA,CAAC,UC72FW;IAE/Bi6G,ED62FA,IAAKv2G,UC72FW,GD62FE,AC72FC,GD62FI,CC72FA,GD62FI,CAAC1F,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;IC52FrDu8G,ID82FCv/H,MAAM,CAACqG,EC92FK,CD82FF,AC92FI,CD82FF,GC92FO,CD82FH,AC92FI,CD82FH8C,MAAO,CAAC,CAAChE,SAAS,CAAC,CAAC;EC52FvC,CAAC,KD62FCnF,MAAM,CAACyG,cAAc,CAAE,IAAI,CAACuc,MAAO,CAAC,CAAC/c,GAAG,CAAE,IAAI,CAACkD,MAAO,CAAC;EC32FzD,ID62FC,AC72FG,CAACq2H,UAAU,GAAG,YAAY;IAE7BP,ED62FA,OAAOj/H,MAAM,CC72FG,GAAG,KAAK;EAEzB,CAAC,CD62FD;EAAC,AC32FD,IAAI,CAACy/H,cAAc,GAAG,UAAWt1E,MAAM,EAAEzoC,MAAM,EAAG;ID22FjDjwB,ACz2FAqtI,GDy2FA,QCz2FW,GAAGS,aAAa,CAAEp1E,MAAM,EAAEzoC,MAAM,EAAE,CAAE,CAAC;EAEjD,CAAC,CDu2FAp2B,KAAA,EAED,SAAAq9B,cAAcA,CAAE3oB,MAAM,EAAG;ECv2FzB,IDy2FC,ACz2FG,CAAC0/H,GDy2FC,IAAI,CAAC76G,ACz2FE,GAAG,IDy2FE,CAAC,CAAC,EAAG,ECz2FI0W,QAAQ,EAAE7Z,MAAM,EAAEi+G,QAAQ,EAAG;IAEvD,IDy2FC,ACz2FKx1E,MAAM,GAAG5uB,QAAQ,CAAC4H,cAAc;MACrCC,EDy2FApjC,MAAM,CAAC+jB,OCz2FS,EDy2FA,CAAC,ACz2FEwX,CDy2FD,OCz2FS,CAAC6H,gBAAgB;MAC5CC,EDy2FA,OAAOrjC,ECz2FI,GAAGu7B,CDy2FD,OCz2FS,CAAC8H,WAAW;IAEnC,EDy2FA,ECz2FMu8F,kBAAkB,GAAG9N,UAAU,CAACtsH,GAAG,CAAE+1B,QAAS,CAAC;IAErD,EDy2FAv7B,ECz2FK,CAAEg/H,GDy2FD,CAACx6H,GAAG,CAAE,IAAI,CAAC2E,MAAM,CCz2FI,CDy2FF,GCz2FMghD,CDy2FF,CAAChhD,ICz2FO,EDy2FA,CAAC,ECz2FI,IAAI,IAAIghD,MAAM,CAACv6D,MAAM,KAAK,CAAC,IAAIqvI,gBAAgB,IAAI,CAAE57F,WAAW,EAAG;MD02F7GrjC,ACx2FC,MDw2FK,CAACmlB,cAAc,CAAE,IAAI,CAACnC,MAAO,CAAC;MAEpC,OAAOhjB,MAAM;IAEd,EC12FE,IAAKi/H,gBAAgB,EAAG;ED02FzB,MCx2FE;IDw2FFxtI,GAAA;IAAAnG,ICt2FEi0I,CDs2FF,EAED,SAAAhoH,CCx2FgB,CAAE,IAAK,CAAC,KDw2FZA,CAAE5J,MAAM,EAAG;MAEtB,ACx2FC,CAAC,GDw2FE,CAACxE,ECx2FG,IDw2FG,CAACoO,YAAY,CAAE5J,MAAO,CAAC;MAClC,ECv2FEkyH,EDu2FE,CAAC78G,MAAM,GAAG,IAAI,ACv2FA,CDu2FCA,ACv2FA,CAAC,KDu2FK,GAAGrV,MAAM,CAACib,iBAAiB,CAAC,CAAC;MAEtD,ACv2FC,ODu2FM,IAAI;IAEZ,ACv2FC,CAAC,MAAM;EDu2FP,ICr2FC,IAAMk3G,OAAO,GAAGb,gBAAgB,GAAG,CAAC,GAAGF,eAAe;IDq2FvDttI,GAAA,CCp2FEsuI,OAAO,GAAGD,OAAO,GAAG,CAAC;IDo2FvBx0I,ECl2FC,GDk2FD,CCl2FKqjE,CDo2FN,OCp2Fc,EDo2FdlhD,CCp2FiBmyH,QDo2FRnyH,CAAE7E,MAAM,EAAG,CCp2Fe,CAACo3H,aAAa,IAAI,IAAI;MDs2FxD,ACp2FCxoF,IDo2FG,CAACruC,ECp2FG,CAAC7d,GDo2FE,CAAC2a,CCp2FE,EDo2FC,CAAE2C,ACp2FA+lD,MDo2FO,CAAC,CCp2FA,CAAC,CAAC;MDs2F3B,OAAO,IAAI;IAEZ,ECt2FEA,QAAQ,GAAG4wE,aAAa,CAAEp1E,MAAM,EAAEzoC,MAAM,EAAEq+G,OAAO,EAAEJ,QAAS,CAAC;EDs2F9D,ICp2FC,KAAM,IAAIp0I,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw0I,OAAO,EAAE,EAAGx0I,CAAC,EAAG;IDo2FxCkG,GAAA,CCl2FEk9D,QAAQ,CAAEpjE,CAAC,CAAE,GAAGuzI,WAAW,CAAEvzI,CAAC,CAAE;IDk2FlCD,ECh2FC,GDg2FD,EAED,SAAA04B,aAAaA,CAAEgB,KAAK,EAAG;MAEtB,ACl2FC46G,IDk2FI,IAAI,CAAC/6G,OAAO,CAAC,CAAC,ACl2FA,CAACm7G,CDk2FE,YCl2FW,GAAGrxE,QAAQ;MAC3C,EDm2FA,ECn2FI,CAACywE,CDm2FD,CAACj2H,MAAM,CAACnD,IAAI,CAAEgf,CCn2FE,GAAGoe,CDm2FC,CAAC,cCn2Fc,GAAG,IAAI,CAAC+7F,SAAS,GAAG,CAAC;MAC5D,EDo2FA,ECp2FI,CAACA,CDo2FD,CAACn8G,MAAM,CCp2FG,EDo2FA,CAAC,CCp2FG88G,OAAO;IAE1B,IDo2FC,OAAO,IAAI;ECj2Fb,CAAC,GDm2FA;ECj2FD,IDm2FC33G,KAAK,ACn2FG03G,CDm2FFt5H,UAAU,CAAEye,ICn2FM66G,CDm2FD,ACn2FC,EDm2FC,ACn2FE,IDm2FE,CAAC12H,MAAO,CAAC;ICj2FtC,EDm2FA,ECn2FKquC,EDm2FCjwC,KCn2FM,CAACjc,EDm2FC,GAAG68B,ACn2FC,KDm2FI,ACn2FC22G,CDm2FAv3H,QAAQ,CAAC,CAAC,ACn2FC,EAAG;MDq2FrC,ACn2FCiwC,IDm2FIjwC,GCn2FG,CAACjc,IDm2FI,CCn2FC,EDm2FI,CCn2FDwzI,GDm2FK,CAAC97G,MAAM,CCn2FD,EDm2FI,IAAI,CAACA,MAAQ,EAAG;MCl2F/Cw0B,EDo2FA,KCp2FO,CAAC9gC,WAAW,GAAGqoH,eAAe,GAAG,CAAC;IAE1C;IAEA9qF,IDk2FC,CCl2FI,CAACkrF,EDk2FCvvI,MAAM,CCl2FE,EDk2FCyQ,CCl2FE0+H,GDk2FE,CAACv3H,IAAI,CAAED,MCl2FM,EDk2FG,CAAC;ICj2FrC0sC,IDm2FC,CCn2FI,CAACmrF,EDm2FCv2G,KAAK,GAAG,CAAEj5B,ICn2FI,EDm2FE,CCn2FC,CAAC,CDm2FC,IAAI,CAACozB,MAAM,IAAK,GAAG;ECj2F9C,MDm2FE,IAAI,CAAC7Z,MAAM,CAAC/C,eAAe,CAAE+hB,KAAK,EAAEU,KAAK,GAAGj5B,MAAO,CAAC;ECj2FtD,MDm2FE,GCn2FO2vI,CDm2FH,CAACv8G,MAAM,IAAI6F,CCn2FK02G,CAAEp1E,GDm2FF,GCn2FQ,EAAEzoC,MAAM,EAAElC,SAAS,EAAEygH,aAAa,EAAG;IAElE,EDm2FA,ECn2FMC,OAAO,GAAG/1E,MAAM,KAAK,IAAI,GAAGA,MAAM,CAACv6D,MAAM,GAAG,CAAC;IACnD,EDo2FA,ECp2FI++D,KDo2FG,GCp2FK,CDo2FD,ECp2FI,IAAI;IDs2FpB,ACp2FC,IAAKuxE,OAAO,KAAK,CAAC,EAAG;EDo2FrB,ICl2FCvxE,QAAQ,GAAGnX,OAAO,CAAClsD,KAAK;IDk2FzBmG,ECh2FC,CDg2FD,GCh2FMwuI,aAAa,KAAK,IAAI,IAAItxE,QAAQ,KAAK,IAAI,EAAG;IDg2FpDrjE,IC91FE,CD81FF,EAED,CCh2FS60I,QDg2FTr6G,ACh2FiB,GAAGtG,EDg2FfsG,CAAEO,MAAM,ACh2FgB,EDg2Fb,CCh2FgB65G,OAAO,GAAG,CAAC;MDk2F1C,IAAK75G,ACj2FF+5G,MDi2FQ,CAACv7G,GCj2FC,GAAGnD,CDi2FG,CAAC,CAAC,EAAG,CCj2FF,CAACC,kBAAkB;QDm2FxC,ACj2FCu9G,ODi2FM,IAAI,KCj2FM,CAACzyH,eAAe,CAAE2zH,UAAW,CAAC;MDm2FhD,ECj2FE,IAAKzxE,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAAC/+D,MAAM,GAAGuwI,QAAQ,EAAG;MDm2FzD,IAAK,ACj2FFxxE,IDi2FM,CAAC9pC,GCj2FC,GAAG,CDi2FG,CAAC,CAAC,CCj2FDjgB,CDi2FI,WCj2FQ,CAAEu7H,QAAS,CAAC;QDm2FzC,ACj2FC,IDi2FG,CAACn6H,IAAI,CAAEqgB,MAAO,CAAC;QAEnB,ACj2FC,KAAM,EDi2FA,ECj2FI96B,CAAC,CDi2FD,ECj2FI,CAAC,EAAE80I,EAAE,GAAG7gH,SAAS,EAAEj0B,CAAC,KAAK20I,OAAO,EAAE,EAAG30I,CAAC,EAAE80I,EAAE,IAAI,CAAC,EAAG;MDm2FlE,ICj2FG75G,KAAK,CAACxgB,IAAI,CAAEmkD,MAAM,CAAE5+D,CAAC,CAAG,CAAC,CAACgsB,YAAY,CAAE6oH,UAAU,EAAElB,gBAAiB,CAAC;MDm2FzE,IAAK,ACj2FF14G,IDi2FM,CAACrd,ACj2FF,CAACyZ,KDi2FO,CAACla,ACj2FF,CAACG,KDi2FO,CAAEwd,CCj2FF,CAAEsoC,IDi2FM,CAACxlD,GCj2FC,EAAEk3H,CDi2FI,CAAC,ACj2FF,CAAC,IDi2FM,IAAI,EAAG;QAElD,ECl2FC1xE,EDk2FG,CAAC3rC,KCl2FI,CDk2FE,ACl2FAq9G,EAAE,CDk2FChgI,ECl2FE,CAAC,CDk2FC,ACl2FC,CDk2FAa,ECl2FGslB,CDk2FA,CAAE,GCl2FG,CDk2FC,ACl2FAC,CDk2FCzD,MAAM,CCl2FC,CDk2FCqD,MAAM,CAACrD,MAAO,CAAC;MAEtD,CAAC,CCl2FC,KDk2FK;MCh2FN,EDk2FAoF,KAAK,CAAC7hB,UAAU,CAAE8f,MAAM,CAACld,MAAM,EAAE,IAAI,CAACA,MAAO,CAAC,CAACd,SAAS,CAAEge,MAAM,CAACrD,MAAO,CAAC;MCh2FzEw0B,EDk2FA,IAAI,CAACxzB,ACl2FE,CAAC14B,KAAK,GAAGqjE,IDk2FE,CAAExmC,GCl2FI,EDk2FC,CAACniB,IAAI,CAAEqgB,MAAM,CAACld,MAAO,CAAC,CAAClD,GAAG,CAAEmiB,KAAM,CAAE,CAAC;MCj2F9DovB,EDm2FA,IAAI,CAACxzB,ACn2FE,CAACtN,WAAW,CDm2FD,CAAEyR,CCn2FE,IDm2FG,ACn2FC,CDm2FAniB,IAAI,CAAEqgB,MAAM,CAACld,MAAO,CAAC,CAAC9C,GAAG,CAAE+hB,KAAM,CAAE,CAAC;ICj2F/D,EDm2FA;ICj2FA6rB,EDm2FA,GCn2FK,CAACkrF,GDm2FC,IAAI,ECn2FI,GAAGe,OAAO;IDq2F1B,ACp2FCjsF,KAAK,CAACmrF,eAAe,GAAG,CAAC;EDo2FzB,ECl2FA,OAAOzwE,QAAQ;EAEhB,EDg2FCl9D,GAAA;AC91FF,ID81FEnG,KAAA,EAED,SAAAod,MAAMA,CAAE2d,MAAM,EAAG;AC91FlB,MDg2FE,GCh2FOi6G,IDg2FAj6G,MAAM,CAACld,ECh2FMm3H,CAAExqF,GDg2FF,CAACptC,ICh2FS,EDg2FH,ACh2FM,CDg2FJ,IAAI,CAACS,MAAO,CAAC,IAAMkd,MAAM,CAACrD,MAAM,KAAK,IAAI,CAACA,MAAQ;EC91FhF,EDg2FA,ECh2FIgzG,QAAQ,GAAG,IAAIrS,OAAO,CAAC,CAAC;EDg2F3B,AC91FD,SAAS4c,iBAAiBA,CAAExmH,OAAO,EAAEpF,OAAO,EAAG;ID81F9CljB,AC51FA,GD41FA,CC51FKkjB,OAAO,KAAKne,2CAAgC,EAAG;ID41FpDlL,EC11FCyuB,GD01FD,EAED,EC51FS,CAACpF,MD41FV5O,CC51FiB,GAAGzP,CD41FfyP,CAAA,EAAG,4BC51FiC;IAExC,CAAC,CD41FD,KC51FO,ED41FA,EC51FK4O,ED41FD,IAAI,CAAC5kB,AC51FG,KAAK0G,MD41FG,CAAC,CAAC,CAACuP,IAAI,CAAE,IAAK,CAAC,wBC51Fc,EAAG;ID81F5D,EC51FE+T,OAAO,CAACpF,OAAO,GAAGpe,gCAAqB;ED41FxC,EC11FA;AD01FA,ICx1FA,OAAOwjB,OAAO;AD41FhB,EC11FC,ED01FK+O,SAAS,GAAG,aAAc,IAAIrI,OAAO,CAAC,CAAC;AAC7C,ECz1FC,EDy1FKsI,OCz1FIvjB,GDy1FM,ACz1FHA,CAAEuU,EDy1FI,KCz1FG,EAAG,MDy1FQ,IAAI0G,OAAO,CAAC,CAAC;AAC9C,IAAMuI,ACx1FJ,IAAKjP,GDw1FM,GAAG,CCx1FF,IAAIA,OAAO,CDw1FK,ACx1FJ1E,IDw1FQoL,KCx1FC,EDw1FM,ACx1FH,CDw1FI,CAAC;AAC3C,IAAMwI,ECv1FH,GDu1FQ,CCv1FFtU,EDu1FK,KCv1FE,GAAGoF,KDu1FS,ECv1FF,CAACpF,CDu1FK8L,MCv1FE,CDu1FK,CAAC,CAAC;AAEzC,IAAMyI,ECv1FH,IDu1FS,ACv1FJvU,GDu1FO,ICv1FA,KAAKne,IDu1FS,IAAIiqB,OAAO,CAAC,CAAC,0BCv1FU,IAAI9L,OAAO,KAAKle,2CAAgC,EAAG;ADw1FvG,IAAM0yB,ICt1FF,EDs1FQ,ECt1FH6sG,CDs1FM,OCt1FE,CAACt+C,GAAG,CAAE39D,CDs1FM,IAAI0G,ECt1FF,CAAC,EAAG,EDs1FK,CAAC,CAAC;AAC1C,IAAM2I,MCr1FD,GDq1FU,CCr1FJo3G,EDq1FO,KCr1FA,GAAGxK,KDq1FW,GCr1FH,CDq1FOv1G,ACr1FNjb,GAAG,CAAEuU,GDq1FQ,CAAC,CAAC,ECr1FF,CAAC,CAACA,OAAO;ADq1FN,IAExCsP,GAAG,GAAAr3B,ACt1FJ,ODs1FI,ACt1FGuuI,CDs1FHl3G,GAAA,aCt1FoB,CAAEm3G,OAAO,EAAEzmH,OAAO,CAACpF,OAAQ,CAAC;EDw1FxD,MCt1FG,CAAC,EDs1FJ0U,IAAA,ACt1FU,EDs1FkE;IAAA,IAA/DC,ECp1FT,IDo1Fe,ACp1FTlX,GDo1FSlQ,ECp1FJ,GAAG6X,IDo1FC,CAAAnqB,ECp1FM,CAACwiB,GDo1FP,ECp1FY,MDo1FZlQ,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAIue,OAAO,CAAC,CAAC;IAAA,IAAE8I,ECl1FjC,IAAKnX,GDk1FqC,ECl1FhC,CDk1FgClQ,GCl1F5BkQ,KAAK,CDk1FuB,ACl1FtBK,CDk1FsB7iB,KCl1FhB,CDk1FgB,ECl1Fb,CAAC,EAAG,GDk1FSsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAIue,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAAAnvB,QCh1FpE,IAAM4kB,GDg1F8D,OAAAmT,ECh1FlD,CDg1FkD,ECh1F/C,IAAI6yB,gCAAqB,CAAE9pC,KAAK,CAACK,MAAO,CAAC;IDk1FlE,IAAI,CAAC6W,GCj1FDpT,GDi1FO,GAAGoT,MAAM,ACj1FJ,CAACgzB,0BAA0B,CAAExG,QAAQ,EAAE/7B,OAAQ,CAAC;IDk1FhE,IAAI,CAACwP,GCj1FDysG,MDi1FU,ECj1FF,CDi1FKzsG,ACj1FJ/kB,GAAG,CAAEuV,KDi1FQ,ECj1FD,EAAE7D,YAAa,CAAC;EDm1F1C,UCj1FK6D,OAAO,CAAC5a,gBAAgB,CAAE,SAAS,EAAEshI,gBAAiB,CAAC;EDi1F3D,OAAA/uI,GC/0FI,OAAO6uI,ED+0FX,CAAAl3G,GAAA,WC/0F4B,CAAEnT,YAAY,CAAC6D,OAAO,EAAEA,OAAO,CAACpF,OAAQ,CAAC;ID+0FrEljB,GAAA,GC70FG,CAAC,MAAM;ID60FVnG,KAAA,EAED,CC70FK,QD60FLkZ,GAAGA,CAAE8kB,MAAM,EAAEC,SAAS,EAAG;MAExB,IAAI,CAACD,MAAM,CAACtjB,IAAI,CAAEsjB,MAAO,CAAC;MAC1B,IAAI,CAACC,CC90FD,OAAO,CD80FG,CAACvjB,EC90FA,ED80FI,CAAEujB,SAAU,CAAC;MAEhC,IC90FG,GD80FI,IAAI;IAEZ,IC90FG;ED80FF,IC50FC;ID40FD93B,AC10FA,GD00FA;IAAAnG,ACx0FA,KDw0FA,EAED,AC10FQyuB,OAAO,ED00Ff/T,IAAIA,CAAEwjB,GAAG,EAAG;ECx0FZ,ID00FC,IAAI,CAACF,MAAM,CAACtjB,IAAI,CAAEwjB,GAAG,CAACF,MAAO,CAAC;ECx0F/B,IDy0FC,IAAI,CAACC,ACz0FGk3G,SDy0FM,CAACz6H,IAAI,CAAEwjB,CCz0FGi3G,CAAE1gI,CDy0FF,CAACwpB,GCz0FM,EAAG,IDy0FC,CAAC;ICv0FpC,EDy0FA,ECz0FMxP,KDy0FC,ECz0FM,EDy0FF,CCz0FKha,KAAK,CAACC,MAAM;ID20F7B,ACz0FC+Z,OAAO,CAACra,mBAAmB,CAAE,SAAS,EAAE+gI,gBAAiB,CAAC;EDy0F1D,ECv0FA,IAAMD,OAAO,GAAGxK,QAAQ,CAACxwH,GAAG,CAAEuU,OAAQ,CAAC;IDu0FvCtoB,ACr0FA,GDq0FA,CCr0FK+uI,OAAO,KAAKlhI,SAAS,EAAG;IDq0F7BhU,ECn0FC0qI,GDm0FD,EAED,GCr0FU,CAACnR,KDq0FXp7F,CCr0FiB,CDq0FfA,ACr0FiB1P,CDq0FfjvB,CAAC,EAAEkV,GCr0FoB,CAAC,EDq0Ff,EAAG;MAEf,ACt0FCwgI,ODs0FMxgI,ACt0FC,CAAC8W,KDs0FI,CAAC9Q,CCt0FE,CAAC,CAAC,CDs0FA,CAAE,IAAI,CAACsjB,MAAO,CAAC,CAACljB,eAAe,CAAE,IAAI,CAACmjB,SAAS,EAAEz+B,CAAE,CAAC;IAEvE,ACt0FC;EDs0FA,ACp0FD;EAEA,EDk0FC2G,GAAA,ICl0FQqlB,OAAOA,CAAA,EAAG;IDk0FlBxrB,ACh0FA0qI,KDg0FA,EAED,CCl0FS,GAAG,IAAIrS,CDk0FhBj6F,MAAMA,ACl0FiB,CDk0Ffp8B,ACl0FgB,CDk0Ff,ACl0FgB,EDk0Fb;ECh0FZ,IDk0FC,IAAI,CAACi8B,SAAS,CAACvjB,IAAI,CAAE1Y,CAAE,CAAC,CAAC+Y,GAAG,CAAE,IAAI,CAACijB,MAAO,CAAC,CAACnkB,SAAS,CAAC,CAAC;ECh0FxD,IDk0FC,GCl0FM,IDk0FC,IAAI;IAEZ,ACn0FCK,GAAG,EAAEA,GAAG;EDm0FR,ECl0FAsR,OAAO,EAAEA;EACV,CAAC,CDi0FArlB,GAAA;AC/zFF,ID+zFEnG,KAAA,EAED,SAAAq+B,MAAMA,CAAE7+B,CAAC,EAAG;AC/zFb,IAAM41I,EDi0FJ,IAAI,CAACp3G,ACj0FM,GAAG,CAAC,EDi0FJ,CAACtjB,IAAI,CAAE,IAAI,CAACyjB,EAAE,CAAE3+B,CAAC,EAAEg+B,SAAU,CAAE,CAAC;MAE3C,OAAO,IAAI;ACj0Fb,IDm0FC;ACl0FD,EDk0FE;ACj0FF,IDi0FEr3B,GAAA;ACh0FF,IDg0FEnG,KAAA,EAED,SAAAs+B,mBAAmBA,CAAE5E,KAAK,EAAEhlB,MAAM,EAAG;ACj0FtC,IAAM2gI,EDm0FJ3gI,MAAM,CAACuG,MCn0FY,GAAG,CDm0FL,ACn0FO,CDm0FLye,ICn0FU,CDm0FL,CCn0FO,CDm0FL,IAAI,ACn0FM,CDm0FLsE,CCn0FO,IAAI,CDm0FJ,CAAC,ACn0FK,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE;MDq0FjE,IAAMO,iBAAiB,GAAG7pB,MAAM,CAACqH,GAAG,CAAE,IAAI,CAACkiB,SAAU,CAAC;ACn0FxD,MDq0FE,IAAKM,iBAAiB,GAAG,CAAC,EAAG;ACp0F/B,QDs0FG,OAAO7pB,MAAM,CAACgG,IAAI,CAAE,IAAI,CAACsjB,MAAO,CAAC;ACr0FpC,IAAMq1G,EDu0FJ,SCv0Fe,GAAG,EAAE;AAEtB,IAAMiC,EDu0FJ,OAAO5gI,ECv0FQ,GAAG,CDu0FL,CAACgG,IAAI,CAAE,IAAI,CAACsjB,CCv0FO,IAAIqoE,CDu0FJ,CAAC,CAACvrF,eAAe,CAAE,IAAI,CAACmjB,KCv0FF,CAAC,CAAC,EDu0FS,EAAEM,iBAAkB,CAAC;ACt0FxF,IDw0FC,ACx0FKg3G,WAAW,GAAG,aAAc,IAAI7hG,gBAAK,CAAC,CAAC;AAC7C,EDu0FE,ECv0FE8hG,UAAU,GAAG,IAAI;AACrB,IDs0FErvI,ACt0FEsvI,GDs0FF,eCt0FoB,GAAG,CAAC;AAC1B,IDq0FEz1I,ACr0FE01I,KDq0FF,EAED,SAAAz5G,KCv0FwB,GAAG,CAAC,MDu0FbA,CAAEvC,KAAK,EAAG;ACt0F1B,IAAIi8G,EDw0FF,OAAO5gI,IAAI,ACx0FI,CDw0FHmH,ECx0FM,EDw0FF,CAAE,ECx0FK,EDw0FD,CAACsiB,iBAAiB,CAAE9E,KAAM,CAAE,CAAC;IAEpD;ACx0FD,EDw0FE;ACv0FF,IDu0FEvzB,ACv0FIyvI,GDu0FJ,ACv0FO,GAAG,CAAE,CAAC,GAAG7gI,IAAI,CAACmH,IAAI,CAAE,CAAE,CAAC,IAAK,CAAC;AACtC,IDs0FElc,ACt0FI61I,KDs0FJ,EAED,ACx0FY,GAAG,CAAC,GAAGD,EDw0FnBp3G,CCx0FsB,gBDw0FLA,CAAE9E,KAAK,EAAG;MAE1B,IAAM6E,iBAAiB,GAAGf,SAAS,CAACviB,UAAU,CAAEye,KAAK,EAAE,IAAI,CAACsE,MAAO,CAAC,CAACjiB,GAAG,CAAE,IAAI,CAACkiB,SAAU,CAAC;ACx0F5F;AACA,MDy0FE;ACx0FF,IAAM63G,eAAe,GAAG,CACvB,aAAc,IAAI3gH,kBAAO,CAAE,CAAEygH,GAAG,EAAEC,OAAO,EAAE,CAAE,CAAC,EAC9C,aAAc,IAAI1gH,kBAAO,CAAEygH,GAAG,EAAEC,OAAO,EAAE,CAAE,CAAC,EAC5C,aAAc,IAAI1gH,kBAAO,CAAE,CAAE0gH,OAAO,EAAE,CAAC,EAAED,GAAI,CAAC,EAC9C,aAAc,IAAIzgH,kBAAO,CAAE0gH,OAAO,EAAE,CAAC,EAAED,GAAI,CAAC,EAC5C,aAAc,IAAIzgH,kBAAO,CAAE,CAAC,EAAEygH,GAAG,EAAE,CAAEC,OAAQ,CAAC,EAC9C,aAAc,IAAI1gH,kBAAO,CAAE,CAAC,EAAEygH,GAAG,EAAEC,OAAQ,CAAC,EAC5C,aAAc,IAAI1gH,kBAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EACxC,aAAc,IAAIA,kBAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EACtC,aAAc,IAAIA,kBAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACtC,aAAc,IAAIA,kBAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MDg0FrC,IAAKoJ,iBAAiB,GAAG,CAAC,EAAG;AC9zF/B,QDg0FG,OAAO,IAAI,CAACP,MAAM,CAACrhB,iBAAiB,CAAE+c,KAAM,CAAC;AC/zFhD,MDi0FE;ACh0FF,MDk0FE8D,SAAS,CAAC9iB,IAAI,CAAE,IAAI,CAACsjB,MAAO,CAAC,CAACljB,eAAe,CAAE,IAAI,CAACmjB,SAAS,EAAEM,iBAAkB,CAAC;ACj0FpF,MDm0FE,OAAOf,SAAS,CAAC7gB,iBAAiB,CAAE+c,KAAM,CAAC;ACl0F7C,IDo0FC;ACn0FD,EDm0FE;ACl0FF,IDk0FEvzB,GAAA;ACj0FF,IDi0FEnG,KAAA,EAED,SAAAy+B,mBAAmBA,CAAEnC,EAAE,EAAEpf,EAAE,EAAEwhB,kBAAkB,EAAEC,sBAAsB,EAAG;ACl0F3E,MDo0FE;ACn0FF,MDo0FE;ACn0FF,MDo0FE;ACn0FF,MDo0FE;ACn0FF,MDo0FE;ACn0FF,MDo0FE;ACj1FF,IAeMo3G,cAAc,GAAArvI,OAAA,CAAAqvI,cAAA;EAEnB,IDk0FCt4G,KCl0FDs4G,KDk0FW,CAACr7H,IAAI,CAAE4hB,EAAG,CAAC,CAAC3hB,ACl0FV6vC,GDk0Fa,CAAEttC,EAAG,CAAC,CAAC/B,ACl0FZ,EAAG,YDk0FuB,CAAE,GAAI,CAAC;ICl0F9BnV,EDm0FvB03B,OAAO,CAAChjB,IAAI,CAAEwC,ACn0FS,EDm0FN,CAAC,CAACnC,GAAG,ACn0FCg7H,CDm0FCz5G,EAAG,CAAC,CAACziB,SAAS,ACn0Ff,CDm0FgB,CAAC;ICj0FxC,EDk0FA8jB,ECl0FI,CAACq4G,EDk0FA,CAACt7H,IAAI,CAAE,CCl0FE,GDk0FE,ACl0FC8vC,CDk0FAxsB,MAAO,CAAC,ACl0FA,CDk0FCjjB,GAAG,CAAE0iB,UAAW,CAAC;ICj0F3C,EDm0FA,ECn0FI,CAACw4G,CDm0FCr3G,SAAS,GAAGtC,EAAE,CAAC5f,KCn0FK,GAAG,EDm0FE,CAAEQ,CCn0FA,CDm0FG,CAAC,GAAG,GAAG;ICj0F3C,EDk0FA,ECl0FI,CAACg5H,CDk0FCr3G,GAAG,GAAG,ACl0FA,CDk0FE,ECl0FC,CAAC,CDk0FE,CAACZ,SAAS,CAACliB,GAAG,CAAE2hB,OAAQ,CAAC;ICj0F3C,EDk0FA,ECl0FI,CAACy4G,CDk0FCr3G,EAAE,GAAGnB,GCl0FG,EDk0FE,CAAC5hB,ACl0FA,CAAC,EDk0FE,CAAE,IAAI,CAACkiB,SAAU,CAAC;ICj0FtC,EDk0FA,ECl0FI,CAACm4G,CDk0FCjgI,EAAE,GAAG,CAAEwnB,GCl0FE,EDk0FG,CAAC5hB,ACl0FD,EAAE,CDk0FE,CAAE2hB,OAAQ,CAAC;ICj0FjC,EDk0FA,ECl0FI,CAAC24G,CDk0FCh2I,CAAC,GAAGs9B,ICl0FI,CDk0FC,CAAC1hB,CCl0FC,EAAE,KDk0FK,CAAC,CAAC;ICj0F1B,EDk0FA,ECl0FI,CAACq6H,CDk0FCv1H,GAAG,GAAGhM,ACl0FA,GAAG,CDk0FC,CAAC8B,ACl0FA,GDk0FG,CAAE,CAAC,GAAGgoB,GAAG,GAAGA,GAAI,CAAC;ICh0FrC,EDi0FA,ECj0FI,CAAC03G,CDi0FDx3G,EAAE,EAAExN,EAAE,EAAEyN,ICj0FM,GDi0FC,ACj0FE,EDi0FAC,ECj0FI,IDi0FE;ICh0F3B,EDk0FA,ECl0FI,CAACu3G,CDk0FAz1H,GAAG,GAAG,CAAC,EAAG,MCl0FM,GAAG,IAAI;IAC5B,IDm0FC,ACn0FG,CAAC01H,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACC,gBAAgB,CAAE,IAAI,CAACH,aAAc,CAAC;EAE5C,MDi0FEx3G,EAAE,GAAGF,GAAG,GAAG1oB,EAAE,GAAG2oB,EAAE;QAClBvN,EAAE,GAAGsN,GAAG,GAAGC,EAAE,GAAG3oB,EAAE;ECh0FpB,MDi0FE8oB,MAAM,GAAGL,SAAS,GAAG7d,GAAG;ACh0F3B,QDk0FG,IAAKge,EAAE,IAAI,CAAC,EAAG;ACj0FlB,UDm0FI,IAAKxN,EAAE,IAAI,CAAE0N,MAAM,EAAG;ACl0F1B,YDo0FK,IAAK1N,EAAE,IAAI0N,MAAM,EAAG;ACn0FzB,cDq0FM;ACp0FN,cDq0FM;ACp0FN;AACA,cDq0FM,IAAMC,MAAM,GAAG,CAAC,GAAGne,GAAG;ACp0F5B,cDq0FMge,EAAE,IAAIG,MAAM;ACp0FlB,cDq0FM3N,EAAE,IAAI2N,MAAM;ACp0FlB,cDq0FMF,OAAO,GAAGD,EAAE,IAAKA,EAAE,GAAGF,GAAG,GAAGtN,EAAE,GAAG,CAAC,GAAGuN,EAAE,CAAE,GAAGvN,EAAE,IAAKsN,GAAG,GAAGE,EAAE,GAAGxN,EAAE,GAAG,CAAC,GAAGpb,EAAE,CAAE,GAAG9V,CAAC;ACp0FrF,YDs0FK,CAAC,MAAM;ACr0FZ,cDu0FM;ECn1FL,OAAA+F,YAAA,CAAA2vI,cAAA;IAAA5vI,GAAA,ODq1FKorB,EAAE,GAAGqN,SAAS;ICr1FnB5+B,KAAA,EAaA,GDy0FK++B,EAAE,GAAGhqB,CCz0FV4hI,GDy0Fc,CAAC/gI,GAAG,CAAE,CAAC,ACz0FZ+gI,CAAE9mF,CDy0FY,EAAIhxB,ECz0FX,CDy0Fc,CCz0FuB,EDy0FpBtN,EAAE,GAAGuN,EAAE,CAAG,CAAC;MCz0FS,IAAnC83G,ID00Fb53G,CC10FkB,GAAApoB,GD00FX,GAAG,CAAEmoB,EAAE,AC10FI,CAAAz6B,ED00FDy6B,EAAE,EC10FD,CD00FIxN,EAAE,IAAKA,CC10FX3a,CD00Fa,GAAG,CAAC,GAAGT,CC10FpB,CD00FsB,CAAE,GAAG9V,CAAC,EC10F5B2T,SAAA,GAAA4C,SAAA,MAAG,CAAC;MAAA,IAAE+uB,ED40FzB,EC50F6B,GAAA/uB,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,GAAG;MAAA,ID80FpC,AC90FsCgvB,CD80FrC,EC90FwC,GAAAhvB,CD80FlC,QC90FkC,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,GAAG;MAEjD4+H,MD80FG,IC90FO,GAAG,IAAI,CAACQ,SAAS,CAACtrF,eAAe,CAAC,CAAC;MAC7C+qF,kBAAkB,GAAG,IAAI,CAACO,SAAS,CAAChmF,iBAAiB,CAAC,CAAC;MACvD0lF,MD80FGnkH,EAAE,GAAG,CAAEqN,SAAS,AC90FE,GAAG,IAAI,CAACo3G,SAAS,CAAC9lF,oBAAoB,CAAC,CAAC;MAC7DylF,MD80FG52G,EAAE,GAAGhqB,EC90FK,ED80FD,CAACa,AC90FG,GD80FA,CAAE,AC90FE,CD80FD,AC90FEogI,ED80FA,EAAIn3G,GAAG,EC90FE,CD80FCtN,AC90FA6+B,ED80FE,AC90FA,CAAC5rC,ED80FEsa,EAAE,CAAG,CAAC,CC90FD;MAEzC,IAAI,CAACk3G,CD60FFh3G,OAAO,CC70FI,CAACoxB,CD60FF,CAAErxB,AC70FE,CAACva,CD60FD,GAAGua,EAAE,CC70FG,ED60FAxN,CC70FG,CD60FD,IAAKA,AC70FC,ED60FC,GAAG,CAAC,GAAGpb,EAAE,CAAE,GAAG9V,CAAC;MC30FjD,ID60FE,AC70FE,CAACw2I,QAAQ,CAAE,GAAI,CAAC;MAEpB,ED60FC,CAAC,CC70FIC,KD60FE,aC70FgB,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAClDD,ID80FE,IAAKvlH,EAAE,IAAI,CAAE0N,GC90FG,CAAC/Q,ED80FE,EAAG,OC90FM,GAAG,IAAI;MAErC,IAAI,CAAC8oH,CD80FF,aC90FgB,CAAEnnF,KAAK,EAAElqB,IAAI,EAAEC,GAAG,EAAEkxG,kBAAmB,CAAC;MAE3D,IAAKF,KAAK,GAAG,CAAC,EAAG;QAEhB,ID40FE73G,AC50FE,CAACk4G,CD40FD,GAAGliI,CC50FG,CAAE+hI,ED40FD,CAAClhI,GAAG,CAAE,CAAC,EAAE,EAAI,CAAEipB,GAAG,EC50FC,CD40FED,CC50FA,CAAC,EAAE,CAAC,EAAEg4G,ED40FG,GAAG93G,AC50FA,CAAC,CD40FC,CAAG,CAAC;MC10FnD,MD20FGvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAK,CAAEH,SAAS,GAAG7pB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEgpB,SAAS,EAAE,CAAEzoB,EAAG,CAAC,EAAEyoB,SAAU,CAAC;MCz0FvF,IAAI,CAACs4G,CD00FFl4G,OAAO,GAAG,AC10FG,CD00FDD,AC10FG+3G,ED00FD,GAAG/3G,EAAE,GAAGxN,EAAE,IAAKA,EAAE,AC10FG,CAAC,ED00FD,CAAC,GAAGpb,EAAE,CAAE,GAAG9V,CAAC;MCz0FjD,ID20FE,AC30FE,CD20FD,AC30FE82I,MD20FI,EC30FI,CAAEL,CD20FDvlH,EAAE,IAAI0N,MAAM,EAAG,GC30FK,CAAC;MAEnC,MD20FG,CC30FI63G,kBAAkB;IAE1B;YD20FI/3G,EAAE,GAAG,CAAC;ICz0FV,QD00FIxN,EAAE,GAAGxc,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEgpB,SAAS,EAAE,CAAEzoB,EAAG,CAAC,EAAEyoB,SAAU,CAAC;ACz0F9D,YD00FKI,OAAO,GAAGzN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGpb,EAAE,CAAE,GAAG9V,CAAC;ACz0FvC,UD20FI,CAAC,MAAM;AC10FX,YD40FK;AC30FL;AACA,YD40FK0+B,EAAE,GAAGhqB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIipB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAG,CAAC;AC30FnD,YD40FKvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAKH,SAAS,GAAG7pB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEgpB,SAAS,EAAE,CAAEzoB,EAAG,CAAC,EAAEyoB,SAAU,CAAC;AC30FvF,YD40FKI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGpb,EAAE,CAAE,GAAG9V,CAAC;AC30FnD,UD60FI;AC50FJ,QD80FG;ECv1FF,IDy1FC,CAAC,MAAM;ICz1FR8F,GAAA,CD21FE;IC31FFnG,KAAA,EAUA,SAAAo3I,mBAAmBA,CAAEC,eAAe,EAAwB;MAAA,EDm1F1D9lH,EAAE,ACn1FkC3G,GDm1F7BiU,GAAG,GAAG,CAAC,ECn1FkC,CDm1F7B,CAAED,CCn1F2BhoB,QDm1FlB,CCn1FkB,CAAAtS,CDm1Ffs6B,KCn1Fe,IDm1FN,ICn1FMhoB,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI;MAExD,EDk1FCmoB,EAAE,GAAGhqB,ACl1FC,IDk1FG,ACl1FC,CDk1FAa,ACl1FC0hI,GDk1FE,CAAE,CAAC,EAAE,EAAIz4G,GAAG,ACl1FF,CAAEw4G,EDk1FG9lH,EAAE,GAAGuN,EAAE,CAAG,CAAC,ICl1FC,EAAElU,YAAa,CAAC;IAE1D,IDi1FEoU,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGpb,EAAE,CAAE,GAAG9V,CAAC;MAE/C;ICj1FD,EDm1FC,IAAKq+B,kBAAkB,EAAG;ACl1F5B,QDo1FGA,kBAAkB,CAAChkB,IAAI,CAAE,IAAI,CAACsjB,MAAO,CAAC,CAACljB,eAAe,CAAE,IAAI,CAACmjB,SAAS,EAAEc,EAAG,CAAC;ACn1F/E,MDq1FE;ACp1FF,MDs1FE,IAAKJ,sBAAsB,EAAG;ACr1FhC,QDu1FGA,sBAAsB,CAACjkB,IAAI,CAAE+iB,UAAW,CAAC,CAAC3iB,eAAe,CAAE4iB,OAAO,EAAEnM,EAAG,CAAC;ACt1F3E,MDw1FE;ACv1FF,MDy1FE,OAAOyN,OAAO;ACx1FhB,ID01FC;ACz1FD,EDy1FE;ACx1FF,IDw1FE74B,GAAA;ECj2FD,EDi2FCnG,KAAA,EAED,SAAAm/B,eAAeA,CAAEpE,MAAM,EAAErmB,MAAM,EAAG;ICn2FlCvO,EDq2FCq3B,CCr2FD,QDq2FU,CAACviB,UAAU,CAAE8f,MAAM,CAACld,MAAM,EAAE,IAAI,CAACmgB,MAAO,CAAC;ICr2FnDh+B,EDs2FC,GCt2FD,CDs2FOo/B,CC51FP,ED41FU,GAAG5B,IC51Fb+5G,KD41FsB,CAACx7H,GAAG,CAAE,CC51FjBw7H,CAAErC,ED41FmB,CAACj3G,IC51Fb,EAAwB,GD41FD,CAAC;MAC3C,AC71F2C,ID61FrC3oB,AC71FesV,ED61Fb,GAAG4S,OC71FsB,ED61Fb,CAACzhB,AC71FYnF,GD61FT,CAAE4mB,KC71FO,CAAAl5B,GD61FG,CAAC,EC71FJ,CD61FO86B,GAAG,GAAGA,CC71FbxoB,ED61FgB,OC71FhB,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI;MD81FxC,AC51FA,ID41FMyoB,GC51FC,ID41FM,AC51FF,CAACi4G,ED41FIv8G,MAAM,CAACrD,GC51FC,CAAEw9G,ED41FG,GAAGn6G,EC51FC,EAAEnQ,ED41FG,CAAC8M,MAAM,GC51FG,CAAC;IAElD,ED41FC,IAAKpiB,EAAE,GAAG+pB,OAAO,EAAG,OAAO,IAAI;MAE/B,IAAMC,GAAG,GAAGvqB,IAAI,CAACmH,IAAI,CAAEmjB,OAAO,GAAG/pB,EAAG,CAAC;IC51FtC;AACD,MD61FE;AC51FF,MD61FE,IAAMiqB,EAAE,GAAGH,GAAG,GAAGE,GAAG;AC51FtB;EAHC,IDi2FC;ICj2FDn5B,EDk2FC,CCl2FD,GDk2FOq5B,EAAE,GAAGJ,GAAG,GAAGE,GAAG;ICl2FrBt/B,KAAA,EAIA,SAAAw3I,oBAAoBA,CAAA,EAAG;MDg2FtB,AC91FA,IAAK,IAAI,CAAChB,gBAAgB,KAAK,IAAI,EAAG;MD+1FtC,EC71FC,ED61FIh3G,EAAE,AC71FF,CAACg3G,ED61FI,CAAC,EAAG,OAAO,IAAI,AC71FH,GAAGiB,mBAAmB,CAAC,CAAC;QAC7C,IAAI,CAACf,gBAAgB,CAAE,IAAI,CAACF,gBAAiB,CAAC;MD81F/C,AC51FA;IAED,ED21FC;MACA;IC11FD,ED21FC,IAAKj3G,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI,CAACpB,EAAE,CAAEqB,EAAE,EAAE9qB,MAAO,CAAC;AC11F5C;AACA,MD21FE;AC11FF,MD21FE,OAAO,IAAI,CAACypB,EAAE,CAAEoB,EAAE,EAAE7qB,MAAO,CAAC;EC91F7B,EDg2FA;EAAC,ECh2FDvO,GAAA;IDg2FCA,ACh2FDnG,GDg2FC,ECh2FD,EAIA,SAAA03I,4BAA4BA,CAAA,EAAG;ID41F9B13I,EC11FA,GD01FA,CC11FK,CD41FN,GC51FU,CAACy2I,KD41FX37G,YC51F4B,ID41FZA,CAAEC,AC51Fe,IAAI,ED41Fb,AC51FgB,ED41Fb;MAE1B,EC51FC,IAAI,CD41FE,AC51FD07G,ID41FK,CAACj4G,YC51FW,GAAGm5G,ED41FG,CAAE58G,MAAM,CAACld,MAAO,CAAC,GC51FA,CD41FMkd,AC51FL,CAAC,KD41FU,CAACrD,MAAM,GAAGqD,MAAM,CAACrD,MAAQ;IAEpF,IC71FE,IAAI,CAACg/G,gBAAgB,CAAE,IAAI,CAACD,iBAAkB,CAAC;ED61FhD,IC31FA;ID21FAtwI,ACz1FD,GDy1FC;IAAAnG,KAAA,EAED,SAAAy/B,eAAeA,CAAEvE,KAAK,EAAG;ICz1FzB,ED21FC,IAAM3e,WAAW,GAAG2e,KAAK,CAAC5D,MAAM,CAACvb,GAAG,CAAE,IAAI,CAACkiB,SAAU,CAAC;AC11FxD,MD41FE,IAAK1hB,WAAW,KAAK,CAAC,EAAG;AC31F3B,QD61FG;AC51FH,QD61FG,IAAK2e,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC+B,MAAO,CAAC,KAAK,CAAC,EAAG;AC51FrD,UD81FI,OAAO,CAAC;ECl2FX,MDo2FE;ICp2FF73B,GAAA;IAAAnG,IDs2FE,CCt2FF,EAKA,SAAAwrB,OAAOA,CAAA,EAAG;MAET,IAAI,CAACosH,QAAQ,CAAC,CAAC;MAEf,ED+1FC,EC/1FI,IAAI,CD+1FD,AC/1FEpB,ID+1FE,YC/1Fc,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,CAAChrH,OAAO,CAAC,CAAC;MDi2FrE,ACh2FA,IAAK,IAAI,CAACirH,iBAAiB,KAAK,IAAI,EAAG,IAAI,CAACA,iBAAiB,CAACjrH,OAAO,CAAC,CAAC;IAExE,EDg2FC,IAAMhsB,CAAC,GAAG,EAAI,IAAI,CAACw+B,MAAM,CAACjiB,GAAG,CAAEmf,KAAK,CAAC5D,MAAO,CAAC,GAAG4D,KAAK,CAACC,QAAQ,CAAE,GAAG5e,WAAW;;IC91F/E,EDg2FC;ECh2FD;IAAApW,EDk2FC,CCl2FD,MDk2FQ3G,CAAC,IAAI,CAAC,GAAGA,CAAC,GAAG,IAAI;IAEzB,ACp2FAQ,KAAA,EAEA,SAAA62I,QAAQA,CAAEgB,QAAQ,EAAG;EDk2FpB,ICh2FA,IAAI,CAAC3B,OAAO,GAAGnhI,IAAI,CAACoC,KAAK,CAAEpC,IAAI,CAAC+iI,IAAI,CAAED,QAAS,CAAE,CAAC;IDg2FlD1xI,EC/1FA,CD+1FA,GC/1FI,CAACgwI,SAAS,GAAGphI,IAAI,CAACgD,GAAG,CAAE,CAAC,EAAE,IAAI,CAACm+H,OAAQ,CAAC;ID+1F5Cl2I,AC71FD,KD61FC,EAED,SAAA0/B,cAAcA,CAAExE,KAAK,EAAExmB,MAAM,EAAG;EC/1F/B,IDi2FA,IAAMlV,CAAC,GAAG,IAAI,CAACigC,eAAe,CAAEvE,KAAM,CAAC;ICj2FvC/0B,EDm2FA,CCn2FA,GDm2FK3G,CAAC,KAAK,IAAI,EAAG;ICn2FlBQ,IDq2FC,CCr2FD,EAED,IDm2FS,IAAI,CCn2Fb43I,QAAQA,CAAA,EAAG;MDq2FV,ACn2FA,IAAK,IAAI,CAACrB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,CAAC/qH,OAAO,CAAC,CAAC;MDq2F/D,ACn2FA,IAAK,GDm2FE,CCn2FE,CAACyqH,EDm2FC,CAAC93G,EAAE,CAAE3+B,CAAC,EAAEkV,MAAO,CAAC,KCn2FI,KAAK,IAAI,EAAG,IAAI,CAACuhI,qBAAqB,CAACzqH,OAAO,CAAC,CAAC;IDq2FhF,ECn2FC,KAAM,IAAIvrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACm2I,UAAU,CAAC9xI,MAAM,EAAErE,CAAC,EAAG,EAAG;EDm2FpD,MCj2FC,IAAI,CAACm2I,UAAU,CAAEn2I,CAAC,CAAE,CAACurB,OAAO,CAAC,CAAC;IDi2F/BrlB,EC/1FA,CD+1FA;IAAAnG,AC71FD,KD61FC,EAED,SAAAi7B,eAAeA,CAAEC,KAAK,EAAG;EC/1FxB,IDi2FA;ICj2FA/0B,GAAA;IAAAnG,EDm2FA,GCn2FA,CDm2FM2/B,CCj2FP,SAAAw3G,CDi2FkB,GAAGj8G,ICj2Fbi8G,CDi2FkB,ACj2FhBY,CDi2FiB97G,WCj2FL,EAAG,EDi2FiB,CAAE,IAAI,CAAC+B,MAAO,CAAC;MAExD,ACj2FA,IDi2FK2B,ACj2FD,CAACq2G,SAAS,CDi2FE,ACj2FD3lF,KDi2FM,CAAC,EAAG,OCj2FK,CAAEmlF,UAAU,EAAEC,kBAAkB,EAAEC,qBAAsB,CAAC;MACvF,EDk2FC,ECl2FG,CAACM,IDk2FG,IAAI,CCl2FE,CAAC5lF,EAAE,CAAC5rC,OAAO,GAAGmxH,aAAa;MDo2FzC,ACl2FAoC,YAAY,CAAC/pH,WAAW,GAAG,KAAK;MDo2FhC,ACn2FAgqH,IDm2FMz7H,QCn2FM,CAAEw7H,EDm2FG,GAAG78G,KAAK,CAAC5D,CCn2FA,EAAE,CAAC,EDm2FG,ACn2FD,CDm2FEvb,ACn2FD,EAAEg8H,CDm2FE,CAAE,IAAI,CAAC95G,KCn2FG,CAAC/W,GDm2FM,CAAC,CCn2FF,EAAE6wH,YAAY,CAAC5wH,MAAO,CAAC;IAE5E,EDm2FC,IAAK5K,WAAW,GAAGojB,WAAW,GAAG,CAAC,EAAG;ECn2FrC,MDq2FC,OAAO,IAAI;ICr2FZx5B,EDu2FA,CCv2FA;IAAAnG,KAAA,EAED,SAAAs3I,YAAYA,CAAE7oH,OAAO,EAAE7D,YAAY,EAAG;MDu2FrC,ACr2FA,IAAK6D,OAAO,CAACpF,OAAO,KAAKre,gCAAqB,IAAIyjB,OAAO,CAACpF,OAAO,KAAKpe,gCAAqB,EAAG;QAE7F,IAAI,CAAC4rI,QAAQ,CAAEpoH,OAAO,CAAC3H,KAAK,CAACxiB,MAAM,KAAK,CAAC,GAAG,EAAE,GAAKmqB,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAACI,KAAK,IAAIuH,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAACA,KAAK,CAACI,KAAQ,CAAC;MDq2FlH,ACn2FA,CAAC,MDm2FM,ACn2FA,KDm2FK;IAEb,ICr2FU;EDq2FT;IAAA/gB,GAAA,CCn2FC,IAAI,CAAC0wI,QAAQ,CAAEpoH,OAAO,CAAC3H,KAAK,CAACI,KAAK,GAAG,CAAE,CAAC;IDm2FzClnB,ECj2FA,GDi2FA,EAED,SAAA4/B,YAAYA,CAAEtG,GAAG,EAAE5kB,MAAM,EAAG;MAE3B,ACn2FA8gI,IDm2FI31G,IAAI,EAAEC,ACn2FA,GAAG,CDm2FC,EAAEC,CCn2FC,CAACi2G,GDm2FG,EAAEh2G,ICn2FI,CDm2FC,ACn2FA0qB,EDm2FEzqB,KAAK,EAAEC,KAAK,CCn2FC,CAAC,CAAC;MDq2F7C,ACp2FAu1G,IDo2FMt1G,OAAO,GAAG,CAAC,GAAG,ACp2FF,GAAG,CDo2FG,CAAClC,ECp2FA,CAAC+3G,MDo2FQ,CAAChgI,CAAC,CCp2FD,CAACg6C,iBAAiB,CAAC,CAAC;MACvD0lF,EDo2FCt1G,OAAO,GAAG,CAAC,GAAG,IAAI,CAACnC,ACp2FC,GAAG,IAAI,CAAC+3G,CDo2FA,CAACt0I,CAAC,MCp2FO,CAACwuD,oBAAoB,CAAC,CAAC;MAC7DylF,EDo2FCt1G,OAAO,GAAG,CAAC,ACp2FC,GDo2FE,ACp2FC,IDo2FG,ACp2FC,CDo2FApC,ACp2FC+3G,SDo2FQ,ACp2FC,CDo2FApqH,ACp2FCwkC,CDo2FA,CCp2FE,CAAC5rC,OAAO;MDs2FzC,ACp2FA,IDo2FMwZ,ACp2FF,CAACg4G,KDo2FO,GAAG,CCp2FD,CAAC5lF,EDo2FI,ACp2FF,CDo2FGpyB,ACp2FFxZ,MDo2FQ,CCp2FD,GAAG,KAAK;MDs2FjC,ACp2FA,IDo2FK2b,ACp2FC22G,ODo2FM,IAAI,CAAC,EAAG,ICp2FI,GAAGlsH,YAAY,IAAI,IAAI,CAACmsH,gBAAgB,CAAC,CAAC;MAClE,EDq2FCl3G,ECr2FG,CAACo4G,CDq2FA,GAAG,CAAE3+G,GAAG,CAAC3jB,GAAG,CAACK,CAAC,ECr2FE,CDq2FCgoB,ACr2FCvP,MDq2FK,CAACzY,ACr2FC,CDq2FA,CCr2FE8gI,GDq2FG32G,OAAO,QCr2FS,CAAC;MACpD,EDq2FCL,ECr2FG,CAACo3G,CDq2FA,GAAG,CAAE59G,GAAG,CAAC1jB,ECr2FE,CDq2FC,ACr2FCkhI,CDq2FA9gI,CAAC,GAAGgoB,MAAM,CAAChoB,CAAC,IAAKmqB,CCr2FE,CAAC,KDq2FI;MAE1C,ACt2FA,CDs2FC,GCt2FG,CAACg3G,EDs2FE,MCt2FM,CAAEL,kBAAmB,CAAC;MAEnC,EDs2FCj3G,IAAI,CCt2FEi3G,EDs2FC,CAAEx9G,GAAG,CAAC1jB,GAAG,CAACI,CAAC,GAAGgoB,GCt2FG,GDs2FG,CAAChoB,CAAC,IAAKmqB,OAAO;ICp2F3C,IDq2FEL,IAAI,GAAG,CAAExG,GAAG,CAAC3jB,GAAG,CAACK,CAAC,GAAGgoB,MAAM,CAAChoB,CAAC,IAAKmqB,OAAO;ECr2F1C,IDu2FA;ICv2FAh6B,EDy2FA,CCz2FA,GDy2FKi6B,OAAO,IAAI,CAAC,EAAG;ICz2FpBpgC,ID22FC+/B,CC32FD,EAED,EDy2FO,GAAG,CAAEzG,GAAG,ACz2Ffy9G,CDy2FgBphI,GAAG,CAACjU,CAAC,GAAGs8B,MAAM,CAACt8B,ACz2Ffq1I,CDy2FgB,ACz2FhB,EAAG,EDy2FkB32G,OAAO;MCv2F3C,EDw2FCJ,ECx2FK9Y,GDw2FA,ECx2FK,CDw2FF,CAAEoS,CCx2FG,CAAC,CDw2FD,CAAC1jB,CCx2FGb,EDw2FA,CAACrT,CAAC,ACx2FE,CAACkU,EDw2FAooB,CCx2FG,CAAE,IDw2FC,ACx2FG,CDw2FFt8B,ACx2FGy0I,CDw2FF,IAAK/1G,ICx2FM,EAAE,CDw2FD,CCx2FG,GAAG,CAAE,CAAC;MD02FpD,ACz2FA,CDy2FC,GCz2FKjZ,GDy2FC,GCz2FK,GAAG,CAAC,GAAG,IAAI,CAACgvH,SAAS;MAEjC,EDy2FCp2G,ECz2FKwoC,GDy2FA,GAAG,ACz2FG,CDy2FDjvC,ECz2FI,CDy2FD,CAAC1jB,GAAG,CAAClU,CAAC,GAAGs8B,MAAM,CAACt8B,CAAC,IAAK0+B,OAAO;QAC1CJ,ACz2FAvW,KDy2FK,GAAG,CAAE6P,ACz2FD,EAAEztB,CDy2FE,CAAC8J,GAAG,CAACjU,CAAC,GAAGs8B,MAAM,CAACt8B,CAAC,IAAK0+B,CCz2FZ,MDy2FmB;MAE3C,EC12FC1W,SAAS,EAAE7d,uBAAY;MD42FxB,EC32FCye,ED22FMuV,IAAI,GAAGG,KAAK,CC32FH,EAAE,CD22FSD,IC32FJ,CD22FS,GAAGD,IAAM,EAAG,OAAO,IAAI;MAEvD,EC52FC3+B,ED42FI4+B,EC52FA,EAAEtzB,CD42FG,GAAGozB,IAAI,IAAIx7B,KAAK,CAAEw7B,IAAK,CAAC,CC52Fd,CD42FiBA,IAAI,GAAGE,KAAK;MAEjD,EC72FCpW,ED62FIqW,IC72FE,CD62FG,CC72FDhzB,ED62FI8yB,IAAI,IAAIz7B,KAAK,CAAEy7B,IAAK,CAAC,AC72Ff,ED62FkBA,IAAI,GAAGE,KAAK;MAEjD,EC92FCxa,ED82FI6a,OAAO,CC92FD,EAAEpvB,CD82FG,CAAC,EAAG,2BC92Fa;QDg3FhCgvB,AC/2FA/R,KD+2FK,GAAG,CAAEoL,EC/2FC,CD+2FE,CAAC3jB,AC/2FD,GD+2FI,CAACiW,CAAC,GAAGoS,MAAM,CAACpS,CAAC,IAAKyU,OAAO;MC92F3C,CAAC,CD+2FAH,KAAK,GAAG,CAAE5G,GAAG,CAAC1jB,GAAG,CAACgW,CAAC,GAAGoS,MAAM,CAACpS,CAAC,IAAKyU,OAAO;MAE3C,AC/2FA,CD+2FC,GC/2FKy2G,GD+2FC,eC/2FiB,GAAGoB,mBAAmB,CAAEhxH,KAAK,EAAEC,MAAM,EAAEohD,MAAO,CAAC;MAEvE,ED+2FCtoC,EC/2FI,GD+2FC,CC/2FG,CAACg2G,CD+2FD,CAAE38G,GAAG,CAAC1jB,GAAG,CAACgW,CAAC,GAAGoS,MAAM,CAACpS,AC/2FC,CD+2FA,IAAKyU,AC/2FA,IAAI,GD+2FG,CC/2FC,IAAI,CAAC41G,qBAAqB,CAAC/uH,KAAK,KAAKA,KAAK,IAAI,IAAI,CAAC+uH,qBAAqB,CAAC9uH,MAAM,KAAKA,MAAM,EAAG;QDg3FxI+Y,AC92FA,IAAK,CD82FA,GAAG,AC92FC,CD82FC5G,AC92FA28G,GD82FG,CAACtgI,GAAG,CAACiW,CAAC,GAAGoS,MAAM,CAACpS,CAAC,CC92FC,GD82FIyU,EC92FC,IAAI,CD82FE,CC92FC;MDg3F5C,IC92FE,IAAI,CAACu3G,QAAQ,CAAC,CAAC;MDg3FjB,EC92FC,ED82FM/3G,IAAI,GAAGK,KAAK,IAAQD,KAAK,GAAGH,IAAM,EAAG,OAAO,IAAI;MAEvD,EC92FC,ED82FIG,EC92FA,CAACg2G,ED82FI,GAAGp2G,IAAI,IAAIA,IAAI,IC92FE,CD82FGA,EC92FAq4G,ED82FI,EAAGr4G,IAAI,GAAGI,KAAK,GC92FA,CAAE/Y,KAAK,EAAEC,MAAM,EAAEohD,MAAO,CAAC;MDg3F1E,EC92FC,ED82FIroC,EC92FIg2G,GD82FC,GAAGp2G,CC92FG,GD82FC,AC92FI,ID82FAA,AC92FI,CAAhBo2G,GD82FgB,IC92FT,CD82Fcp2G,IAAI,EAAGA,IAAI,GAAGI,KAAK;QC92FvB,IAAAi4G,cAAA,GAC0DC,aAAa,CAAElC,OAAQ,CAAC;MD+2F5G,EC/2Fe,IAAI,CAACG,SAAS,GAAA8B,cAAA,CAAxBE,QAAQ;QAA6B,IAAI,CAACjC,UAAU,GAAA+B,cAAA,CAA1BG,SAAS;MDi3FxC,ECj3FmE,EDi3F9Dx4G,ECj3FkE,CAACw2G,CDi3F/D,GAAG,CAAC,EAAG,ACj3F+D,GAAA6B,IDi3FxD,IAAI,MCj3FoD,CAApBI,MAAM;MDm3FjE,ECj3FC,IAAI,CDi3FE,ACj3FDhC,IDi3FK,CAACp4G,EAAE,CAAE0B,IAAI,CCj3FD,GDi3FK,ACj3FF24G,CDi3FG,GAAG34G,IAAI,GAAGC,GCj3FC,CDi3FG,ACj3FDo2G,EDi3FGxhI,KCj3FI,CDi3FG,CAAC,ACj3FFwS,KAAK,EAAEC,MAAO,CAAC;IDm3F/D,ECj3FC;EDi3FA,IC/2FA,OAAO2vH,kBAAkB;ID+2FzB3wI,AC72FD,GD62FC;EC72FA,ED62FAnG,KAAA,EAED,SAAA66B,aAAaA,CAAEvB,GAAG,EAAG;IC/2FpBnzB,EDi3FA,CCj3FA,MDi3FO,IAAI,CAACy5B,YAAY,CAAEtG,GAAG,EAAEkE,SAAU,CAAC,KAAK,IAAI;IAEpD,ACn3FCx9B,KAAA,EAED,SAAA02I,gBAAgBA,CAAEzmG,QAAQ,EAAG;EDi3F5B,IC/2FA,IAAMwoG,OAAO,GAAG,IAAI1xF,eAAI,CAAE,IAAI,CAACqvF,UAAU,CAAE,CAAC,CAAE,EAAEnmG,QAAS,CAAC;ID+2F1D9pC,EC92FA,CD82FA,GC92FI,CAAC6vI,SAAS,CAAC0C,OAAO,CAAED,OAAO,EAAEnD,WAAY,CAAC;ID82F9Ct1I,AC52FD,KD42FC,EAED,SAAAsgC,iBAAiBA,CAAEngC,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEkgC,eAAe,EAAE7rB,MAAM,EAAG;EC92FrD,IDg3FA;ICh3FAvO,GAAA;IAAAnG,EDk3FA,GCl3FA,EAED,SAAAg3I,cAAcA,CAAEnnF,KAAK,EAAElqB,IAAI,EAAEC,GAAG,EAAEkxG,kBAAkB,EAAG;MAEtD,IAAMlqF,GAAG,GAAG,EAAE;MDg3FdhvB,AC/2FA,IAAMivB,ED+2FA,CAAC5xC,GC/2FK,GAAG,CAAC,GD+2FC,CAAE3C,CAAC,EAAEnY,CAAE,CAAC;MACzB09B,AC/2FA,IAAM86G,ED+2FA,CAAC19H,OC/2FS,GD+2FC,AC/2FE,CD+2FA5a,CAAC,EAAEF,AC/2FCssD,CD+2FC,CAAC,0BC/2Fe,CAAEG,GAAG,EAAEC,MAAM,EAAElnB,IAAI,EAAEC,GAAI,CAAC;MDg3FlE9H,AC/2FA,IAAM86G,KD+2FG,CAACliH,AC/2FE,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CD+2FH,AC/2FI,CD+2FFkH,CC/2FI,CAAC,EAAE,CAAC,CD+2FF,CC/2FI,CD+2FFC,AC/2FG,CAAE,KD+2FE,CAAC;MC92FxC,IAAMg7G,WAAW,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MDg3F9C,AC/2FA,IAAMruF,QAAQ,GAAG,IAAI,CAACwrF,SAAS;MDg3F/B,AC92FA,IAAM8C,iBAAiB,GAAGtuF,QAAQ,CAACihF,SAAS;MD+2F5C,AC92FA,IAAMQ,WAAW,GAAGzhF,QAAQ,CAACyhF,WAAW;MD+2FxC,AC92FAzhF,QAAQ,CAAC2hF,aAAa,CAAEoJ,WAAY,CAAC;MD+2FrC,AC72FA/qF,QAAQ,CAACyhF,WAAW,GAAG5hI,wBAAa;MD82FpC,AC72FAmgD,ID62FIhqB,GAAG,CC72FC,CAACirG,CD62FC,IAAI,CAACxtG,GC72FG,GAAG,GD62FG,CAACliB,CC72FC,ED62FE,CAAE+hB,SAAU,CAAC;MACzC,AC52FA,ID42FI2C,AC52FEs4G,ID42FE,cC52FgB,GAAG,IAAIt7F,4BAAiB,CAAE;MD82FlD,EC72FC/4C,ED62FI87B,EC72FA,CD62FG,CC72FD,ED62FI,CAAC,EAAG,aC72FU;QD+2FxB,AC92FA6V,ID82FK9V,AC92FD,EAAEz4B,aD82Fc,EAAG,IC92FT,GD82FgB,IAAI;QAClC24B,AC92FA2W,ID82FI,GAAG,CAAC,EC92FE,EAAE,KAAK;MDg3FlB,CAAC,CC/2FAD,KD+2FM,IAAK3W,AC/2FF,EAAE,CD+2FG,GAAG,CAAC,EAAG;MC92FtB,CAAE,CDg3FDC,ACh3FE,IDg3FE,GAAG,CAAE,CAAC;MC92FX,ED+2FCD,EC/2FKw4G,CD+2FF,GAAG,CAAEx4G,GAAG,KC/2FO,GAAG,IAAIumB,eAAI,CAAE,IAAIsB,sBAAW,CAAC,CAAC,EAAE0wF,kBAAmB,CAAC;MDi3FvE,AC/2FA,CD+2FC,GC/2FGE,GD+2FG,UC/2FU,GAAG,KAAK;MACzB,EDg3FC,ECh3FK3pG,KDg3FE,IAAI,CCh3FI,GAAGugB,KAAK,CAACvgB,UAAU;MDk3FnC,ACh3FA,IAAKA,UAAU,EAAG;MDk3FlB3R,ECh3FC,GDg3FI,CAAC1iB,ACh3FAq0B,UDg3FU,ACh3FA,CDg3FE,ACh3FDC,IDg3FK,CAACvR,ECh3FC,EAAG,EDg3FE,EAAE79B,CAAE,CAAC;MAClC,IAAMugC,AC/2FJq4G,MD+2FU,GAAGt4G,IAAI,GAAG,EC/2FF,CAAC7b,CD+2FK,CAACqZ,GC/2FD,CAACvjB,IAAI,CD+2FK,AC/2FH40B,CD+2FIvzB,GAAG,CAAE8hB,KC/2FE,CD+2FI,AC/2FH,CD+2FInH,YAAY,CAAEiH,KAAK,EAAEE,MAAO,CAAE,CAAC;UC92F9EgyB,KAAK,CAACvgB,UAAU,GAAG,IAAI;MDg3FzB,IC/2FE2pG,aAAa,GAAG,IAAI;MDg3FtB,EC92FC,ED82FIv4G,MAAM,GAAG,CAAC,EAAG;MC52FlB,CAAC,CD82FA,KC92FM,ED82FC,IAAI;MAEZ,EC92FCq4G,kBAAkB,CAACn0H,KAAK,CAAClK,IAAI,CAAE66H,WAAY,CAAC;MDg3F7C,EC/2FC0D,ED+2FKt4G,MAAM,GAAGF,EC/2FD,ED+2FK,CC/2FF,ED+2FK,EC/2FD,ED+2FK,CAACxC,SAAS,CAACliB,GAAG,CAAE6hB,MAAM,CAAC5hB,KAAK,CAAE2hB,KAAM,CAAE,CAAC;MC72FjE;MD+2FA,AC72FA,KAAM,IAAI19B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;MD82F/B,EC52FC,ED42FI0gC,EC52FEu4G,GAAG,CD42FC,EC52FEj5I,CD42FC,AC52FA,CD42FC,EAAG,AC52FD,CAAC;QD82FjB,AC52FA,IAAKi5I,GD42FE,AC52FC,ID42FG,CC52FE,CAAC,EAAG;MD82FlB,IC52FEP,UAAU,CAAC71G,EAAE,CAAC5pB,GAAG,CAAE,CAAC,EAAE0/H,MAAM,CAAE34I,CAAC,CAAE,EAAE,CAAE,CAAC;UACtC04I,UAAU,CAACv6G,MAAM,CAAEy6G,WAAW,CAAE54I,CAAC,CAAE,EAAE,CAAC,EAAE,CAAE,CAAC;MD62F7C,EC32FC,CAAC,MAAM,IAAKi5I,GAAG,KAAK,CAAC,EAAG;MD42FzB,IAAKx4G,AC12FHi4G,MD02FS,GAAGh4G,CC12FF,CAACmC,EAAE,CAAC5pB,CD02FI,EC12FD,CD02FIsnB,AC12FF,CAAC,ED02FI,AC12FF,CAAC,CD02FI,CC12FFo4G,MAAM,CAAE34I,CAAC,CAAG,CAAC;QD42FvC,EC32FC04I,KD22FM,IAAI,CC32FA,CAACv6G,MAAM,CAAE,CAAC,EAAEy6G,WAAW,CAAE54I,CAAC,CAAE,EAAE,CAAE,CAAC;MD62F7C,EC32FC,CAAC,MAAM;UAEN04I,UAAU,CAAC71G,EAAE,CAAC5pB,GAAG,CAAE,CAAC,EAAE0/H,MAAM,CAAE34I,CAAC,CAAE,EAAE,CAAE,CAAC;MD22FxC,IC12FE04I,UAAU,CAACv6G,MAAM,CAAE,CAAC,EAAE,CAAC,EAAEy6G,WAAW,CAAE54I,CAAC,CAAG,CAAC;MD22F7C,ECz2FC,EDy2FK2gC,GAAG,GAAG,CAAEH,IAAI,GAAG9C,KAAK,CAAC5hB,GAAG,CAAE+hB,SAAU,CAAC;QCv2F1C,IAAM9E,IAAI,GAAG,IAAI,CAACm9G,SAAS;MDy2F5B,ECv2FC6B,YAAY,CAAElB,kBAAkB,EAAEoC,GAAG,GAAGlgH,IAAI,EAAE/4B,CAAC,GAAG,CAAC,GAAG+4B,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAK,CAAC;MDw2F7E,ECt2FCwxB,EDs2FI5pB,GAAG,GAAG,ACt2FF,CDs2FG,ACt2FFyvB,EDs2FK,aCt2FU,CAAEymF,kBAAmB,CAAC;QDw2F9C,ACt2FA,IAAKmC,GDs2FE,IAAI,MCt2FO,EAAG;MDw2FtB,ICt2FEzuF,QAAQ,CAAC8F,MAAM,CAAE0oF,aAAa,EAAEL,UAAW,CAAC;QAE7C;MDs2FD,ECp2FCnuF,QAAQ,CAAC8F,MAAM,CAAET,KAAK,EAAE8oF,UAAW,CAAC;MDq2FrC,ACn2FA,ODm2FO,IAAI,CAACx6G,EAAE,CAAEyC,GAAG,GAAGJ,GAAG,EAAE9rB,MAAO,CAAC;IAEpC,ECn2FCskI,aAAa,CAACj/G,QAAQ,CAACvO,OAAO,CAAC,CAAC;EDm2FhC,ICl2FAwtH,aAAa,CAAC/oG,QAAQ,CAACzkB,OAAO,CAAC,CAAC;IDk2FhCrlB,ECh2FAqkD,CDg2FA,OCh2FQ,CAACyhF,WAAW,GAAGA,WAAW;IDg2FlCjsI,EC/1FAwqD,GD+1FA,EAED,GCj2FS,CAACihF,KDi2FVx/G,ICj2FmB,GAAG6sH,KDi2FV7sH,CAAE7K,OAAO,EAAG,ECj2Fe;MDm2FtC,ACl2FAyuC,IDk2FI,CAAC7xB,ACl2FA,CAACsR,KDk2FK,CAACrjB,ICl2FI,GAAGqjB,KDk2FK,CAAEluB,ICl2FG,GDk2FK,CAAC;ICh2FpC,EDi2FC,IAAI,CAAC6c,SAAS,CAACxH,kBAAkB,CAAErV,OAAQ,CAAC;ECj2F5C,IDm2FA,OAAO,IAAI;IAEZ,ACr2FCjb,GAAA;EDq2FA,ECr2FAnG,KAAA,EAED,SAAAi4I,gBAAgBA,CAAExpH,OAAO,EAAEqoH,kBAAkB,EAAG;IDm2F/C3wI,ECj2FA,CDi2FA,GCj2FMqkD,QAAQ,GAAG,IAAI,CAACwrF,SAAS;IDi2F/Bh2I,EC/1FA,GD+1FA,CC/1FM2wD,CDi2FP,SAAAvzC,GCj2FoB,GDi2FdA,ACj2FmBqR,CDi2FjByP,GAAG,EAAG,CCj2FkB,CAAC7U,OAAO,KAAKre,gCAAqB,IAAIyjB,OAAO,CAACpF,OAAO,KAAKpe,gCAAuB;MDm2FhH,ACj2FA,IAAK0lD,GDi2FEzyB,GAAG,CAACF,MAAM,ACj2FC,CDi2FA5gB,CCj2FG,KDi2FG,CAAE,IAAI,CAAC4gB,MAAO,CAAC,IAAIE,GAAG,CAACD,SAAS,CAAC7gB,MAAM,CAAE,IAAI,CAAC6gB,SAAU,CAAC;IAElF,ICj2FE,IAAK,IAAI,CAACu4G,gBAAgB,KAAK,IAAI,EAAG;EDi2FvC,QC/1FE,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,CAAC,CAAC;ID+1F/CtxI,GAAA,CC71FC;ID61FDnG,IC31FC,CD21FD,EAED,CC71FM,CAACw2I,OD61FP/7H,KAAKA,CAAA,EAAG,CC71Fe,CAAC2vC,QAAQ,CAAC26E,UAAU,CAAC/kI,KAAK,GAAKyuB,OAAO,CAAC5D,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MD+1FxG,AC71FA,CAAC,MD61FM,AC71FA,ID61FI,IAAI,CAACpmB,WAAW,CAAC,CAAC,CAACiW,IAAI,CAAE,IAAK,CAAC;IAE3C,IC71FE,IAAK,IAAI,CAAC+7H,iBAAiB,KAAK,IAAI,EAAG;ED61FxC,QC31FE,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,CAAC,CAAC;AD21FjD,QCz1FC;ADy1FD,IAII92G,EC31FJ,KD21FW,GAAAn6B,OAAA,CAAAm6B,OAAA;EAEZ,IC31FC,IAAMoP,CD21FPpP,OC31Fe,CD21FF5iB,EC31FK0yC,CD21FF,EAAEzyC,GAAG,EAAEC,GAAG,EAAE2iB,AC31FG,GD21FA,AC31FG,ED21FD1iB,EC31FK,CD21FF,AC31FGo4H,ED21FDn4H,GAAG,EAAEC,GAAG,EAAEyiB,GAAG,CC31FI,CD21FFxiB,EC31FK,CD21FF,EAAEC,CC31FI,CAACi4H,CD21FF,EAAEh4H,GAAG,EAAEuiB,GAAG,EAAEC,GAAG,CC31FI,CD21FFC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;IAAAp7B,EC11F7F,IAAMmrD,IAAI,GAAG,ED01FgF,EC11F5EpK,KD01F4ElmB,OAAA,GC11FxE,CAAE,IAAI,CAACu1G,UAAU,CAAE,CAAC,CAAE,EAAEnmG,QAAS,CAAC;ID41FvDpP,EC11FA,IAAMupB,CD01FC,CAACzqD,MC11FM,GD01FG,AC11FAswC,CD01FC5O,OC11FO,CAAC+oB,CD01FC,GAAG,IAAI,AC11FA;ID41FlC,EC11FAA,ED01FI,CAAC7uC,KC11FG,CAAE,ED01FG,GAAG,CAEf,CAAC,CC51FgB,CD41Fd,AC51FgB,CD41Ff,AC51FgBvb,ED41Fd,CAAC,EAAE,AC51FgB,CD41Ff,EACV,AC71F4ByuB,CD61F3B,EAAE,CAAC,EAAE,CAAC,AC71F4B,ED61F1B,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;IAED,ECj2FA,EDi2FKxQ,ECj2FC+a,CDi2FE,GCj2FE,EDi2FGhlB,CCj2FA,IAAI,CAACmiI,GDi2FI,EAAG,ICj2FE;MDm2F1B,ACj2FD6B,IDi2FK,CAAC9+H,GAAG,CAAE+E,GAAG,ACj2FF,CAAE64H,CDi2FE54H,GAAG,EAAEC,GAAG,EAAE2iB,GAAG,EAAE1iB,ECj2FC,CDi2FE,CCj2FA,CDi2FEC,ACj2FD,EAAE,CDi2FE,ACj2FD,EDi2FGC,ACj2FD,CAAC,EDi2FG,CCj2FA0a,CDi2FE+H,GAAG,ACj2FD,EDi2FGxiB,ACj2FD,CAAC,EDi2FG,CCj2FAya,CDi2FExa,GAAG,ACj2FA,CAAC,CDi2FCC,GAAG,EAAEuiB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;IAE3F,ECj2FAopB,QAAQ,CAAC6F,eAAe,CAAEymF,kBAAmB,CAAC;EDm2F/C,ICl2FCtsF,QAAQ,CAAC8F,MAAM,CAAEa,IAAI,EAAEmkF,WAAY,CAAC;EDk2FpC,ECh2FD,KDg2FClvI,YAAA,CAAAy6B,OAAA;ECh2FA,EDg2FA16B,GAAA;IAAAnG,ACh2FAmG,GAAA,EDg2FA,EAED,SAAA+S,GAAGA,CAAE+E,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE2iB,GAAG,EAAE1iB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEyiB,GAAG,EAAExiB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEuiB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;ICl2FrFphC,EDo2FA,GCp2FA,CDo2FM2e,CCl2FP,CDk2FS,GAAG,IAAI,CAACpD,ACl2FjB27H,QDk2FyB,GCl2FdA,CAAEJ,kBAAkB,EAAG;MDo2FjCn4H,ACl2FA,EDk2FE,CAAE,CAAC,ACl2FC6rC,CDk2FC,GAAGvsC,GAAG,CCl2FC,GAAG,IAAI,CAAC+3H,SAAS;MDk2FhBr3H,ACj2Ff,EDi2FiB,CAAE,CAAC,ACj2Fd8sH,CDi2FgB,GAAGvtH,GAAG,ECj2Fb,GAAGssC,QAAQ,CAACihF,SAAS;MDi2FN9sH,ACh2F9B6rC,EDg2FgC,CAAE,CAAC,CAAE,GAAGrsC,ACh2FhC,CAACstH,EDg2FkC,OCh2FzB,GAAG,KAAK;MDg2FmB9sH,AC/1F7C,ED+1F+C,CAAE,CC/1F3C/e,CD+1F6C,AC/1F5C,CD+1F8C,EC/1F3C,CD+1F8CkhC,GAAG,AC/1F7C,CAACs1G,UAAU,CAAC9xI,MAAM;MDg2FhCqa,AC91FA,ED81FE,CAAE,CAAC,CAAE,AC91FD,GD81FIP,CC91FAne,CAAC,CD81FE,EC91FC,CAAC,EAAEA,CAAC,GAAGL,CAAC,EAAEK,CAAC,EAAG,EAAG;MD81FhB0e,EAAE,AC51FhB,CD41FkB,CAAC,CAAE,CC51Ffi4H,ED41FkBv4H,GAAG,AC51FhB,GAAGtJ,IAAI,CAACmH,IAAI,CAAE,IAAI,CAACo6H,OAAO,CAAEr2I,CAAC,CAAE,GAAG,IAAI,CAACq2I,OAAO,CAAEr2I,CAAC,CAAE,GAAG,IAAI,CAACq2I,OAAO,CAAEr2I,CAAC,GAAG,CAAC,CAAE,GAAG,IAAI,CAACq2I,OAAO,CAAEr2I,CAAC,GAAG,CAAC,CAAG,CAAC;MD41FnF0e,EAAE,AC11F/B,CD01FiC,CAAC,CAAE,CC11F9Bw6H,ED01FiC76H,GAAG,GC11F5B,GAAGw3H,eAAe,CAAE,CAAEl2I,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAK61I,eAAe,CAACxxI,MAAM,CAAE;MD01F9Bqa,EAAE,ACx1F9C,CDw1FgD,EAAE,CAAE,ACx1FhD,CAACs4H,EDw1FkDl2G,GAAG,ACx1FhD,CAAE+1G,kBAAkB,EAAE72I,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE22I,KAAK,EAAEuC,QAAS,CAAC;MDy1F5Dx6H,ACv1FA,EDu1FE,CAAE,CAAC,CAAE,GAAGJ,GAAG;MAAEI,ACr1Ff6rC,EDq1FiB,CAAE,CAAC,CAAE,GAAGhsC,ACr1FjB,CAACitH,EDq1FmB,OCr1FV,GAAGA,SAAS;IAE/B,EDm1F+B9sH,EAAE,CAAE,EAAE,CAAE,GAAGF,GAAG;MAAEE,EAAE,CAAE,EAAE,CAAE,GAAGqiB,GAAG;ICj1F7D,EDk1FCriB,EAAE,CAAE,CAAC,CAAE,GAAGsiB,GAAG;ACj1Ff,MDi1FiBtiB,EAAE,CAAE,CAAC,CAAE,GAAGuiB,GAAG;ACh1F9B,MDg1FgCviB,EAAE,CAAE,EAAE,CAAE,GAAGwiB,GAAG;AC/0F9C,MD+0FgDxiB,EAAE,CAAE,EAAE,CAAE,GAAGyiB,GAAG;AC90F9D,MDg1FE,OAAO,IAAI;AC/0Fb,IDi1FC;ACh1FD,EDg1FE;AC/0FF,ID+0FEj7B,GAAA;AC90FF,ID80FEnG,KAAA,EAED,SAAA4e,QAAQA,CAAA,EAAG;AC/0FZ,MDi1FE,IAAI,CAAC1F,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;ACv1FH,MDy1FE,OAAO,IAAI;ACx1Fb,ID01FC;ACz1FD,EDy1FE;ECr2FD,EDq2FC/S,GAAA;IAAAnG,ACr2FDmG,GAAA,EDq2FC,EAED,SAAAsU,KAAKA,CAAA,EAAG;ICv2FRza,EDy2FC,GCz2FD,EAaA,ED41FQ,IAAI6gC,GC51FZo2G,ID41FmB,CAAC,AC51FfA,CD41FgB,AC51FdH,CD41Fez5H,SAAS,CAAE,IAAI,CAAC9B,EC51Fb,EAAE69H,ID41FoB,CAAC,AC51FhB,EAAEC,MAAM,EAAEzC,KAAK,EAAEuC,QAAQ,EAAG;ID81F5D,EC51FC,IAAMG,oBAAoB,GAAG,IAAI,CAACrD,qBAAqB;ED41FvD,IC11FA,IAAI,CAACsD,SAAS,CACbzC,kBAAkB,EAClBwC,oBAAoB,EACpBF,KAAK,EACLC,MAAM,EACNzC,KAAK,EACL,aAAa,EACbuC,QAAS,CAAC;IDm1FXhzI,ECj1FA,CDi1FA,GCj1FI,CAACozI,SAAS,CACbD,oBAAoB,EACpBxC,kBAAkB,EAClBuC,MAAM,EACNA,MAAM,EACNzC,KAAK,EACL,cAAc,EACduC,QAAS,CAAC;ID00FXn5I,ACx0FD,KDw0FC,EAED,SAAA0a,IAAIA,CAAE5E,CAAC,EAAG;EC10FT,ID40FA,IAAM6I,EAAE,GAAG,IAAI,CAACpD,QAAQ;IC50FxBpV,ED60FA,CC70FA,GD60FM0Y,EAAE,GAAG/I,CAAC,CAACyF,QAAQ;IC70FrBvb,ED+0FA2e,EAAE,CAAE,AC/0FJ,CD+0FK,CAAE,AC70FR,GD60FWE,EAAE,CAAE,CAAC,CAAE,CC70FlB06H,SAASA,CAAEC,QAAQ,EAAEC,SAAS,EAAEL,KAAK,EAAEC,MAAM,EAAEK,YAAY,EAAEz7G,SAAS,EAAEk7G,QAAQ,EAAG;MD60F/Dx6H,AC30FnB,ED20FqB,CAAE,CAAC,AC30FlB6rC,CD20FoB,GAAG3rC,EAAE,CAAE,CAAC,AC30FpB,CD20FsB,EC30FnB,IAAI,CAACm3H,SAAS;MD20FOr3H,AC10FtC,ED00FwC,CAAE,CAAC,AC10FrCg7H,CD00FuC,GAAG96H,EAAE,CAAE,CAAC,CAAE,GC10FrC,GAAG,IAAI,CAAC03H,aAAa;MD00FkB53H,ACx0FzD,EDw0F2D,CAAE,CAAC,ACx0FzDsf,CDw0F2D,GAAGpf,EAAE,CAAE,CAAC,CAAE,ACx0F5D,KAAK,aAAa,IAAIof,SAAS,KAAK,cAAc,EAAG;MDy0FnEtf,EAAE,ACv0FDxF,CDu0FG,CAAC,CAAE,GAAG0F,CCv0FF,CDu0FI,ACv0FHksB,CDu0FK,CAAC,CAAE,ECv0FH,CACZ,4DAA6D,CAAC;MDs0F7CpsB,ACp0FnB,EDo0FqB,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,ACl0FzD,EDk0F2D,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAC1EF,ACl0FA,EDk0FE,CAAE,CAAC,ACl0FCi7H,CDk0FC,GAAG/6H,EAAE,CAAE,CAAC,CAAE,UCl0FQ,GAAG,CAAC;MDk0FVF,ACh0FnB,EDg0FqB,CAAE,CAAC,ACh0FlBk7H,CDg0FoB,GAAGh7H,EAAE,CAAE,CAAC,ACh0FpB,CDg0FsB,ECh0FnB,IAAIkoC,eAAI,CAAE,IAAI,CAACqvF,UAAU,CAAEiD,MAAM,CAAE,EAAEM,YAAa,CAAC;MDg0F9Bh7H,AC/zFtC,ED+zFwC,CAAE,CC/zFpCm7H,CD+zFsC,CAAE,GAAGj7H,EAAE,CAAE,EAAE,CAAE,CC/zFvC,GAAG86H,YAAY,CAACvvF,QAAQ;MD+zFiBzrC,AC7zF3D,ED6zF6D,CAAE,CC7zFzDo7H,CD6zF2D,CAAE,GAAGl7H,CC7zF1D,CD6zF4D,CAAE,CC7zF3D,CD6zF6D,CAAE,EC7zF3D,CAACw3H,SAAS,CAAE+C,KAAK,CAAE,GAAG,CAAC;MD8zF1Cz6H,AC7zFA,ED6zFE,CAAE,CC7zFEq7H,CD6zFA,CAAE,GAAGn7H,EAAE,CAAE,EAAE,CAAE,IC7zFE,GAAG4lC,QAAQ,CAAEi1F,YAAa,CAAC,GAAG3kI,IAAI,CAACC,EAAE,IAAK,CAAC,GAAG+kI,MAAM,CAAE,GAAG,CAAC,GAAGhlI,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGq+H,WAAW,GAAG,CAAC,CAAE;MD6zF9F10H,AC5zFrB,ED4zFuB,CAAE,CC5zFnBs7H,CD4zFqB,CAAE,GAAGp7H,EAAE,CAAE,EAAE,CAAE,AC5zFvB,GAAG66H,YAAY,GAAGM,eAAe;MD4zFRr7H,AC3zF1C,ED2zF4C,CAAE,CC3zFxC4P,CD2zF0C,CAAE,GAAG1P,EAAE,AC3zF1C,CD2zF4C,EAAE,AC3zF3C4lC,CD2zF6C,OC3zFrC,CAAEi1F,YAAa,CAAC,GAAG,CAAC,GAAG3kI,IAAI,CAACoC,KAAK,CAAEyiI,mBAAmB,GAAGK,WAAY,CAAC,GAAG5G,WAAW;MD2zF7C10H,ACzzF/D,EDyzFiE,CAAE,CCzzF9D4P,CDyzFgE,CAAE,GAAG1P,EAAE,ACzzFhE,CDyzFkE,EAAE,ACzzFjEw0H,CDyzFmE,UCzzFxD,EAAG;MD2zF7B,ECzzFCl6H,KDyzFM,ECzzFC,CAACC,CDyzFE,GCzzFE,kBAAAi8B,MAAA,CACXqkG,YAAY,oDAAArkG,MAAA,CACZ9mB,OAAO,0CAAA8mB,MAAA,CAAuCg+F,WAAW,CAAG,CAAC;IDyzFhE,ECvzFC;EDuzFA,ICrzFA,IAAM6G,OAAO,GAAG,EAAE;IDqzFlB/zI,ECpzFA,CDozFA,GCpzFIynE,GAAG,GAAG,CAAC;IDozFX5tE,EClzFA,GDkzFA,EAED,ACpzFO,IAAIC,CAAC,GAAG,CDozFfqhC,ACpzFgB,EAAErhC,CAAC,GAAGozI,MDozFV/xG,CAAExrB,CAAC,EAAG,CCpzFe,EAAE,EAAG7V,CAAC,EAAG;MDszFzC,ECpzFC,EDozFK0e,EAAE,ACpzFD3I,EAAC,CDozFG,ECpzFA/V,CAAC,CDozFG,CAACsb,CCpzFD0+H,ODozFS,ICpzFE;QDozFAp7H,ACnzFzB,EDmzF2B,ECnzFrBq7C,CDmzFwBpkD,CAAC,CAACyF,GCnzFpB,GAAGxG,EDmzFyB,ECnzFrB,CAAC2B,GAAG,CAAE,CAAEV,EAAC,GAAGA,EAAC,GAAG,CAAE,CAAC;MDqzFvC2I,EAAE,ACpzFDu7H,CDozFG,EAAE,CAAE,GAAGr7H,ACpzFH,CAAC5a,CDozFI,CAAE,EAAE,ACpzFJ,CDozFM,ACpzFJi2D,MAAO,CAAC;MDqzFvBv7C,EAAE,ACnzFD,CDmzFG,EAAE,CAAE,ACnzFF1e,CAAC,EDmzFI4e,EAAE,CAAE,ACnzFH,CAAC,CDmzFI,CAAE,ACnzFH;MDozFhBF,EAAE,CAAE,CClzFFivD,CDkzFI,CAAE,CClzFH,EDkzFM/uD,EAAE,AClzFJq7C,CDkzFM,EAAE,CAAE,EClzFJ;MDozFf,EClzFC,CAAC,IDkzFK,EClzFC,EDkzFG,EClzFEj6D,CAAC,GAAGsuB,OAAO,EAAG;IDozF5B,MClzFGq/C,GAAG,IAAI,CAAC,GAAG1T,MAAM;EDkzFnB,MChzFC;IDgzFD/zD,EC9yFA,CD8yFA;IAAAnG,EC5yFA,GD4yFA,EAED,AC9yFO,IAAIC,GAAC,ED8yFZshC,CC9yFe,CAAC,EAAEthC,GAAC,GAAGi6I,ID8yFR34G,CAAEzrB,CAAC,CC9yFY,CD8yFT,AC9yFUxR,MAAM,EAAErE,GAAC,EAAG,EAAG;MDgzF5C,EC9yFCi6I,ED8yFKr7H,EAAE,GAAG/I,AC9yFH,CD8yFI,AC9yFF7V,CD8yFGsb,EC9yFF,CAAE,GAAG2+H,ED8yFK,KC9yFE,CAAEj6I,GAAC,CAAE,GAAG2tE,GAAG;MDgzFlC,AC9yFA,ID8yFI,CAAC10D,GAAG,CAEP2F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,ACrzFAi7H,ODqzFO,IAAI,CCrzFC,CAAE,QAAQ,CAAE,CAAC95I,KAAK,GAAGw5I,QAAQ,CAAC/qH,OAAO;IDuzFlD,ECtzFCqrH,YAAY,CAAE,SAAS,CAAE,CAAC95I,KAAK,GAAGuuB,OAAO;EDszFzC,ICrzFAurH,YAAY,CAAE,SAAS,CAAE,CAAC95I,KAAK,GAAGk6I,OAAO;IDqzFzC/zI,ECpzFA2zI,CDozFA,WCpzFY,CAAE,aAAa,CAAE,CAAC95I,KAAK,GAAGi+B,SAAS,KAAK,aAAa;IDozFjEj+B,EClzFA,GDkzFA,CClzFKm5I,CDozFN,OCpzFc,EDozFdr6H,ACpzFiB,YDozFLA,CAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEnCF,ECpzFC+6H,GDozFI,CAAC9hH,QCpzFO,CAAE,UDozFU,ACpzFA,CDozFE,ACpzFA,CAACh4B,GDozFG,EAAE,ACpzFA,CDozFE,CAAC,CCpzFAm5I,QAAQ;MDqzF5Cn6H,ACnzFA,KDmzFK,CAACgZ,mBAAmB,CAAE,IAAI,EAAE,CAAE,CAAC;MACpC/Y,AClzFA,IAAQi3H,CDkzFH,CAACl+G,KClzFS,GAAK,IAAI,CAAhBk+G,MDkzFiB,CAAE,AClzFZ,IDkzFgB,EAAE,CAAE,CAAC;MAEpC,ACnzFA4D,ODmzFO,IAAI,CCnzFC,CAAE,QAAQ,CAAE,CAAC95I,KAAK,GAAGg6I,eAAe;IDqzFjD,ECpzFCF,YAAY,CAAE,QAAQ,CAAE,CAAC95I,KAAK,GAAGk2I,OAAO,GAAGkD,KAAK;EDozFhD,IClzFA,IAAMe,UAAU,GAAG,IAAI,CAAC9D,SAAS,CAAEgD,MAAM,CAAE;IDkzF3ClzI,ECjzFA,CDizFA,GCjzFM6P,CAAC,GAAG,CAAC,GAAGmkI,UAAU,IAAKd,MAAM,GAAGnD,OAAO,GAAGd,OAAO,GAAGiE,MAAM,GAAGnD,OAAO,GAAGd,OAAO,GAAG,CAAC,CAAE;IDizF1Fp1I,EChzFA,GDgzFA,CChzFM0B,CDkzFP,AClzFQ,GAAG,CAAC,IAAK,CDkzFjB8/B,GClzFqB,CAAC20G,KDkzFb30G,CAAEziB,GClzFoB,EDkzFf,CClzFkBo7H,CDkzFhBn7H,KAAK,EAAEC,EClzFmB,CAAE,EDkzFhB,EAAG;MAEhC,AClzFA+4H,IDkzFI,CAAC9+H,GAAG,CACP6F,GCnzFW,CAAE06H,CDmzFR,CAACzjI,CAAC,EAAEgJ,ICnzFa,CDmzFR,CAAChJ,ACnzFSA,CDmzFR,ACnzFS,EDmzFPiJ,ACnzFSvd,CAAC,EAAE,CAAC,CDmzFR,CAACsU,CAAC,ACnzFSmkI,EDmzFP,CAAC,EAC5Bp7H,KAAK,ACpzFuC,CDozFtCrd,CAAC,ACpzFuC,CAAC,CDozFtCsd,ECpzFyCm7H,GDozFpC,CAACz4I,CAAC,EAAEud,GCpzF2C,CAAC,CDozFvC,CAACvd,CAAC,EAAE,CAAC,EAC5Bqd,KAAK,CAAC6M,CAAC,EAAE5M,KAAK,CAAC4M,CAAC,EAAE3M,KAAK,CAAC2M,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CACV,CAAC;MAED,ACxzFA4+B,ODwzFO,CCxzFC,CAAC6F,EDwzFE,aCxzFa,CAAEopF,SAAU,CAAC;ID0zFtC,ECzzFCjvF,QAAQ,CAAC8F,MAAM,CAAEupF,QAAQ,EAAEvE,WAAY,CAAC;EDyzFxC,ECvzFD;EAAC,EDuzFAnvI,GAAA;ACvzFA,IDuzFAnG,KAAA,EAED,SAAAyhC,eAAeA,CAAE3rB,CAAC,EAAG;ACnzFtB,MDqzFE,GCrzFOsiI,aAAaA,CAAEgC,MAAM,EAAG;EAEhC,IAAM9B,SAAS,GAAG,EAAE;EACpB,IDozFC,ACpzFKD,IDozFC15H,EAAE,ECpzFK,CDozFF,ECpzFK,EDozFD,ACpzFG,CDozFFpD,QAAQ;ECnzFzB,IDozFC,ACpzFKg9H,IDozFC15H,EAAE,ACpzFG,GDozFA/I,ACpzFG,CDozFF,CAACyF,ACpzFG,QDozFK;EClzFtB,IDozFC,ACpzFG8+H,GAAG,CDozFA34G,ECpzFG04G,IDozFG,ECpzFG,CDozFA,CAAC,GAAGz4G,KAAK,CAAC3J,mBAAmB,CAAEliB,CAAC,EAAE,CAAE,CAAC,CAACxR,MAAM,CAAC,CAAC;EClzF9D,IDmzFC,ACnzFKg2I,IDmzFC14G,KCnzFQ,CDmzFF,ECnzFKw4G,CDmzFF,CAAC,GAAGz4G,CCnzFI,GAAGyzG,CDmzFF,CAACp9G,KCnzFQ,GAAG,CAAC,GAAGq9G,ODmzFI,CAAEv/H,CAAC,EAAE,CAAE,CAAC,CAACxR,CCnzFE,CAACA,IDmzFG,CAAC,CAAC,ACnzFC;EAE/D,IDkzFC,CClzFK,GDkzFCu9B,CClzFG5hC,CAAC,GAAG,CDkzFD,AClzFE,EAAEA,CDkzFD,AClzFE,CDkzFD,EClzFIq6I,CDkzFD34G,KAAK,CAAC3J,EClzFI,EAAE/3B,CAAC,EAAG,EAAG,UDkzFM,CAAE6V,CAAC,EAAE,CAAE,CAAC,CAACxR,MAAM,CAAC,CAAC;IChzF7D,EDkzFAqa,EAAE,AClzFI47H,CDkzFF,CAAC,CAAE,GAAG17H,CClzFG,CDkzFD,CAAE,CAAC,AClzFC9J,CDkzFC,GAAG2sB,AClzFA,CAAC3pB,GAAG,CAAE,CDkzFA,AClzFC,EAAEsiI,GAAI,CAAC;IAClChC,EDkzFA15H,EAAE,CAAE,CAAC,CAAE,CClzFC,CAAC1a,CDkzFC4a,EAAE,CAAE,AClzFD,CDkzFE,AClzFA07H,CDkzFE,GAAG74G,GClzFG,CAAC,EDkzFE;ICjzF1B,EDkzFA/iB,EAAE,AClzFEi4H,CDkzFA,CAAC,CAAE,EClzFE,CDkzFC/3H,EAAE,AClzFA,CDkzFE,CAAC,CAAE,AClzFF,GDkzFK6iB,AClzFF64G,MDkzFQ,CClzFD;IAEzB,EDizFA57H,EAAE,ACjzFG1e,CDizFD,ACjzFE,CDizFD,CAAE,CCjzFEm6I,EDizFC,CAAC,GCjzFI,GAAGhF,OAAO,EAAG;MDmzF5Bz2H,ACjzFCi4H,EDizFC,CAAE,CAAC,CAAE,ACjzFD,GDizFI/3H,ACjzFDw2H,EDizFG,CAAE,CAAC,CAAE,GAAGzzG,MAAM,CCjzFF,CAAE3hC,CAAC,GAAGm6I,MAAM,GAAGhF,OAAO,GAAG,CAAC,CAAE;IAEpD,CAAC,CDgzFDz2H,EAAE,CAAE,CAAC,CAAE,AChzFA,GDgzFGE,CChzFE5e,CDgzFA,AChzFC,CDgzFC,CAAC,CAAE,EChzFC,CDgzFE2hC,AChzFD,EAAG,IDgzFI;MAC1BjjB,AC/yFCi4H,ED+yFC,CAAE,CAAC,CAAE,AC/yFD,GD+yFI/3H,AC/yFD,CAAC,CD+yFE,CAAE,CAAC,CAAE,GAAG+iB,MAAM;IC7yF1B,ED8yFAjjB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;IC5yFX45H,ED8yFA55H,EAAE,CAAE,CAAC,AC9yFC,CD8yFC,AC9yFA1a,GD8yFG4a,CC9yFC,CD8yFC,AC9yFC+3H,CD8yFC,CAAC,CAAE,EC9yFE,CD8yFC/0G,AC9yFA,MD8yFM;IC5yF1B,ED6yFAljB,EAAE,AC7yFI67H,CD6yFF,CAAC,CAAE,GAAG37H,EAAE,CAAE,AC7yFC,CD6yFA,CAAE,CC7yFC,ED6yFEgjB,CC7yFC,IAAK04G,CD6yFA,MC7yFO,GAAG,CAAC,CAAE;IACvC,ED6yFA57H,EAAE,AC7yFIhJ,CD6yFF,EAAE,AC7yFG,CD6yFD,EC7yFI,CD6yFDkJ,AC7yFG27H,ED6yFD,CAAE,EAAE,CAAE,GAAG34G,AC7yFC,MD6yFK;IC5yF5B,ED6yFAljB,EAAE,AC7yFI/I,CD6yFF,EAAE,AC7yFG,CD6yFD,EC7yFI,CD6yFD,AC7yFE,CD6yFD,EC7yFI4kI,SAAS;IACzB,ED8yFA77H,EAAE,AC9yFImpC,CD8yFF,EAAE,AC9yFG,CD8yFD,EC9yFI,CD8yFD,AC9yFGnyC,CD8yFF,EC9yFK,EAAEA,GAAG,EAAEC,GAAG,EAAED,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEC,GAAG,CAAE;IAE1E,ED6yFA+I,EAAE,AC7yFI87H,CD6yFF,EAAE,CAAE,GAAG,CAAC,CC7yFG,GAAG,CAAC;IACnB,ED6yFA97H,EAAE,AC7yFIiqC,CD6yFF,EAAE,CAAE,GAAG,CAAC,AC7yFE,GAAG,CAAC;IAClB,ED6yFAjqC,EAAE,AC7yFI+7H,CD6yFF,EAAE,CAAE,GAAG,CAAC,IC7yFM,GAAG,CAAC;IACtB,ED8yFA,EC9yFMC,KD8yFC,CC9yFK,GD8yFD,AC9yFI,CAAC;IDgzFjB,AC/yFC,IAAMC,aAAa,GAAG,CAAC;ED+yFvB,EC7yFA,IAAMl2G,QAAQ,GAAG,IAAIprB,YAAY,CAAEohI,YAAY,GAAG9xF,QAAQ,GAAG6xF,SAAU,CAAC;ID6yFxEt0I,AC5yFA,GD4yFA,CC5yFMulB,EAAE,GAAG,IAAIpS,YAAY,CAAEqhI,MAAM,GAAG/xF,QAAQ,GAAG6xF,SAAU,CAAC;ID4yF5Dz6I,AC3yFA,IAAMkoD,CD2yFN,EAED,MC7yFgB,GD6yFhBpmB,AC7yFmB,IAAIxoB,YAAY,CAAEshI,ID6yFhB94G,CAAE5Q,KAAK,EAAG,CC7yFmB,GAAG03B,QAAQ,GAAG6xF,SAAU,CAAC;IAE1E,ED6yFA,GC7yFM,CD6yFA97H,EAAE,CC7yFEwpC,ED6yFC,EC7yFG,ED6yFC,CAAC5sC,AC7yFC,CAAC,EAAE4sC,IAAI,CD6yFA,EC7yFGsyF,SAAS,EAAEtyF,IAAI,EAAG,EAAG;MD+yFhD,AC7yFC,ID6yFKnyC,AC7yFCA,CD6yFA,AC7yFC,GD6yFEkb,AC7yFGi3B,IAAI,CD6yFF,CAACnyC,CAAC,AC7yFG,CAAC,GAAK,CAAC,GAAG,CAAC,GAAG,CAAC;MAClC,ED4yFkBtU,CAAC,CC5yFbA,CAAC,CD4yFewvB,EC5yFZi3B,GD4yFiB,CAACzmD,AC5yFd,CD4yFe,EC5yFZ,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;MAC5B,ED2yF+BkqB,CAAC,CC3yF1BivH,ED2yF6B3pH,KAAK,CAACtF,CAAC,EC3yFzB,GAAG,CACnB5V,CAAC,EAAEtU,CAAC,EAAE,CAAC,EACPsU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEtU,CAAC,EAAE,CAAC,EACfsU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEtU,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBsU,CAAC,EAAEtU,CAAC,EAAE,CAAC,EACPsU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEtU,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBsU,CAAC,EAAEtU,CAAC,GAAG,CAAC,EAAE,CAAC,CACX;MDqyFF,ACpyFCgjC,IDoyFKvkC,CAAC,GAAG4U,ACpyFD,CAACmE,GDoyFI,ACpyFD,CDoyFEV,ACpyFAqiI,GDoyFG,CAAE7kI,CAAE,CAAC,KCpyFG,EAAE0kI,YAAY,GAAG9xF,QAAQ,GAAGT,IAAK,CAAC;MAC3Dz8B,EDmyFwBpT,ACnyFtB,CDmyFuB,ACnyFtBY,GDmyFyBnE,ACnyFtB,CAAE+yC,GDmyFwB,ACnyFrB,CDmyFsBrvC,CCnyFpBkiI,EDmyFuB,CAAE3kI,CAAE,CAAC,CCnyFtB,GAAG4yC,QAAQ,GAAGT,IAAK,CAAC;MDoyFxC,ACnyFC,IDmyFK9nD,ACnyFC68D,CDmyFA,GAAGnoD,ACnyFC,GAAG,CDmyFA,ACnyFEozC,CDmyFD3vC,GAAG,ACnyFE,CDmyFA9W,CAAE,ACnyFAymD,CDmyFC,GCnyFG,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAE;MACnDD,EDkyFwBpmD,CAAC,GAAGiT,GClyFnB,CDkyFuB,AClyFtBmE,CDkyFuBT,EClyFpB,CDkyFuB,AClyFrBykD,CDkyFuBx7D,CAAE,CAAC,CClyFtB,EAAEk5I,aAAa,GAAGhyF,QAAQ,GAAGT,IAAK,CAAC;IAEvD,EDiyFA,IAAM5oD,CAAC,GAAGwV,IAAI,CAACyD,GAAG,CAAEoT,CAAE,CAAC;IC/xFvB,ID+xFyBpqB,AC/xFnBq9D,CD+xFoB,GAAG9pD,EC/xFjB,ED+xFqB,CAAC0D,AC/xFnB,GD+xFsB,CAAEmT,AC/xFpBm2B,CD+xFsB,CAAC,uBC/xFT,CAAC,CAAC;IACnC8c,EDgyFA,IAAK3tC,AChyFC,CAAC2xB,IDgyFG,CAACtqC,KAAK,EChyFG,CAAE,EDgyFA,KAAK,EAAG,CChyFE,EAAE,IAAIwmC,0BAAe,CAAEra,QAAQ,EAAEg2G,YAAa,CAAE,CAAC;IAChF77E,IDiyFC,ECjyFK,CAAChc,CDiyFAvjC,EAAE,GAAGnf,CAAC,GAAGZ,CAAC,CCjyFE,CAAE,IAAI,EAAE,IAAIw/C,0BAAe,CAAErzB,EAAE,EAAEivH,MAAO,CAAE,CAAC;IAC9D97E,MDgyFmB98B,AChyFb,CAAC8gB,CDgyFc,GAAG1iD,CAAC,GAAGqB,CAAC,GChyFV,CAAE,WAAW,EAAE,IAAIu9C,0BAAe,CAAEmJ,SAAS,EAAE0yF,aAAc,CAAE,CAAC;IACnFtC,MD+xF+B/4H,EAAE,CC/xFxB,CAACtb,CD+xF0BqU,CAAC,EC/xFvB,CD+xF0B/Y,AC/xFxBs/D,CD+xFyB,KC/xFlB,CAAC;IAExB,IAAKw7E,ED6xFsCr4G,CC7xFnC,CD6xFqC,EC7xFlCozG,CD6xFqC98H,CAAC,GAAG9W,CAAC,CC7xFnC,EAAG;MAEpB64I,ED6xFA17H,CC7xFG,CD6xFD,CAAE,AC7xFE,CD6xFD,CAAE,GAAGte,CAAC,GAAGd,CAAC;IC3xFhB,ID4xFCof,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEte,CAAC,GAAGmB,CAAC;EC1xFnB,MD2xFEmd,EAAE,CAAE,CAAC,CAAE,GAAG7c,CAAC;ECzxFb,MD2xFE6c,CC3xFK,CD2xFH,CAAE,CAAC,CAAE,GAAGojB,EAAE,GAAGxiB,EAAE,GAAGzd,CAAC;IC3xFdw2I,ID4xFP35H,EAAE,CAAE,CAAC,CAAE,AC5xFS,EAAT25H,CD4xFGh5H,EAAE,GAAG0iB,EAAE,CC5xFD,ED4xFIlgC,CAAC;IC5xFHu2I,ID6xFlB15H,EAAE,CAAE,CAAC,AC7xFqB,CD6xFnB,CC7xFW05H,ED6xFR,CAAE//H,CAAC,GAAGjY,CAAC,AC7xFS;IAAEk4I,ID+xF5B55H,EAAE,AC/xFgC,CD+xF9B,CAAC,AC/xFuB45H,CD+xFrB,GAAGv2G,EAAE,GAAG1iB,EAAE,GAAGxd,CAAC;EC/xFc,CAAC,KDgyFpC6c,EAAE,CAAE,CAAC,CAAE,GAAGY,EAAE,GAAGwiB,EAAE,GAAGjgC,CAAC;AC9xFxB,QD+xFG6c,EAAE,CAAE,EAAE,CAAE,GAAGxe,CAAC,GAAGE,CAAC;AC7xFnB,MD+xFE,CAAC,EC/xFM63I,ID+xFA,IAAKhnH,KAAK,CAAC3Y,KAAK,AC/xFG2/H,CAAEhxH,ID+xFA,CC/xFK,EAAEC,ED+xFF,EAAG,EC/xFK,EAAEohD,MAAM,EAAG;EAErD,IAAMuuE,ED+xFJ,IAAM70G,EAAE,GAAG5hC,CAAC,GAAGd,CAAC,EC/xFM,GAAG,IAAIuvB,4BAAiB,CAAE5H,KAAK,EAAEC,MAAM,EAAEohD,MAAO,CAAC;EACzEuuE,QD8xFoB50G,EAAE,GAAG7hC,CAAC,GAAGmB,CAAC,AC9xFZ,CAACitB,OAAO,CAACpF,OAAO,GAAGje,kCAAuB;EAC5D0rI,QD6xFgC30G,EAAE,GAAGrgC,CAAC,GAAGvC,CAAC,AC7xFxB,CAACkvB,OAAO,CAAC/pB,IAAI,GAAG,cAAc;EAChDoyI,QD4xF4C10G,EAAE,GAAGtgC,CAAC,GAAGN,CAAC,AC5xFpC,CAACwsB,WAAW,GAAG,IAAI;EACrC,MD6xFErP,CC7xFKm4H,CD6xFH,CAAE,CAAC,CAAE,GAAG70G,EAAE,GAAGG,EAAE,GAAG9pB,CAAC,AC7xFE;AAE1B,QD4xFGqG,EAAE,CAAE,CAAC,CAAE,GAAGwjB,EAAE,GAAG7pB,CAAC,GAAG4pB,EAAE;AC1xFxB,QD2xFGvjB,CC3xFMq5H,CD2xFJ,CAAE,CAAC,CAAE,GAAG73I,CAAC,GAAG2B,CAAC,AC3xFGk2I,CAAEtjI,MAAM,EAAEsB,CAAC,EAAEtU,CAAC,EAAEwlB,KAAK,EAAEC,MAAM,EAAG;EAEpDzS,MD2xFEiK,AC3xFI,CAACsP,CD2xFH,CAAE,CAAC,CAAE,GAAG9tB,CAAC,AC3xFE,CAAC+Y,ED2xFA1X,CAAC,AC3xFE,CAAEwU,CAAC,EAAEtU,CAAC,EAAEwlB,KAAK,EAAEC,MAAO,CAAC;EAC1CzS,MD2xFEiK,AC3xFI,CAACoP,CD2xFH,CAAE,CAAC,CAAE,GAAG5tB,AC3xFE,CD2xFD,AC3xFE+Y,GD2xFC3Z,AC3xFE,CD2xFD,AC3xFGyW,CAAC,EAAEtU,CAAC,EAAEwlB,KAAK,EAAEC,MAAO,CAAC;AAE1C,QD0xFGxI,EAAE,CAAE,CAAC,CAAE,GAAG,CAAErG,CAAC;ACxxFhB,QD0xFGqG,CC1xFM65H,CD0xFJ,CAAE,CAAC,CAAE,GAAGt2G,EAAE,GAAG5pB,CAAC,CC1xFIkgI,CAAE4B,CD0xFHj4G,EAAE,GC1xFO,EAAEjb,KAAK,EAAEC,MAAM,EAAG;EAEhD,IAAM+yH,EDyxFJv7H,EAAE,CAAE,CAAC,CAAE,ACzxFI,GDyxFDyjB,ACzxFI,EDyxFF,ECzxFM9oB,CDyxFH2oB,EAAE,GAAG3pB,CAAC,KCzxFS,CAAE+6H,WAAY,CAAC;EAC/C,IAAM8F,EDyxFJx6H,EAAE,CAAE,EAAE,CAAE,ACzxFI,GDyxFDxe,ACzxFI,CDyxFH,GAAGE,ACzxFI80B,CDyxFH,iBCzxFU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;EACvC,ID0xFC,AC1xFK2lH,CD0xFJ,MAAM,IAAK5pH,GC1xFO,ED0xFF,CAAC3Y,AC1xFI,IAAI0yC,CD0xFH,KAAK,KAAK,EAAG,YC1xFI,CAAE;IAE1CvmD,ID0xFC,AC1xFG,EAAE,ED0xFCu9B,GAAE,GAAG5hC,CAAC,GAAGd,CAAC,UC1xFY;IAE7B8rD,MDwxFmBnpB,CCxxFZ,EDwxFc,ACxxFZ,GDwxFe7hC,CAAC,GAAGmB,CAAC;MCvxF5B,GAAG,CDuxF2B2gC,CCvxFzBkxG,EDuxF2B,GAAGvxI,CAAC,GAAGvC,CAAC,CCvxFxB;MAChB,IDsxF0C6iC,GAAE,GAAGtgC,CAAC,GAAGN,CAAC,KCtxFhC,EAAE,GAAG,GAAG0lB,KAAK;MACjC,EDuxFAvI,EAAE,CAAE,CAAC,CAAE,GAAGsjB,GAAE,GAAGG,GAAE,ECvxFI,CDuxFD9pB,CAAC,ACvxFE,GAAG,GAAG6O,MAAM;MACnC,EDuxFAxI,EAAE,CAAE,CAAC,CAAE,GAAG,CAAExe,CAAC,GAAGqB,CAAC,ACvxFD,KAAA6zC,MAAA,CAAK+kG,MAAM;IAC5B,CAAC,GDuxFAz7H,EAAE,CAAE,CAAC,CAAE,GAAGwjB,GAAE,GAAGD,GAAE,GAAG5pB,CAAC;ICrxFtB8xC,IDuxFCzrC,EAAE,CAAE,CAAC,ACvxFE,CDuxFA,CCvxFE,EDuxFCujB,GAAE,GAAGC,GAAE,GAAG7pB,CAAC;MCtxFrB,EDuxFAqG,EAAE,CAAE,CAAC,CAAE,CCvxFC,EDuxFExe,ACvxFA,CDuxFC,GAAGZ,CAAC;QACfof,ACxxFY3e,EDwxFV,CAAE,CAAC,CAAE,ACxxFU,EAAE,CDwxFToiC,GAAE,GAAGH,GAAE,GAAG3pB,CAAC;MCxxFG,CAAC,CD0xFzBqG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAExe,CAAC,GAAG2B,CAAC;MCzxFjB,ED0xFA6c,EAAE,CAAE,CAAC,CAAE,EC1xFE,CD0xFCrG,CAAC,AC1xFA;QD2xFXqG,AC3xFa3e,ED2xFX,CAAE,EAAE,AC3xFY,CD2xFV,CC3xFY,ED2xFTG,CAAC,GAAGE,CAAC;MAEjB,AC7xFuB,CD6xFtB,AC7xFuB,MD6xFjB,IAAK6wB,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;MC5xFnC,ED8xFA,IAAM+G,GAAE,AC9xFC,EAAE,CD8xFAnf,CAAC,GAAGZ,CAAC;QC9xFHS,ED8xFK+hC,GAAE,AC9xFF,EAAEm4G,CD8xFG/5I,CAAC,GAAGqB,CAAC;MC9xFA,CAAC,GD8xFC+d,GAAE,GAAGjH,CAAC,GAAG/Y,CAAC;MC7xFxC,ID6xF0CyiC,GAAE,GAAG1pB,CAAC,EC7xFnC,CD6xFsC9W,CAAC,AC7xFrC;QD+xFfmd,AC/xFiB3e,ED+xFf,CAAE,CAAC,CAAE,AC/xFe,EAAE,CD+xFdK,CAAC,GAAGd,CAAC;MC/xFe,CAAC,CDgyF/Bof,EAAE,CAAE,CAAC,CAAE,GAAGY,GAAE,GAAGzd,CAAC,GAAGigC,GAAE;MC/xFrB,EDgyFApjB,EAAE,CAAE,CAAC,CAAE,CChyFC,EDgyFEW,AChyFA,GDgyFE,GAAGxd,CAAC,GAAGkgC,GAAE;QAErBrjB,AClyFY3e,EDkyFV,CAAE,CAAC,CAAE,AClyFU,EAAE,CDkyFTK,CAAC,GAAGmB,CAAC;MClyFM,CAAC,CDmyFtBmd,EAAE,CAAE,CAAC,CAAE,GAAGqjB,GAAE,GAAGlgC,CAAC,GAAGwd,GAAE;MClyFrB,EDmyFAX,EAAE,CAAE,CAAC,CAAE,CCnyFC,EDmyFEojB,ACnyFA,GDmyFE,GAAGjgC,CAAC,GAAGyd,GAAE;QAErBZ,ACryFY3e,EDqyFV,CAAE,CAAC,CAAE,ACryFU,EAAE,CDqyFT,CAAE8B,CAAC;MCryFQ,CAAC,CDsyFtB6c,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGjY,CAAC;MCryFf,EDsyFAse,EAAE,CAAE,EAAE,CAAE,ECtyFE,CDsyFCxe,CAAC,ACtyFA,GDsyFGE,CAAC;MAEjB,CAAC,CCxyFcL,KDwyFR,ACxyFa,EAAEm5I,EDwyFVjoH,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;MCxyFL,ED0yF9B,IAAM8pB,EAAE,GAAGliC,CAAC,GAAGE,CAAC;ICzyFjB,CAAC,KDyyFkBiiC,EAAE,GAAGniC,CAAC,GAAG2B,CAAC;ICvyF7BypD,MDuyF+BhpB,EAAE,GAAGjqB,CAAC,ACvyFzB,EAAEyiI,CDuyF0B16I,CAAC,oBCvyFL,CAAC,CAAC;IAEtCmrD,MDqyF2ChpB,EAAE,GAAGlqB,CAAC,ECryFnC,CDqyFsCxW,CAAC,ACryFrC,4iDA4Df;IAEDs0C,IDyuFCz3B,EAAE,CAAE,CAAC,ACzuFE,CDyuFA,CCzuFE3W,EDyuFC3H,CAAC,GAAGd,CAAC,cCzuFI;IACpB43C,IDyuFCx4B,EAAE,CAAE,CAAC,CAAE,ACzuFC,EAAE,CDyuFA6jB,EAAE,ECzuFG,CDyuFAH,EAAE,GAAG7gC,CAAC;ICxuFtB41C,IDyuFCz4B,EAAE,CAAE,CAAC,CAAE,CCzuFE,EDyuFC4jB,ACzuFC,EDyuFC,GAAG/gC,CAAC,GAAG8gC,EAAE;ECvuFvB,CAAE,CAAC,IDyuFD3jB,EAAE,CAAE,CAAC,CAAE,GAAGnd,CAAC;ECvuFb,MDwuFEmd,CCxuFKm8H,CDwuFH,CAAE,CAAC,CAAE,GAAG36I,CAAC,GAAGZ,CAAC,ECxuFI;AAEtB,QDuuFGof,EAAE,CAAE,CAAC,CAAE,GAAG,CAAErG,CAAC,GAAG/Y,CAAC;ACruFpB,QDuuFGof,CCvuFMg5H,CDuuFJ,CAAE,CAAC,CAAE,GAAG,CAAE71I,CAAC,GAAGvC,CAAC,OCvuFSo4I,CAAA,EAAG;EAE/B,MDsuFEh5H,CCtuFK,CDsuFH,CAAE,CAAC,CAAE,ACtuFEssC,GDsuFC3oB,EAAE,GAAG9gC,CAAC,GAAG+gC,EAAE,WCtuFE,CAAE;IAE1B79B,IDquFCia,ACruFG,EDquFD,ACruFG,CDquFD,EAAE,CAAE,GAAG0jB,EAAE,GAAGG,EAAE,GAAGhhC,CAAC,OCruFQ;IAE/B4oD,EDquFA,CAAC,KCruFO,CDquFD,CCruFG,GDquFEl5B,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;MCpuFnC,EDsuFA,IAAM8pB,ECtuFE,CDsuFA,CCtuFE,EDsuFCliC,CAAC,GAAGE,CAAC;QCtuFJL,EDsuFMsiC,GAAE,ACtuFH,EAAE,CDsuFIniC,CAAC,GAAG2B,CAAC;MCtuFJ,IDsuFMygC,GAAE,GAAGjqB,CAAC,GAAGjY,CAAC;ICruFzC,CAAC,KDquF0CmiC,GAAE,GAAGlqB,CAAC,GAAGxW,CAAC;ICnuFrDypD,IDquFC5sC,EAAE,CAAE,CAAC,CAAE,GAAGte,ACruFC,CDquFA,CCruFE06I,EDquFCx7I,CAAC,mBCruFoB,CAAC,CAAC;IAEtCisD,IDouFC7sC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEnd,CAAC,ACpuFA,EAAE,kZAmBf;IAED40C,IDgtFCz3B,EAAE,CAAE,CAAC,AChtFE,CDgtFA,CChtFE3W,EDgtFClG,CAAC,GAAGvC,CAAC,cChtFI;IACpB43C,IDitFCx4B,EAAE,CAAE,CAAC,CAAE,ACjtFC,EAAE,CDitFA0jB,GAAE,CCjtFG,EDitFA7gC,CAAC,GAAGghC,GAAE;IChtFtB4U,IDitFCz4B,EAAE,CAAE,CAAC,CAAE,CCjtFE,EDitFCxe,ACjtFC,CDitFA,GAAGZ,CAAC;EC/sFjB,CAAE,CAAC,IDgtFDof,EAAE,CAAE,CAAC,CAAE,GAAG2jB,GAAE,GAAG9gC,CAAC,GAAG+gC,GAAE;AC9sFxB,QDgtFG5jB,EAAE,CAAE,CAAC,CAAE,GAAG4jB,GAAE,GAAG/gC,CAAC,GAAG8gC,GAAE;AC9sFxB,QD+sFG3jB,CC/sFM84H,CD+sFJ,CAAE,CAAC,CAAE,GAAGn/H,CAAC,GAAG/Y,CAAC,OC/sFUk4I,CAAA,EAAG;EAE9B,MD8sFE94H,CC9sFK,CD8sFH,CAAE,EAAE,AC9sFGssC,CD8sFD,GAAGzoB,GAAE,GAAGhhC,CAAC,GAAG6gC,GAAE,QC9sFC,CAAE;IAE1B39B,ED8sFA,EC9sFI,EAAE,iBAAiB;IAEvB0lD,QAAQ,EAAE;MD8sFV,AC7sFC,QAAQ,EAAE;MD8sFXzrC,EAAE,AC9sFW3e,CD8sFT,CAAC,CAAE,EC9sFW,CD8sFR,CAAC,AC9sFS;MD+sFpB2e,AC/sFyB,CAAC,CD+sFxB,CAAE,CAAC,CAAE,GAAG,CAAC;MACXA,AC/sFC,ED+sFC,CAAE,EAAE,CAAE,GAAG,CAAC,EC/sFC,EAAE;QAAE3e,KAAK,EAAE,CAAE;MDitF1B,ACjtF4B;IAC5B,CAAC,CDitFD2e,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;IC/sFZ4sC,EDgtFA5sC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,AChtFA,EAAEo8H,sBAAsB,CAAC,CAAC;IAEtCvvF,ED+sFA7sC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,EC/sFE,EAAE,mVAgBf;IAEDy3B,ED8rFAz3B,EAAE,CAAE,EAAE,CAAE,AC9rFA,EAAE3W,CD8rFC,CAAC,mBC9rFQ;IACpBmvC,ED+rFA,OAAO,AC/rFE,EAAE,ED+rFA,GC/rFK;IDisFjB,AChsFCC,UAAU,EAAE;EDgsFZ,AC9rFD,CAAE,CAAC;AAEJ,ID4rFEjxC,GAAA;AC1rFF,ID0rFEnG,KAAA,AC1rFO+6I,ED4rFR,SAAAt4G,WC5rF8Bs4G,CAAA,EAAG,YD4rFPt4G,CAAEpqB,CAAC,EAAG;EC1rFhC,ID4rFC,GC5rFM,ID4rFC,IAAI,CAACqqB,OAAO,CAAEC,KAAK,EAAEtqB,CAAC,EAAEuqB,IAAK,CAAC;ACnoFvC,IDqoFC;ACnoFD,EDmoFE,OCnoFOo4G,eAAeA,CAAExwF,QAAQ,EAAG;EAEpC,EDioFCrkD,ECjoFG80I,CDioFH,SCjoFa,GAAG,IAAI5iB,OAAO,CAAC,CAAC;EAE9B,ED+nFCr4H,EC/nFGk7I,GD+nFH,EAED,SAAA98G,ACjoFkB,GAAG,GDioFfA,CAAEyE,ACjoFiB,GDioFd,EAAEnuB,MAAM,EAAEouB,EAAE,EAAG;EC/nF1B,IDioFC,IAAMnkB,CCjoFEzE,CDioFA,ECjoFGA,CDioFA,ACjoFEuU,IDioFE,CAAClT,ECjoFI,EAAG,IDioFC;IC/nFxB,EDioFAsV,EAAE,ACjoFGpC,CDioFFxT,MCjoFS,IDioFC,ACjoFGwT,CDioFDoU,GAAG,EAAEnuB,CCjoFG,CAACqV,IDioFG,CAAC,ICjoFK,EAAG;MDmoFpC,ACjoFC,IDioFI8G,ACjoFExH,EDioFA,CAACpN,ICjoFM,GAAGwS,CDioFD,CAAC,CAAC,ICjoFM,CDioFD,ACjoFEpF,CDioFD,EAAG,ICjoFK;MAE/B,EDioFA,ECjoFM8xH,aAAa,GAAK9xH,OAAO,KAAKne,2CAAgC,IAAIme,OAAO,KAAKle,2CAAkC;MACtH,IAAMiwI,SAAS,GAAK/xH,OAAO,KAAKre,gCAAqB,IAAIqe,OAAO,KAAKpe,gCAAuB;QDkoF5F4lB,EAAE,CAACjF,CAAC,GAAG,CAAC;MAET,ACloFC;MDooFDiF,EAAE,CAAChX,SAAS,CAAC,CAAC;MACd8W,ACnoFC,EDmoFC,CAAC+F,CCnoFGykH,WDmoFS,CAAEr4G,CCnoFE,CDmoFA,EAAEjS,CCnoFEuqH,CDmoFC,CAAC,OCnoFO,EAAG;MDqoFnC,ECnoFE,EDmoFGzqH,EAAE,ACnoFD/F,CDmoFE3O,QAAQ,CAAC,CAAC,CCnoFA,GAAGg/H,CDmoFE,CAAC,EAAG,MCnoFI,CAAC/gI,GAAG,CAAEuU,OAAQ,CAAC;QDqoF7C,ACnoFC,IAAM4sH,mBAAmB,GAAGzwH,YAAY,KAAK5W,SAAS,GAAG4W,YAAY,CAAC6D,OAAO,CAAC3D,YAAY,GAAG,CAAC;QAE9F,IAAK2D,OAAO,CAAC5D,qBAAqB,IAAI4D,OAAO,CAAC3D,YAAY,KAAKuwH,mBAAmB,EAAG;QDmoFtF,ECjoFE,EDioFGtmI,ECjoFEmmI,EDioFE,CAACrkI,GAAG,CAAEisB,EAAE,CAAClX,CAAE,CAAC,ECjoFA,GDioFK,CAAC,CCjoFD,CDioFI,GCjoFA,EAAGsvH,cAAc,GAAG,IAAInF,cAAc,CAAEvrF,QAAS,CAAC;UDmoF/E35B,ACjoFCjG,EDioFC,CAAC5U,CAAC,IAAI,ICjoFK,EDioFC,CCjoFEmlI,aAAa,GAAGD,cAAc,CAAC9D,mBAAmB,CAAE3oH,OAAO,EAAE7D,YAAa,CAAC,GAAGswH,cAAc,CAAC3D,WAAW,CAAE9oH,OAAO,EAAE7D,YAAa,CAAC;QDmoFlJ,CAAC,CCloFCA,KDkoFK,OCloFO,CAAC6D,OAAO,CAAC3D,YAAY,GAAG2D,OAAO,CAAC3D,YAAY;UDooFzD+F,ACloFCoqH,EDkoFC,CAACrvH,CAAC,IAAI,ECloFG,CAAC1S,GDkoFE,ACloFC,CAAEuV,OAAO,EAAE7D,YAAa,CAAC;QDooFzC,ECloFE,OAAOA,YAAY,CAAC6D,OAAO;QDooF7BoC,ACloFC,CAAC,CDkoFA,CAAChX,ICloFK,KDkoFI,CAAC,CAAC;QACd8W,EAAE,ACjoFA,CDioFC+F,GCjoFI9L,SDioFQ,CAAEkY,EAAE,ACjoFA,EDioFEjS,EAAG,CAAC,ACjoFD7c,SAAS,EAAG;MDmoFrC,MCjoFI,OAAO4W,YAAY,CAAC6D,OAAO;MDmoF/BkC,EAAE,CAAC9W,CCjoFA,CAAC,MAAM,CDioFE,CAAC,CAAC;MACd+W,EAAE,CAAC8F,GChoFC,IAAM5P,KDgoFK,AChoFA,CDgoFE+J,EAAE,AChoFDpC,EDgoFGkC,EAAG,CAAC,EChoFA,CAAC7J,KAAK;MDkoF/BnI,EAAE,CAAE,CAAC,CAAE,CChoFH,EDgoFMgS,EAAE,AChoFDwqH,CDgoFEnlI,CAAC,WChoFU,IAAI8Q,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAG,CAAC,IAAQi0H,SAAS,IAAIt0H,KAAK,IAAIw0H,qBAAqB,CAAEx0H,KAAM,CAAG,EAAG;MDgoFtGnI,EAAE,CAAE,CAAC,CAAE,GAAGiS,AC9nFrB,ED8nFuB,CAAC5a,CAAC,AC9nFpBklI,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAInF,cAAc,CAAEvrF,QAAS,CAAC;MD8nFnD7rC,EAAE,CAAE,CAAC,CAAE,GAAGkS,AC5nFrCjG,ED4nFuC,CAAC5U,CAAC,QC5nF7B,GAAGmlI,aAAa,GAAGD,cAAc,CAAC9D,mBAAmB,CAAE3oH,OAAQ,CAAC,GAAGysH,cAAc,CAAC3D,WAAW,CAAE9oH,OAAQ,CAAC;MD6nFzH9P,EAAE,CAAE,CAAC,CAAE,GAAGgS,AC5nFL/F,ED4nFO,CAAClpB,CAAC,QC5nFG,CAAC+sB,OAAO,CAAC3D,YAAY,GAAG2D,OAAO,CAAC3D,YAAY;MD4nF7CnM,EAAE,CAAE,CAAC,CAAE,GAAGiS,AC1nFrBqqH,ED0nFuB,CAACv5I,CAAC,MC1nFf,CAACwX,GAAG,CAAEuV,OAAO,EAAE7D,YAAa,CAAC;MD0nFZjM,EAAE,CAAE,CAAC,CAAE,GAAGkS,ACxnFrCpC,EDwnFuC,CAAC/sB,CAAC,GCxnFlC,CAACmS,gBAAgB,CAAE,SAAS,EAAEshI,gBAAiB,CAAC;MDynF5Dx2H,EAAE,CAAE,CAAC,CAAE,GAAGgS,ACvnFL,EDunFO,CAAC/E,CAAC,GCvnFFhB,YAAY,CAAC6D,OAAO;MDunFhB9P,EAAE,CAAE,CAAC,CAAE,CCrnFnB,CAAC,CDqnFqBiS,EAAE,CAAChF,CAAC,CCrnFnB;MDqnFqBjN,EAAE,CAAE,EAAE,CAAE,ECnnFnC,CDmnFsCkS,EAAE,CAACjF,CAAC;MAE/C,OAAO,IAAI;IAEZ,UCrnFM,OAAO,IAAI;EDqnFhB,UCnnFI;IDmnFJzlB,GAAA,GCjnFG;IDinFHnG,IC/mFE,CD+mFF,EAED,SAAAkb,QAAQA,CAAEpF,CAAC,EAAG;MAEb,ACjnFC,ODinFM,IAAI,CAACsJ,gBAAgB,CAAE,IAAI,EAAEtJ,CAAE,CAAC;IAExC,ACjnFC;EDinFA,EC/mFA,OAAO2Y,OAAO;EAEf,ED6mFCtoB,GAAA;EC3mFD,ED2mFCnG,KAAA,EAED,AC7mFSs7I,SD6mFTj8H,WAAWA,CAAEvJ,AC7mFiBwlI,CD6mFhB,AC7mFkBx0H,ED6mFf,GC7mFoB,EAAG;IAEvC,ED6mFA,EC7mFI0H,KD6mFG,AC7mFE,GAAG,CD6mFD,AC7mFE,CD6mFDpP,gBAAgB,CAAEtJ,CAAC,EAAE,IAAK,CAAC;IAExC,AC9mFC,IAAMxR,MAAM,GAAG,CAAC;ED8mFhB,EC5mFA,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqE,MAAM,EAAErE,CAAC,EAAG,EAAG;ID4mFpCkG,EC1mFC,CD0mFD,GC1mFM2gB,KAAK,CAAE7mB,CAAC,CAAE,KAAK+T,SAAS,EAAGwa,KAAK,EAAG;ID0mFzCxuB,ACxmFA,KDwmFA,EAED,SAAAof,gBAAgBA,CAAEjf,CAAC,EAAEmY,CAAC,EAAG;ICxmFxB,ED0mFA,IAAMgH,CC1mFCkP,CD0mFC,GAAGruB,CAAC,AC1mFA,CD0mFCob,IC1mFIjX,ID0mFI,EC1mFE;EAGxB,IDwmFC,IAAMib,EAAE,GAAGjH,CAAC,CAACiD,QAAQ;ECtmFtB,IDumFC,IAAMoD,CCvmFEw2H,CDumFA,GAAG,IAAI,CAAC55H,OCvmFQ45H,CDumFA,ACvmFE1gI,KAAK,EAAG;IAElC,EDumFA,ECvmFMga,EDumFAjP,GAAG,ECvmFI,CDumFDF,EAAE,ACvmFE7K,CDumFA,CAAC,CAAE,ECvmFE,CAACC,MAAM;IAE5B+Z,IDqmFqBhP,GAAG,ACrmFjB,CAACrL,EDqmFmBkL,EAAE,CAAE,CAAC,CAAE,YCrmFP,CAAE,SAAS,EAAE61H,gBAAiB,CAAC;IAE1D,IDmmFoCz1H,ACnmF9B67H,GDmmFiC,GAAGj8H,EAAE,CAAE,ACnmF/B,CDmmFgC,CAAE,CCnmF/B27H,UAAU,CAAC/gI,GAAG,CAAEuU,OAAQ,CAAC;IAE3C,IDimFmDsU,ACjmF9Cw4G,GDimFiD,GAAGj8H,EAAE,CAAE,ACjmF/C,EDimFiD,CAAE,ECjmF9CtL,SAAS,EAAG;MDkmF/B,AChmFCinI,IDgmFKt7H,GAAG,GAAGL,AChmFD,CAACi6G,CDgmFE,CAAE,CAAC,CAAE,EChmFD,CAAE9qG,OAAQ,CAAC;MAC5B8sH,ED+lFoB37H,GAAG,GAAGN,CC/lFjB,CD+lFmB,AC/lFlBkM,CD+lFoB,CAAC,CAAE,IC/lFhB,CAAC,CAAC;IAEpB,ID6lFoC3L,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;EC3lFlD,MD2lFoD0jB,GAAG,GAAG1jB,EAAE,CAAE,EAAE,CAAE;ECzlFlE,ID0lFC,IAAMQ,CC1lFE0L,ED0lFC,GAAGlM,EAAE,AC1lFCkM,CD0lFC,AC1lFD,CD0lFE,CAAE,AC1lFD;IAElByvH,IDwlFqBl7H,GAAG,GAAGT,ACxlFjB,EDwlFmB,CAAE,ACxlFlB,CDwlFmB,CAAE,ECxlFjB+4G,OAAO,CAAC,CAAC;IAE1B,IDslFoCr4G,ACtlF/Bk7H,GDslFkC,GAAG57H,EAAE,CAAE,EAAE,CAAE,ECtlF/B,KAAK,IAAI,EAAG;MAE9B47H,EDolFmDj4G,GAAG,GAAG3jB,EAAE,CAAE,EAAE,CAAE,ACplFnD,CAACkM,OAAO,CAAC,CAAC;MDqlFzB,ACplFC0vH,IDolFKh4G,GAAG,GAAG5jB,EAAE,CAAE,CAAC,ACplFF,CDolFI,ECplFD,IAAI;IAEtB,IDklFqB6jB,GAAG,GAAG7jB,EAAE,CAAE,CAAC,CAAE;EChlFnC,MDglFqC8jB,GAAG,GAAG9jB,EAAE,CAAE,EAAE,CAAE;EC9kFnD,MD8kFqD+jB,CC9kF9C,ED8kFiD,GAAG/jB,EAAE,CAAE,EAAE,CAAE;IC7kFlEpF,ED+kFA,CC/kFG,EAAEA,CD+kFC+F,EC/kFE,CD+kFC,GAAGV,EAAE,CAAE,CAAC,CAAE;IC9kFnBiM,ID8kFqBtL,GAAG,AC9kFjB,EAAEsL,CD8kFkBjM,EAAE,CAAE,CAAC,CAAE;EC7kFnC,CAAC,KD6kFoCY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;AC3kFnD,QD2kFqD+jB,GAAG,GAAG/jB,EAAE,CAAE,EAAE,CAAE;ACzkFnE,MD0kFE,GC1kFOi8H,CD0kFDp7H,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE,GC1kFGi8H,CAAEl4H,EAAE,EAAG;EAE9B,IAAMqoC,EDwkFgBtrC,GAAG,GAAGd,EAAE,ACxkFd,CDwkFgB,CAAC,CAAE,ACxkFhB,CAAC,CAAC;EAErB,MDskFqCe,GAAG,ACtkF/Bm7H,GDskFkCl8H,EAAE,CAAE,CAAC,CAAE,ICtkF7Bk8H,CAAE/2I,IAAI,EAAG;IAE7B,IDokFmD6+B,ACpkF9CooB,GDokFiD,GAAGpsC,EAAE,CAAE,CCpkF9C,CDokFgD,ACpkF9C7a,CDokFgD,GCpkF5C,CAAE,KAAKsP,SAAS,EAAG;MDqkFxC,ACnkFC,IDmkFKuM,GAAG,ACnkFDorC,GDmkFIpsC,EAAE,CAAE,CAAC,CAAE,ECnkFD,CAAE7a,IAAI,CAAE;IAE1B,IDikFqB8b,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;IC/jFlC,ID+jFoCkB,AC/jFhCiwH,GD+jFmC,GAAGnxH,EAAE,CAAE,AC/jFjC,ED+jFmC,CAAE;IC7jFlD,ID6jFoDikB,GAAG,CC7jF9C9+B,ED6jFiD6a,EAAE,AC7jF/C,CD6jFiD,EAAE,CAAE;MAClE,AC5jFC,ID4jFKkkB,CC5jFA,ED4jFG,GAAGlkB,EAAE,CAAE,CAAC,CAAE,WC5jFQ;QD4jFNmkB,AC3jFnBgtG,GD2jFsB,GAAGnxH,EAAE,CAAE,AC3jFpB,CD2jFqB,CAAE,CC3jFpB+D,EAAE,CAACm4H,YAAY,CAAE,qBAAsB,CAAC,IAAIn4H,EAAE,CAACm4H,YAAY,CAAE,yBAA0B,CAAC,IAAIn4H,EAAE,CAACm4H,YAAY,CAAE,4BAA6B,CAAC;QD2jFrH93G,AC1jFlC,GD0jFqC,GAAGpkB,EAAE,CAAE,EAAE,CAAE;MCxjFjD,EDwjFmDqkB,GAAG,ACxjFjD,GDwjFoDrkB,EAAE,CAAE,EAAE,CAAE,uBCxjF5B;MD0jFtCZ,EAAE,ACzjFA+xH,CDyjFE,CAAC,CAAE,GAAGlxH,GAAG,ACzjFF,GDyjFKS,ACzjFFqD,EAAE,CDyjFG,ACzjFFm4H,GDyjFKh8H,GAAG,GAAGW,GAAG,ACzjFF,CAAE,EDyjFGV,GAAG,GAAGa,GAAG,GAAGwiB,GAAG,GAAGU,GAAG,SCzjFS,CAAC,IAAIngB,EAAE,CAACm4H,YAAY,CAAE,oCAAqC,CAAC,IAAIn4H,EAAE,CAACm4H,YAAY,CAAE,uCAAwC,CAAC;MD0jF1L98H,EAAE,ACzjFA,CDyjFE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG,GAAGuiB,GAAG,GAAGW,GAAG;MACvD/kB,ACxjFC,EDwjFC,CAAE,CAAC,CAAE,ACxjFD,GDwjFIa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,CCxjFA,EDwjFGe,GAAG,GAAGsiB,GAAG,GAAGY,GAAG;MACvDhlB,EAAE,ACxjFA+xH,CDwjFE,EAAE,CAAE,GAAGlxH,ECxjFA,CDwjFG,ECxjFA8D,CDwjFGggB,CCxjFD,CAACm4G,CDwjFG,GAAGh8H,GAAG,GAAG8jB,ECxjFA,CDwjFG,ACxjFD,GDwjFI7jB,GAAG,GAAG8jB,GAAG,GAAGT,GAAG,GAAGa,GAAG,OCxjFO,CAAC,IAAItgB,EAAE,CAACm4H,YAAY,CAAE,mCAAoC,CAAC,IAAIn4H,EAAE,CAACm4H,YAAY,CAAE,sCAAuC,CAAC;MD0jFvL98H,EAAE,ACzjFA,CDyjFE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGyiB,GAAG,GAAGS,GAAG;MACvD9kB,ACxjFC,EDwjFC,CAAE,CAAC,CAAE,ACxjFD,GDwjFIgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,ECxjFC,CDwjFEW,GAAG,GAAGwiB,GAAG,GAAGU,GAAG;MACvD/kB,EAAE,ACxjFA+xH,CDwjFE,CAAC,CAAE,GAAG/wH,GAAG,ACxjFF,GDwjFKQ,ACxjFFmD,EAAE,CDwjFG,ACxjFFm4H,GDwjFK77H,GAAG,GAAGU,GAAG,ACxjFF,CAAE,EDwjFGT,GAAG,GAAGY,GAAG,GAAGuiB,GAAG,GAAGW,GAAG,SCxjFS,CAAC,IAAIrgB,EAAE,CAACm4H,YAAY,CAAE,uCAAwC,CAAC;MDyjF/H98H,EAAE,ACxjFA,CDwjFE,EAAE,CAAE,GAAGgB,GAAG,GAAG2jB,GAAG,GAAG1jB,GAAG,GAAG2jB,GAAG,GAAG1jB,GAAG,GAAG2jB,GAAG,GAAGR,GAAG,GAAGY,GAAG;MAExDjlB,ACxjFC,EDwjFC,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAG0iB,GAAG,GAAGQ,GAAG;MACvD9kB,EAAE,ACxjFA+xH,CDwjFE,CAAC,CAAE,GAAG5wH,GAAG,ACxjFF,GDwjFKI,ACxjFFoD,EAAE,CDwjFG,ACxjFFm4H,GDwjFK17H,GAAG,GAAGM,GAAG,ACxjFF,CAAE3b,EDwjFGsb,ECxjFE,CDwjFC,ACxjFA,GDwjFGQ,GAAG,GAAGyiB,GAAG,GAAGS,GAAG;ICtjFvD,EDujFA/kB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGwiB,GAAG,GAAGU,GAAG;ICrjFxDgoB,EDsjFAhtC,EAAE,CAAE,EAAE,CAAE,ECtjFE,CDsjFCmB,ACtjFCpb,GDsjFE,CCtjFE,CAAE,CDsjFD4+B,ECtjFIotG,CDsjFD,GAAG3wH,GAAG,ECtjFI,CDsjFDwjB,GAAG,GAAGvjB,GAAG,GAAGwjB,GAAG,GAAGP,GAAG,GAAGW,GAAG;ICpjFxD,EDsjFAjlB,EAAE,CAAE,CAAC,CAAE,ACtjFA+xH,GDsjFGxtG,GAAG,GAAGjjB,ACtjFA,GDsjFG,GAAGkjB,GAAG,GAAG/iB,GAAG,GAAGgjB,GAAG,GAAG7iB,GAAG,GAAG8iB,GAAG,GAAGI,GAAG;ECpjFxD,IDqjFC9kB,EAAE,CAAE,CAAC,CAAE,GAAGukB,GAAG,GAAGhjB,GAAG,GAAGijB,GAAG,GAAG9iB,GAAG,GAAG+iB,GAAG,GAAG5iB,GAAG,GAAG6iB,GAAG,GAAGK,GAAG;ECnjFxD,IDojFC/kB,EAAE,CAAE,ACpjFE,EDojFA,CAAE,GAAGukB,GAAG,GAAG/iB,GAAG,GAAGgjB,GAAG,GAAG7iB,GAAG,GAAG8iB,GAAG,GAAG3iB,GAAG,GAAG4iB,GAAG,GAAGM,GAAG;ICljFxDyoD,EDmjFAztE,CCnjFG,CDmjFD,CAAE,ACnjFC,EDmjFC,CAAE,GAAGukB,GAAG,ACnjFdkpD,GDmjFiB9oD,ACnjFd8oD,CAAa1nF,EDmjFI,ECnjFA,CDmjFGy+B,CCnjFA,EDmjFG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGO,GAAG;MAExD,ACnjFC,ODmjFM,ACnjFC63G,IDmjFG,QCnjFS,CAAE/2I,IAAK,CAAC,KAAK,IAAI;IDqjFtC,ACnjFC,CAAC;EDmjFD,ECjjFAw2D,IAAI,EAAE,SAANA,IAAIA,CAAA,EAAc;IDijFlB/0D,EC/iFCs1I,CD+iFD,WC/iFa,CAAE,wBAAyB,CAAC;ID+iFzCz7I,EC9iFCy7I,GD8iFD,EAED,OChjFc,CAAE,CDgjFhBtgI,cAAcA,CAAE1Z,CAAC,EAAG,OChjFuB,CAAC;MDkjF3C,ACjjFCg6I,IDijFK98H,EAAE,GAAG,GCjjFE,CDijFE,ACjjFA,CDijFCpD,QAAQ,iBCjjFkB,CAAC;MDmjF3CoD,ACljFC88H,EDkjFC,CAAE,CAAC,CAAE,IAAIh6I,CAAC,ECljFC,CAAE,6BAA8B,CAAC;MDkjFhCkd,ACjjFb88H,EDijFe,CAAE,CAAC,CAAE,IAAIh6I,CAAC,ECjjFb,CAAE,sCAAuC,CAAC;MDijF3Bkd,AChjF3B88H,EDgjF6B,CAAE,CAAC,CAAE,IAAIh6I,CAAC,EChjF3B,CAAE,8BAA+B,CAAC;IAE/C,CAAC,CD8iFyCkd,EAAE,CAAE,EAAE,CAAE,IAAIld,CAAC;IC5iFvDyY,ED6iFAyE,CC7iFG,CD6iFD,CAAE,AC7iFC,CD6iFA,CAAE,IAAIld,CAAC,EC7iFZyY,GAAGA,CAAaxV,IAAI,EAAG;MD6iFTia,AC3iFb,ED2iFe,CAAE,CAAC,AC3iFZ+xH,CD2iFc,IAAIjvI,CAAC,GC3iFV,GAAGg6I,YAAY,CAAE/2I,IAAK,CAAC;MD2iFXia,ACziF3B,EDyiF6B,CAAE,CAAC,ACziF3B+xH,CDyiF6B,IAAIjvI,CAAC,GCziFzB,KAAK,IAAI,EAAG;MDyiFekd,EAAE,ACviF1C,CDuiF4C,EAAE,CAAE,ACviFhDwE,IDuiFoD1hB,CAAC,cCviF7C,EAAE,uBAAuB,GAAGiD,IAAI,GAAG,2BAA4B,CAAC;MDwiF1Eia,ACtiFC,EDsiFC,CAAE,CAAC,CAAE,IAAIld,CAAC;MAAEkd,ACpiFb,EDoiFe,CAAE,CAAC,CAAE,ECpiFb+xH,EDoiFiBjvI,CAAC,MCpiFT;IAEjB,EDkiF4Bkd,EAAE,CAAE,EAAE,CAAE,IAAIld,CAAC;EChiF1C,CAAC,GDgiF2Ckd,EAAE,CAAE,EAAE,CAAE,IAAIld,CAAC;AC9hF1D,MD+hFEkd,EAAE,CAAE,CAAC,CAAE,IAAIld,CAAC;AC7hFd,MD6hFgBkd,EAAE,CAAE,AC7hFX+8H,CD6hFY,CAAE,IAAIj6I,CAAC,QC7hFJi6I,CAAEp4H,EAAE,EAAE8+B,UAAU,EAAEqkB,IAAI,EAAEimE,aAAa,EAAG;EAE/D,ID2hF6B/tH,AC3hFvB4tB,ED2hFyB,CAAE,EAAE,CAAE,IAAI9qC,AC3hFzB,CD2hF0B,EC3hFvB,CAAC,CAAC;EACrB,ID0hF4Ckd,AC1hFtCg9H,ED0hFwC,CAAE,EAAE,CAAE,IAAIl6I,CAAC,QC1hFhC,GAAG,IAAI42H,OAAO,CAAC,CAAC;EAEzC,ID0hFC,KC1hFQujB,ED0hFD,IAAI,WC1hFcA,CAAEnnI,KAAK,EAAG;ID4hFpC,AC1hFC,IAAMslB,QAAQ,GAAGtlB,KAAK,CAACC,MAAM;ED0hF7B,ECxhFA,IAAKqlB,QAAQ,CAACzlB,KAAK,KAAK,IAAI,EAAG;IDwhF/BnO,ECthFCi8C,CDshFD,SCthFW,CAACnX,MAAM,CAAElR,QAAQ,CAACzlB,KAAM,CAAC;IDshFpCtU,ACphFA,KDohFA,EAED,SAAA0gB,WAAWA,CAAA,EAAG;ICphFb,EDshFA,GCthFM,CDshFA/B,EAAE,CCthFIja,EDshFD,ECthFK,EDshFD,CAAC6W,CCthFIwe,ODshFI,CCthFI,CAACqoB,UAAU,EAAG;MDwhF1C,ACthFCA,IDshFKnkC,GAAG,GAAGU,ACthFD,CAACssB,CDshFE,CAAE,CAAC,CAAE,ECthFD,CAAElR,QAAQ,CAACqoB,UAAU,CAAE19C,IAAI,CAAG,CAAC;IAEjD,IDohFqBwZ,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;IClhFlCob,IDkhFoC5b,GAAG,CClhF/B,CAAC/J,CDkhFiCuK,EAAE,CAAE,CAAC,CAAE,aClhFrB,CAAE,SAAS,EAAEi9H,iBAAkB,CAAC;IAE5D,IDghFmD96G,GAAG,AChhF/CyL,GDghFkD5tB,EAAE,CAAE,EAAE,CAAE,CChhFhD,CAAEob,QAAQ,CAACuR,EAAE,CAAE;IAEhC,ED+gFA,EC/gFM7tB,ED+gFAW,GAAG,GAAGO,CC/gFG,CD+gFD,CAAE,CAAC,AC/gFCg9H,CD+gFC,kBC/gFkB,CAACzhI,GAAG,CAAE6f,QAAS,CAAC;IAErD,ID6gFqB1b,AC7gFhBZ,GD6gFmB,GAAGkB,EAAE,CAAE,AC7gFjB,CD6gFkB,CAAE,AC7gFjB;MAEhByjC,ED2gFmC9jC,GAAG,GAAGK,EAAE,AC3gFjC,CD2gFmC,AC3gFlCssB,CD2gFmC,CAAE,IC3gF/B,CAAExtB,SAAU,CAAC;MAC9Bk+H,ED0gFkD56G,GAAG,GAAGpiB,EAAE,CAAE,EAAE,CAAE,KC1gF7C,CAAC46G,MAAM,CAAEx/F,QAAS,CAAC;IAEvC,EDygFA,IAAMxb,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;ICvgFnB+tH,IDugFqBluH,GAAG,GAAGG,EAAE,CAAE,ACvgFlB,CDugFmB,ACvgFlBkxH,CDugFoB,sBCvgFG,CAAE91G,QAAS,CAAC;IAEjD,IDqgFoCtb,ACrgF/Bsb,GDqgFkC,GAAGpb,EAAE,ACrgF/B,CDqgFiC,ACrgFhCirF,EDqgFkC,CAAE,sBCrgFX,KAAK,IAAI,EAAG;MAElD,EDmgFmD5oE,GAAG,ECngF/CjH,CDmgFkDpb,EAAE,CAAE,EAAE,CAAE,CCngFlD,CAACyvB,iBAAiB;IAElC,EDkgFA,IAAMnN,GAAG,GAAGtiB,EAAE,CAAE,CAAC,CAAE;QAAEuiB,GAAG,GAAGviB,EAAE,CAAE,CAAC,CAAE;IChgFlC,IDggFoCwiB,GAAG,GAAGxiB,EAAE,CAAE,EAAE,CAAE;QAAEyiB,GAAG,GAAGziB,EAAE,CAAE,EAAE,CAAE;IC9/ElE8nD,IAAI,CAACo1E,MAAM,CAACtvG,UAAU,EAAG;EAE1B,ID8/EC;EC5/ED,ID6/EC,KC7/EQryB,GAAGA,CAAEif,MAAM,EAAEY,QAAQ,EAAG;IAEhC,IAAKwS,UAAU,CAAExS,QAAQ,CAACuR,EAAE,CAAE,KAAK,IAAI,EAAG,OAAOvR,QAAQ;IAEzDA,ED2/EA,MC3/EQ,CD4/EPkH,AC5/EQptB,GD4/EL,IACF,CAAEitB,GAAG,GAAGxiB,EC7/Ee,CD6/EZ,AC7/Ec,GD6/EXE,GAAG,GACdL,AC9/E+B,EAAEy9H,CD8/E9B,GAAG76G,GAAG,GAAGviB,GAAG,GACfsiB,CC//EmD,CAAC,CD+/EjD,GAAGziB,GAAG,GAAGI,GAAG,GACfP,GAAG,GAAG6iB,GAAG,GAAGtiB,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAG2iB,GAAG,GACf9iB,GAAG,GAAGI,GAAG,GAAG0iB,GAAG,CAClB,GACDE,GAAG,IACF,CAAEjjB,GAAG,GAAGK,GAAG,GAAG0iB,GAAG,GACd/iB,GAAG,GAAG8iB,GAAG,GAAGtiB,GAAG,GACfqiB,GAAG,GAAG1iB,GAAG,GAAGK,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAG4iB,GAAG,GACf7iB,GAAG,GAAG4iB,GAAG,GAAGxiB,GAAG,GACfuiB,GAAG,GAAGxiB,GAAG,GAAGC,GAAG,CAClB,GACD4iB,GAAG,IACF,CAAEljB,GAAG,GAAG8iB,GAAG,GAAGviB,GAAG,GACdP,GAAG,GAAGI,GAAG,GAAG2iB,GAAG,GACfF,GAAG,GAAG1iB,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAG4iB,GAAG,GACfF,GAAG,GAAGziB,GAAG,GAAGE,GAAG,GACfL,GAAG,GAAG6iB,GAAG,GAAGxiB,GAAG,CAClB,GACD6iB,GAAG,IACF,CAAEjjB,GAAG,GAAGE,GAAG,GAAGE,GAAG,GACdN,GAAG,GAAGK,GAAG,GAAGE,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGC,GAAG,CAClB;IAIH,AC7hFCguB,UAAU,CAAExS,QAAQ,CAACuR,EAAE,CAAE,GAAG,IAAI;ED6hFhC,EC3hFAm7B,IAAI,CAACo1E,MAAM,CAACtvG,UAAU,EAAG;ID2hFzBpmC,ACzhFA,GDyhFA,ICzhFO4zB,QAAQ;EAEhB,EDuhFC/5B,KAAA,EAED,SAAAihB,SAASA,CAAA,EAAG;ECvhFZ,IDyhFC,IAAMtC,CCzhFEwS,CDyhFA,GAAG,ECzhFGA,CAAE4I,CDyhFD,CAACxe,MCzhFQ,EDyhFA,ACzhFG;IAE3B,EDwhFA,ECxhFM4yH,EDwhFFjtH,GAAG,aCxhFiB,GAAG6Y,QAAQ,CAACqoB,UAAU;MD0hF9ClhC,GAAG,GAAGvC,EAAE,CAAE,CAAC,CAAE;ICxhFb,EDwhFeA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG;ICthF/C,EDuhFAA,GAAG,ACvhFG,GDuhFAvC,CCvhFMja,CDuhFJ,CAAE,CAAC,CAAE,ACvhFG,IAAIypI,kBAAkB,EAAG;MDuhF1BxvH,ACrhFdyjC,EDqhFgB,CAAE,CAAC,CAAE,GAAGzjC,EAAE,ACrhFhB,CDqhFkB,ACrhFjBwS,CDqhFkB,CAAE,ICrhFd,CAAEg9G,kBAAkB,CAAEzpI,IAAI,CAAE,EAAE4e,EAAE,CAACisH,YAAa,CAAC;IAEjE,EDmhFkC5wH,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG;ECjhFhD,IDkhFCA,GAAG,GAAGvC,EAAE,CAAE,CAAC,CAAE;EChhFd,IDghFgBA,EAAE,CAAE,CAAC,CAAE,AChhFdm9H,GDghFiBn9H,EAAE,CAAE,CAAC,CAAE,gBChhFAm9H,CAAE/hH,QAAQ,EAAG;IAE7C,ED8gFkCpb,EAAE,AC9gF9BgnC,CD8gFgC,CAAC,CAAE,GAAGzkC,CC9gF/B,ED8gFkC,CC9gF/B,EAAE;IAElB,ED8gFAA,EC9gFMgjD,CD8gFH,GAAGvlD,EAAE,CAAE,CAAC,CAAE,IC9gFM,GAAGob,QAAQ,CAACzlB,KAAK;IACpC,ED6gFeqK,EAAE,AC7gFXo9H,CD6gFa,CAAC,CAAE,GAAGp9H,EAAE,CAAE,EAAE,CAAE,IC7gFX,GAAGob,QAAQ,CAACqoB,UAAU,CAAC1d,QAAQ;IACrD,ED4gFmC/lB,EAAE,AC5gFjCyJ,CD4gFmC,EAAE,CAAE,GAAGlH,AC5gFnC,GD4gFsC,AC5gFnC,CAAC;IAEf,ED2gFAA,EC3gFKgjD,CD2gFF,GAAGvlD,EAAE,CAAE,CAAC,CAAE,IC3gFK,KAAK,IAAI,EAAG;MD2gFfA,ACzgFd,EDygFgB,CAAE,CAAC,ACzgFbhK,CDygFe,GAAGgK,CCzgFb,CDygFe,CAAE,CCzgFdulD,CDygFgB,CAAE,WCzgFL,CAACvvD,KAAK;MDygFCgK,ACxgFlCyJ,EDwgFoC,CAAE,EAAE,CAAE,CCxgFnC,EDwgFsClH,CCxgFnCgjD,EDwgFsC,WCxgFzB,CAAC97C,OAAO;MDygFhClH,ACvgFC,GDugFE,ECvgFI,CDugFDvC,EAAE,CAAE,ACvgFC1e,CAAC,CDugFA,CAAE,CCvgFC,CAAC,EAAEsB,CAAC,GAAGoT,KAAK,CAACrQ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,IAAI,CAAC,EAAG;MDugFpC0e,EAAE,ACrgFhB,CDqgFkB,EAAE,CAAE,ACrgFhBxe,CAAC,EDqgFkBwe,CCrgFfhK,CDqgFiB,CAAE,EAAE,CAAE,ACrgFlB,CAAE1U,CAAC,GAAG,CAAC,CAAE;MDqgFW0e,EAAE,ACpgFrC,CDogFuC,EAAE,CAAE,ACpgFrCrG,CAAC,EDogFuC4I,CCpgFpCvM,EDogFuC,GCpgFlC,CAAE1U,CAAC,GAAG,CAAC,CAAE;MDsgF1B,ECrgFE,IAAMI,CDqgFD,ACrgFE,GAAGsU,CDqgFD,ICrgFM,CAAE1U,CAAC,GAAG,CAAC,CAAE;IDugF3B,ICrgFG0lD,OAAO,CAAC1hD,IAAI,CAAE9D,CAAC,EAAEmY,CAAC,EAAEA,CAAC,EAAEjY,CAAC,EAAEA,CAAC,EAAEF,CAAE,CAAC;EDqgFlC,ICngFC;IDmgFDgG,ACjgFA,CAAC,EDigFD,ICjgFO,IAAK41I,gBAAgB,KAAK/nI,SAAS,EAAG;IDigF7ChU,EC//EC,GD+/ED,CC//EO2U,CDigFR,KCjgFa,GAAGonI,CDigFhBl4G,WAAWA,CAAE7tB,CAAC,EAAEtU,ACjgFgB,CDigFf,ACjgFgBiT,EDigFdiX,CAAC,EAAG,ACjgFe;MDmgFrC,AClgFCxD,IDkgFKzJ,EAAE,CClgFA,EDkgFG,CClgFAo9H,GDkgFI,CAACxgI,QAAQ,IClgFG,CAAC6M,OAAO;MDogFnC,AClgFC,IDkgFIpS,CAAC,AClgFC,CDkgFAof,GClgFIn1B,GAAC,GDkgFI,AClgFD,CAAC,CDkgFG,CClgFDsB,EAAC,GAAKoT,MAAK,CAACrQ,MAAM,GAAG,CAAC,GAAK,CAAC,EAAErE,GAAC,GAAGsB,EAAC,EAAEtB,GAAC,IAAI,CAAC,EAAG;QDogF/D0e,AClgFC,EDkgFC,CAAE,CClgFGxe,CDkgFD,CAAE,AClgFA,GDkgFG6V,AClgFA/V,CDkgFC,CAAC+V,CAAC,AClgFF,GAAG,CAAC;QDmgFhB2I,AClgFC,EDkgFC,CAAE,CClgFGrG,CDkgFD,CAAE,AClgFA,GDkgFGtC,AClgFA/V,CDkgFC,CAACyB,CAAC,AClgFF,GAAG,CAAC;QDmgFhBid,AClgFC,EDkgFC,CAAE,CClgFGte,CDkgFD,CAAE,AClgFA,GDkgFG2V,AClgFA/V,CDkgFC,CAAC2rB,CAAC,AClgFF,GAAG,CAAC;MDogFjB,CAAC,CClgFC+5B,KDkgFK,EClgFE,CAAC1hD,IAAI,CAAE9D,EAAC,EAAEmY,EAAC,EAAEA,EAAC,EAAEjY,EAAC,EAAEA,EAAC,EAAEF,EAAE,CAAC;MAEjC,EDkgFAwe,EAAE,CAAE,EAAE,CAAE,GAAG3I,CAAC;IChgFb,CAAC,GDigFA2I,EAAE,CAAE,ACjgFE,EDigFA,CAAE,GAAGjd,CAAC;MC//EZ,EDggFAid,EAAE,CAAE,EAAE,CAAE,GAAGiN,CAAC;IC9/Eb,EDggFA;IC9/EA,EDggFA,EChgFMnO,KDggFC,IAAI,AChgFI,GAAG,KAAM,IAAA6E,2BAAgB,EAAEqjC,OAAQ,CAAC,GAAG3E,gCAAqB,GAAGJ,gCAAqB,EAAI+E,OAAO,EAAE,CAAE,CAAC;IDkgFpH,ACjgFCloC,SAAS,CAAC2K,OAAO,GAAGA,OAAO;EDigF3B;IAAAjiB,AC//EA,GD+/EA;IAAAnG,KAAA,EAED,SAAA2gB,MAAMA,CAAA,EAAG;IC//ER,EDigFA;MACA,IAAMhC,EAAE,GAAG,IAAI,CAACpD,QAAQ;IChgFxB,IDkgFC0C,AClgFK+9H,GDkgFF,GAAGr9H,EAAE,CAAE,CAAC,CAAE,MClgFS,GAAGg9H,mBAAmB,CAACzhI,GAAG,CAAE6f,QAAS,CAAC;IAE7D,IDggFgB3b,AChgFX49H,GDggFc,GAAGr9H,EAAE,CAAE,CAAC,CAAE,MChgFP,EAAGyjC,UAAU,CAACnX,MAAM,CAAE+wG,iBAAkB,CAAC;QDggFhCz9H,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;IC9/E5C,ID8/E8CsiB,GAAG,GAAGtiB,EAAE,CAAE,CAAC,CAAE;QAC1DT,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;IC7/Edg9H,ID6/EgBt9H,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE,IC7/EV,CAACzF,GAAG,CAAE6gB,QAAQ,EAAEtc,SAAU,CAAC;EAE/C,MD2/EgCe,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;ECz/E7C,MDy/E+CuiB,GAAG,ACz/EzC+6G,GDy/E4Ct9H,EAAE,CAAE,CAAC,CAAE,aCz/E9Bs9H,CAAEliH,QAAQ,EAAG;IAE1C,IDw/EC5b,ACx/EK+9H,GDw/EF,GAAGv9H,EAAE,CAAE,CAAC,CAAE,KCx/EQ,GAAGg9H,mBAAmB,CAACzhI,GAAG,CAAE6f,QAAS,CAAC;IAE5D,IDs/EgBzb,ACt/EX49H,GDs/Ec,GAAGv9H,EAAE,CAAE,CAAC,CAAE,KCt/ER,EAAG;MAEvB,EDo/E8BF,ECp/ExBylD,CDo/E2B,GAAGvlD,EAAE,CAAE,EAAE,CAAE,GCp/EzB,GAAGob,QAAQ,CAACzlB,KAAK;MAEpC,EDk/E8C6sB,ECl/EzC+iC,CDk/E4C,GAAGvlD,EAAE,CAAE,EAAE,CAAE,GCl/E1C,KAAK,IAAI,EAAG;QDm/E9BmiB,ACj/EC,GDi/EE,GAAGniB,EAAE,CAAE,EAAE,CAAE;QAAEoiB,GAAG,GAAGpiB,EAAE,CAAE,EAAE,CAAE;QAAEqiB,AC/+E/B,GD++EkC,CC/+E7Bk7G,ED++EgCv9H,EAAE,CAAE,EAAE,CAAE,QC/+ExB,CAACyJ,OAAO,GAAG87C,aAAa,CAAC97C,OAAO,EAAG;QD++ETgZ,EC7+E9C06G,CD6+EiD,GAAGn9H,EAAE,CAAE,EAAE,CAAE,cC7+EpC,CAAEob,QAAS,CAAC;QD++EtCnZ,AC7+EC,GD6+EE,GAAGtC,GAAG,GAAG0iB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGtiB,GAAG,GAAGyiB,GAAG,GAAGH,GAAG,GAAGviB,GAAG,GAAG2iB,GAAG,GAAG9iB,GAAG,GAAG2iB,GAAG,GAAGG,GAAG,GAAG7iB,GAAG,GAAGE,GAAG,GAAG4iB,GAAG,GAAG/iB,GAAG,GAAGI,GAAG,GAAG2iB,GAAG;MC3+E/G,ED4+EAvgB,GAAG,GAAGigB,GAAG,GAAGriB,GAAG,GAAGyiB,GAAG,GAAG/iB,GAAG,GAAG6iB,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGtiB,GAAG,GAAG2iB,GAAG,GAAGjjB,GAAG,GAAG8iB,GAAG,GAAGG,GAAG,GAAGhjB,GAAG,GAAGK,GAAG,GAAG4iB,GAAG,GAAGljB,GAAG,GAAGO,GAAG,GAAG2iB,GAAG;IC1+EhH,CAAC,GD2+EAtgB,GAAG,AC3+EG,GD2+EA3C,GAAG,GAAG4iB,GAAG,GAAGG,GAAG,GAAGJ,GAAG,GAAGxiB,GAAG,GAAG4iB,GAAG,GAAGJ,GAAG,GAAGziB,GAAG,GAAG8iB,GAAG,GAAGjjB,GAAG,GAAG6iB,GAAG,GAAGI,GAAG,GAAGhjB,GAAG,GAAGE,GAAG,GAAG+iB,GAAG,GAAGljB,GAAG,GAAGI,GAAG,GAAG8iB,GAAG;MCz+E/G06G,ED0+EAh4G,GAAG,GAAGhD,GAAG,GAAGxiB,GAAG,GAAGE,GAAG,CC1+EG,CAAEub,CD0+EF5b,GAAG,GAAG4iB,CC1+EK,CAAC,CD0+EH,GAAGviB,GAAG,GAAGsiB,GAAG,GAAGziB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAG6iB,GAAG,GAAGtiB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAG2iB,GAAG,GAAG9iB,GAAG,GAAGI,GAAG,GAAG0iB,GAAG;ICx+EhH,ED0+EA,IAAMjgB,GAAG,GAAG9C,GAAG,GAAG2C,GAAG,GAAGxC,GAAG,GAAGyC,GAAG,GAAGtC,GAAG,GAAGuC,GAAG,GAAGmgB,GAAG,GAAG6C,GAAG;ICx+EzD,ED0+EA,IAAK/iB,CC1+EE46H,ED0+EC,KAAK,CAAC,EAAG,OAAO,EC1+EE,CAACzhI,CD0+EC,CAAChB,CC1+EC,CAAE6gB,CD0+EA,CAAE,CAAC,EAAE,CAAC,EAAE,AC1+EC,CD0+EA,AC1+EC,ED0+EC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;ECx+EnF,ID0+EC,IAAM/Y,MAAM,GAAG,CAAC,GAAGD,GAAG;ECx+EvB,ID0+ECpC,EAAE,CAAE,AC1+EE,CD0+ED,CAAE,GAAGiC,GAAG,GAAGI,MAAM;ICx+EtB9G,EDy+EAyE,CCz+EG,CDy+ED,CAAE,ACz+ECzE,CDy+EA,CAAE,CCz+EC,EDy+EE,CAAE6mB,GAAG,GAAGtiB,GAAG,GAAGwiB,GAAG,GAAG3iB,GAAG,GAAG0iB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGxiB,GAAG,GAAG4iB,GAAG,GAAG/iB,GAAG,GAAG4iB,GAAG,GAAGG,GAAG,GAAG7iB,GAAG,GAAGC,GAAG,GAAG6iB,GAAG,GAAGhjB,GAAG,GAAGK,GAAG,GAAG2iB,GAAG,IAAKpgB,MAAM;ICx+EhImQ,EDy+EAxS,EAAE,CAAE,CAAC,ACz+EC,CDy+EC,CCz+ECwS,EDy+EE,CAAE9S,GAAG,ACz+ED,GDy+EI2iB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGviB,GAAG,GAAGyiB,GAAG,GAAGF,GAAG,GAAGxiB,GAAG,GAAG2iB,GAAG,GAAG9iB,GAAG,GAAG4iB,GAAG,GAAGE,GAAG,GAAG7iB,GAAG,GAAGE,GAAG,GAAG6iB,GAAG,GAAGhjB,GAAG,GAAGI,GAAG,GAAG4iB,GAAG,IAAKpgB,MAAM;ICv+EhIi7H,EDw+EAt9H,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEL,GAAG,GAAGE,GAAG,CCx+EA,EDw+EGyiB,ACx+EDg7G,GDw+EI,GAAG59H,GAAG,GAAGI,GAAG,GAAGwiB,GAAG,GAAG3iB,GAAG,GAAGC,GAAG,GAAG2iB,GAAG,GAAG9iB,GAAG,GAAGK,GAAG,GAAGyiB,GAAG,GAAG7iB,GAAG,GAAGE,GAAG,GAAG4iB,GAAG,GAAG/iB,GAAG,GAAGI,GAAG,GAAG2iB,GAAG,IAAKngB,MAAM;ECt+EjI,CAAC,GDw+EArC,EAAE,CAAE,CAAC,CAAE,GAAGkC,GAAG,GAAGG,MAAM;ACt+ExB,MDu+EErC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAER,GAAG,GAAG6iB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGriB,GAAG,GAAGwiB,GAAG,GAAGH,GAAG,GAAGviB,GAAG,GAAG4iB,GAAG,GAAGljB,GAAG,GAAG+iB,GAAG,GAAGG,GAAG,GAAGhjB,GAAG,GAAGI,GAAG,GAAG6iB,GAAG,GAAGnjB,GAAG,GAAGQ,GAAG,GAAG2iB,GAAG,IAAKpgB,MAAM;ACr+ElI,MDs+EErC,EAAE,CAAE,ACt+EGw9H,CDs+EF,CAAE,GAAG,CAAEr7G,GAAG,GAAGtiB,GAAG,GAAGyiB,GAAG,GAAG/iB,ECt+EGi+H,CDs+EA,ACt+EE74H,EAAE,CDs+ED0d,CCt+EG2qB,EDs+EA,GAAG1qB,GAAG,ECt+EI,CDs+EDH,CCt+EG2lC,EDs+EA,ECt+EI,CDs+EDloD,CCt+EI,EDs+ED,GAAG2iB,GAAG,GAAGjjB,GAAG,GAAG+iB,GAAG,GAAGE,GAAG,GAAGhjB,GAAG,GAAGK,GAAG,GAAG6iB,GAAG,GAAGnjB,GAAG,GAAGO,GAAG,GAAG4iB,GAAG,IAAKpgB,MAAM;ECp+EjI,IDq+ECrC,ACr+EG0kG,EDq+ED,CAAE,CAAC,ACr+EE,CDq+EA,GAAG,CAAEnlG,GAAG,GAAGO,GAAG,GAAGwiB,GAAG,GAAG9iB,GAAG,GAAGK,GAAG,GAAGyiB,GAAG,GAAG9iB,GAAG,GAAGI,GAAG,GAAG2iB,GAAG,GAAGjjB,GAAG,GAAGQ,GAAG,GAAGyiB,GAAG,GAAGhjB,GAAG,GAAGK,GAAG,GAAG4iB,GAAG,GAAGljB,GAAG,GAAGO,GAAG,GAAG2iB,GAAG,IAAKngB,MAAM;ECn+EjI,IDq+ECrC,EAAE,CAAE,CAAC,CAAE,ACr+ECsxH,GDq+EEnvH,GAAG,CCr+EEmvH,CAAEjwI,CDq+EDghB,ICr+EM,EDq+EA,ACr+EG;IAEzBqiG,EDo+EA1kG,EAAE,ACp+EE,CDo+EA,CAAC,CAAE,ACp+EA3e,GDo+EG,CAAE8gC,CCp+EA,EDo+EG,GAAGxiB,GAAG,GAAG2iB,GAAG,GAAG9iB,GAAG,GAAG4iB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAG1iB,GAAG,GAAG+iB,GAAG,GAAGljB,GAAG,GAAG8iB,GAAG,GAAGI,GAAG,GAAGhjB,GAAG,GAAGC,GAAG,GAAGgjB,GAAG,GAAGnjB,GAAG,GAAGK,GAAG,GAAG8iB,GAAG,IAAKpgB,MAAM;ECl+EjI,IDm+ECrC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAET,GAAG,GAAG6iB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGziB,GAAG,GAAG4iB,GAAG,GAAGH,GAAG,GAAG1iB,GAAG,GAAG8iB,GAAG,GAAGjjB,GAAG,GAAG8iB,GAAG,GAAGG,GAAG,GAAGhjB,GAAG,GAAGE,GAAG,GAAGgjB,GAAG,GAAGnjB,GAAG,GAAGI,GAAG,GAAG+iB,GAAG,IAAKpgB,MAAM;ECj+ElI,IDk+ECrC,ACl+EGxd,EDk+ED,CAAE,CCl+EG,CDk+ED,CAAE,ACl+EC4lE,GDk+EE,CAAE5oD,GAAG,GAAGE,GAAG,ECl+EE,CDk+EC4iB,GAAG,GAAG/iB,GAAG,GAAGI,GAAG,GAAG2iB,GAAG,GAAG9iB,GAAG,GAAGC,GAAG,GAAG8iB,GAAG,GAAGjjB,GAAG,GAAGK,GAAG,GAAG4iB,GAAG,GAAGhjB,GAAG,GAAGE,GAAG,GAAG+iB,GAAG,GAAGljB,GAAG,GAAGI,GAAG,GAAG8iB,GAAG,IAAKngB,MAAM;ECh+ElI,IDk+ECrC,EAAE,CAAE,EAAE,ACl+EE+jC,CDk+EA,GAAG5e,GAAG,CCl+EE4e,CAAE1iD,CDk+EDghB,ICl+EM,EDk+EA,ACl+EG;IAE1B7f,EDi+EAwd,EAAE,ACj+EE,CDi+EA,EAAE,ACj+EC3e,CDi+EC,GAAG,CAAEme,ACj+ED,CAAChd,EDi+EG,ECj+EC,CDi+EE4/B,GAAG,GAAGxiB,GAAG,GAAGuiB,GAAG,GAAGxiB,GAAG,GAAGC,GAAG,GAAGuiB,GAAG,GAAG1iB,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAG8iB,GAAG,GAAGtiB,GAAG,GAAGN,GAAG,GAAGC,GAAG,GAAG4iB,GAAG,GAAG/iB,GAAG,GAAGK,GAAG,GAAG0iB,GAAG,IAAKhgB,MAAM;ICh+EjI+lD,EDi+EApoD,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEmiB,GAAG,ACj+ED,GDi+EIziB,ACj+EDre,GDi+EI,ECj+EC,CDi+EEue,ACj+EDwoD,GDi+EI,GAAG7oD,GAAG,GAAG6iB,GAAG,ACj+ED,GDi+EIxiB,GAAG,GAAGuiB,GAAG,GAAG1iB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAG8iB,GAAG,GAAGviB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAG4iB,GAAG,GAAG/iB,GAAG,GAAGI,GAAG,GAAG2iB,GAAG,IAAKhgB,MAAM;EC/9ElI,IDg+ECrC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAET,GAAG,GAAGI,GAAG,GAAGC,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGK,GAAG,GAAGE,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAGI,GAAG,GAAGI,GAAG,IAAKuC,MAAM;EC99ElI,IDg+EC,KCh+EQsvC,EDg+ED,IAAI,ACh+EGA,CAAE7Q,KAAK,EAAEjxB,KAAK,EAAG;IDk+EhC,ACh+EClL,EAAE,CAAC84H,YAAY,CAAE/4B,IAAI,EAAE70F,KAAK,EAAErtB,IAAI,EAAEs+C,KAAK,GAAGsnB,eAAgB,CAAC;EDg+E7D,EC99EAN,IAAI,CAACt1C,MAAM,CAAE3C,KAAK,EAAE60F,IAAI,EAAE,CAAE,CAAC;EAE9B,ED49ECl9G,GAAA;EC19ED,ED09ECnG,KAAA,EAED,AC59ESmwI,SD49ETruH,KAAKA,CAAE9f,AC59EiBmuI,CD49EhB,AC59EkB1wF,ED49Ef,GC59EoB,EAAEjxB,KAAK,EAAE4hH,SAAS,EAAG;IAEnD,ED49EA,EC59EKA,ED49ECzxH,EAAE,GAAG,EC59EG,ED49EC,CAACpD,EC59EG,CAAC,EAAG,GD49EC;IC19ExB+H,ED29EA,AC39EE,CAAC+4H,GD29EGrmI,CAAC,GAAGhU,CAAC,CAACgU,CAAC,WC39EW,CAAEqtG,IAAI,EAAE70F,KAAK,EAAErtB,IAAI,EAAEs+C,KAAK,GAAGsnB,eAAe,EAAEqpE,SAAU,CAAC;IAEjF3pE,IDy9Ee/kE,ACz9EX,CDy9EY,ACz9EXyvB,GDy9EcnvB,CAAC,CAACN,CAAC,ACz9EX,CAAE8sB,KAAK,EAAE60F,IAAI,EAAE+sB,SAAU,CAAC;EAEtC,MDu9EyBxkH,CAAC,GAAG5pB,CAAC,CAAC4pB,CAAC;ECr9EhC,IDu9ECjN,EAAE,CAAE,CAAC,CAAE,ACv9EC2xH,IDu9EGt6H,CAAC,UCv9EWs6H,CAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAG;IAErD,EDq9Ec9xH,EAAE,ACr9EX8xH,CDq9Ea,CAAC,CAAE,IAAI/uI,CAAC,CCr9EZ,KAAK,CAAC,EAAG;IAEvB,EDm9E4Bid,EAAE,ACn9ExB+xH,CDm9E0B,CAAC,CAAE,IAAI9kH,CAAC,CCn9EzB,GAAG+/B,UAAU,CAACzxC,GAAG,CAAE,kBAAmB,CAAC;IACtDw2H,EDm9EA/xH,EAAE,CAAE,CAAC,CAAE,ECn9EE,CAAC29H,CDm9ECtmI,CAAC,oBCn9EoB,CAAEqtG,IAAI,EAAEmtB,MAAM,EAAE,CAAC,EAAErvI,IAAI,EAAEovI,MAAM,EAAE,CAAC,EAAEE,SAAU,CAAC;IAE/E,EDi9Ec9xH,EAAE,ACj9EZiyH,CDi9Ec,CAAC,CAAE,IAAIlvI,CAAC,ICj9EV,GAAG,CAAC;IACpB,EDg9E4Bid,EAAE,CAAE,ACh9E1B,CDg9E2B,CAAE,ECh9EzB1e,CAAC,CDg9E4B2rB,CAAC,CCh9E1B,CAAC,EAAE3rB,CAAC,GAAGwwI,SAAS,EAAExwI,CAAC,EAAG,EAAG;MDi9EvC0e,AC/8ECiyH,ED+8EC,CAAE,CAAC,CAAE,IAAI56H,CAAC,EC/8EC,IAAIw6H,MAAM,CAAEvwI,CAAC,CAAE;IAE5B,ED68Ec0e,EAAE,CAAE,CAAC,CAAE,IAAIjd,CAAC;IC38E1B+kE,ED28E4B9nD,EAAE,AC38E1B,CD28E4B,AC38E3BwS,ED28E6B,CAAE,GC38EzB,CD28E6BvF,AC38E3BglH,CD28E4B,WC38EhB,EAAEvtB,IAAI,EAAE,CAAE,CAAC;EAGrC,IDy8EC1kG,EAAE,CAAE,CAAC,CAAE,IAAI3I,CAAC;ECv8Eb,IDu8Ee2I,EAAE,CAAE,CAAC,CAAE,ACv8EbkyH,IDu8EiBnvI,CAAC,mBCv8EMmvI,CAAEN,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEL,SAAS,EAAG;IAEzE,EDq8E4BzxH,EAAE,ACr8EzB8xH,CDq8E2B,EAAE,CAAE,IAAI7kH,CAAC,ACr8E3B,KAAK,CAAC,EAAG;IAEvB,EDq8EA,ECr8EM8kH,KDq8EC,IAAI,ACr8EI,GAAG/kF,UAAU,CAACzxC,GAAG,CAAE,kBAAmB,CAAC;IDu8EvD,ACr8EC,IAAKw2H,SAAS,KAAK,IAAI,EAAG;EDq8E1B,ICn8EC,KAAM,IAAIzwI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGswI,MAAM,CAACjsI,MAAM,EAAErE,CAAC,EAAG,EAAG;IDm8E5CkG,GAAA,CCj8EEgqI,eAAe,CAAEI,MAAM,CAAEtwI,CAAC,CAAE,GAAG8mE,eAAe,EAAEypE,MAAM,CAAEvwI,CAAC,CAAE,EAAEmwI,SAAS,CAAEnwI,CAAC,CAAG,CAAC;IDi8E/ED,EC/7EC,GD+7ED,EAED,SAAAs9B,iBAAiBA,CAAA,EAAG;IC/7EnB,CAAC,CDi8ED,IAAM3e,CCj8EC,CDi8EC,GAAG,IAAI,CAACpD,QAAQ;MAExB,ACj8ECm1H,IDi8EK3sG,KCj8EI,CAACw4G,EDi8EG,GAAG59H,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,ACj8EP,CDi8ES,ACj8EP0kG,CDi8EQ,CAAE,ECj8EN,CDi8ES1kG,CCj8EP6xH,CDi8ES,CAAE,CAAC,CAAE,ECj8ER,CDi8EW7xH,CCj8ET,CDi8EW,ACj8EV,CDi8EY,CAAC,ACj8EXxd,CDi8Ea,GCj8ET,EAAEovI,MAAM,EAAE,CAAC,EAAEH,SAAS,EAAE,CAAC,EAAEK,SAAU,CAAC;MDk8EvG,ACh8EC,IDg8EKzsG,ACh8ED4sG,QDg8ES,GAAGjyH,CCh8EA,CDg8EE,CAAE,CAAC,ACh8EF,CDg8EI,ACh8EH,GDg8EMA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAC1E,ACh8EC,IDg8EKslB,CCh8EC,IAAIhkC,GDg8EG,CCh8EF,EDg8EK0e,CCh8EF,CDg8EI,ACh8EH,CDg8EK,CAAC,ACh8EJ1e,CDg8EM,GAAG0e,ACh8ER,EDg8EU,CAAE,ACh8ET8xH,CDg8EU,CAAE,GAAG9xH,EAAE,CAAE,CAAC,ACh8EX,CDg8Ea,CCh8EX1e,EDg8Ec0e,EAAE,ACh8Ef,CDg8EiB,CAAC,ACh8Ef,CDg8EiB,CCh8Ed,EDg8EiBA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAE5E,ECh8EEiyH,KDg8EK77H,IAAI,CAACmH,ECh8EE,EDg8EE,CAAEnH,CCh8EAy7H,GDg8EI,CAAC56H,ECh8EC,CDg8EE,ACh8EA3V,CDg8EE8jC,GCh8ED,CAAE,GAAGqsG,CDg8EI,EAAEpsG,MCh8EG,CAAE/jC,CDg8EG,EAAEgkC,CCh8EJ,CAAE,MDg8EW,CAAE,CAAC;IAE7D,ECh8EE;EDg8ED,IC97ECwiC,IAAI,CAACt1C,MAAM,CAAEy/G,YAAY,EAAEvtB,IAAI,EAAE,CAAE,CAAC;ID87ErCl9G,AC57EA,GD47EA;EC17ED,ED07ECnG,KAAA,EAED,SAAAoiB,eAAeA,CAAEpM,CAAC,EAAEtU,CAAC,EAAEkqB,CAAC,EAAG;MAE1B,IAAK5V,CAAC,CAACof,SAAS,EAAG;EC57EpB,MD87EE,IAAI,CAAClc,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAElD,CAAC,CAACA,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,CAAC,CAACtU,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEsU,CAAC,CAAC4V,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAEF,CAAC,MAAM;ECr8ER,IAAI,CAACqkH,CDu8EH,IAAI,CAAC/2H,CCv8EK,EDu8EF,CAEP,ACz8EY+2H,CDy8EX,EAAE,CAAC,EAAE,CAAC,ACz8EY,EDy8EVj6H,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEtU,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEkqB,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;EC78EH,ID+8EC,AC/8EG,CAAC82B,QAAQ,GAAGA,QAAQ;EACxB,IDg9EC,ACh9EG,CAAC4N,MDg9EG,ACh9EG,GAAGA,CDg9EF,KCh9EQ;EACpB,EDi9EA,ECj9EI,CAAC6/E,eAAe,GAAGA,eAAe;EDi9ErC,ACh9ED,IAAI,CAACG,eAAe,GAAGA,eAAe;EACtC,ED+8ECnqI,EC/8EG,CD+8EH,AC/8EI0qI,wBAAwB,GAAGA,wBAAwB;AAEzD,ID68EE7wI,KAAA,EAED,SAAAkkC,aAAaA,CAAE1nB,KAAK,EAAG;AC78ExB,MD+8EE,GC/8EOggI,CD+8EDn8I,CAAC,GAAG0U,IAAI,AC/8EEynI,CD+8EDhkI,AC/8EG8K,EAAE,CD+8EF,CAAE9G,AC/8EG,KD+8EG,CAAC;EC78E5B,IAAMq/H,ED68EwBp6I,CAAC,GAAGsT,AC78EtB,GAAG,CD68EuB,CAAC0D,GAAG,CAAE+D,KAAM,CAAC;IC58ElD+vB,ED88EA,IAAI,CAACrzB,GAAG,AC98EE,CDg9ET,CAAC,ACh9EU,CAAC,CDg9ET,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE7Y,CAAC,EAAE,CAAEoB,CAAC,EAAE,CAAC,EACZ,CAAC,EAAEA,CAAC,EAAEpB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;ICp9EDgrB,EDs9EA,MCt9EQ,CDs9ED,CCt9EG,GDs9EC;ECr9EZ,CAAC,CDu9ED;EAAC,ACr9ED,IAAMilC,MAAM,GAAG;IDq9EdnqD,ACp9EA8sD,GDo9EA,ECp9EK,EAAE,CAAC;IDo9ERjzD,ACn9EAy8I,KDm9EA,ACn9EK,EDq9EN,ACr9EQ,CAAC,QDq9ETt4G,aAAaA,CAAE3nB,KAAK,EAAG;ICp9EtB6gE,EDs9EA,IAAMh9E,CAAC,ECt9EE,CDs9EC0U,CCt9EC,CAAC,EDs9EE,CAACyD,GAAG,CAAEgE,KAAM,CAAC;ICr9E3Bsc,IDq9E6Br3B,CAAC,CCr9ExB,EDq9E2BsT,ACr9EzB,CAAC,GDq9E4B,CAAC0D,GAAG,CAAE+D,KAAM,CAAC;ICp9ElDkgI,EDs9EA,GCt9EK,CDs9ED,CAACxjI,ACt9EE,GDs9EC,CAEN7Y,CAAC,EAAE,CAAC,EAAEoB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAEA,CAAC,EAAE,CAAC,EAAEpB,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEX,CAAC;EC59EF,CAAC,GD89EA,OAAO,IAAI;EC59EZ,ED89EA,OC99ES8wB,MAAMA,CAAE3C,KAAK,EAAE60F,IAAI,EAAExZ,aAAa,EAAG;ED89E7C,EC59EAv5C,MAAM,CAACmsF,KAAK,EAAG;ID49Eft2I,AC19EA,GD09EA,KC19ESk9G,IAAI;ID09EbrjH,ECx9EC,GDw9ED,EAED,AC19EOsjB,EAAE,CAACq5H,MD09EVv4G,GC19EmB,UD09ENA,CAAE5nB,KAAK,EAAG;MAEtB,EC39EE8zC,ED29EIjwD,CAAC,GAAG0U,AC39EF,CAACsoE,GD29EK,CAAC7kE,GAAG,CAAEgE,CC39EF,ID29EQ,AC39EJqtF,CD29EK,YC39EQ,IAAKr7E,KAAK,GAAG,CAAC,CAAE;QD29EtB/sB,AC19E3B,CD09E4B,GAAGsT,IAAI,CAAC0D,GAAG,CAAE+D,KAAM,CAAC;MAElD,AC19EC,ID09EG,CAACtD,AC19ECoK,EAAE,CD09EA,AC19ECs5H,CD49ERv8I,CAAC,EAAE,CAAEoB,AC59EQ,CD49EP,EAAE,CAAC,EAAE,CAAC,EACZA,CAAC,EAAEpB,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,ECl+EEiwD,KDk+EK,CCl+EC,CAACosF,EDk+EE,GCl+EG,IAAI7yC,aAAa,IAAKr7E,KAAK,GAAG,CAAC,CAAE;IDo+EhD,ICn+EG;EDm+EF,ICj+EC,KAAKlL,EAAE,CAACu5H,UAAU;IDi+EnB12I,GAAA,CCh+EEmqD,MAAM,CAACosF,KAAK,IAAI7yC,aAAa,IAAKr7E,KAAK,GAAG,CAAC,CAAE;IDg+E/CxuB,IC/9EE,CD+9EF,EAED,SAAAqkC,gBAAgBA,CAAE3S,IAAI,EAAEtV,KAAK,EAAG;MAE/B,ACj+EC,KAAKkH,EAAE,CAACw5H,SAAS;QAChBxsF,MAAM,CAACosF,KAAK,IAAI7yC,aAAa,GAAGr7E,KAAK;MDk+EvC,ECj+EE,EDi+EInuB,CAAC,GAAG0U,IAAI,CAACyD,GAAG,CAAE4D,KAAM,CAAC;MAC3B,ACh+EC,IDg+EK3a,CAAC,ACh+ED6hB,EAAE,CDg+EEvO,ACh+EDgoI,IDg+EK,CAACtkI,CCh+EA,EDg+EG,CAAE2D,KAAM,CAAC;MAC3B,ECh+EEk0C,EDg+EI9wD,CAAC,GAAG,ACh+EF,CDg+EG,ACh+EFs5B,GDg+EKz4B,CAAC,ECh+EA,IAAIwpG,aAAa,GAAGr7E,KAAK;MDi+ExC,ECh+EE,EDg+EIxY,CAAC,GAAG0b,IAAI,CAAC1b,CAAC;MC99Ef,ED89EiBtU,CAAC,GAAGgwB,IAAI,CAAChwB,CAAC;QAAEkqB,AC79E5BzS,CD69E6B,GAAGuY,GC79EzB,CD69E6B,AC79E5BqZ,CD69E6Bnf,CAAC,GC79EzB,CAAE,qCAAqC,EAAEy3F,IAAK,CAAC;MD89E9D,EC79EE,ED69EI9hG,EAAE,GAAG/hB,CAAC,GAAGwW,CAAC;IC39EhB,ID29EkBwL,EAAE,GAAGhiB,CAAC,GAAGkC,CAAC;ECz9E7B,ID29EC,IAAI,CAACwX,GAAG,CAEPqI,EAAE,GAAGvL,CAAC,GAAG3V,CAAC,EAAEkhB,EAAE,GAAG7f,CAAC,GAAGD,CAAC,GAAGmqB,CAAC,EAAErK,EAAE,GAAGqK,CAAC,GAAGnqB,CAAC,GAAGC,CAAC,EAAE,CAAC,EAC7C6f,EAAE,GAAG7f,CAAC,GAAGD,CAAC,GAAGmqB,CAAC,EAAEpK,EAAE,GAAG9f,CAAC,GAAGrB,CAAC,EAAEmhB,EAAE,GAAGoK,CAAC,GAAGnqB,CAAC,GAAGuU,CAAC,EAAE,CAAC,EAC7CuL,EAAE,GAAGqK,CAAC,GAAGnqB,CAAC,GAAGC,CAAC,EAAE8f,EAAE,GAAGoK,CAAC,GAAGnqB,CAAC,GAAGuU,CAAC,EAAExW,CAAC,GAAGosB,CAAC,GAAGA,CAAC,GAAGvrB,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;ECh+EF,IDk+EC,KCl+EQ+D,EDk+ED,GCl+EMA,CDk+EF,ACl+EE,EAAG;IDo+EjB,ACl+ECksD,MAAM,CAACmsF,KAAK,GAAG,CAAC;EDk+EhB,ECj+EAnsF,MAAM,CAAC+sB,SAAS,GAAG,CAAC;IDi+EpBl3E,ACh+EAmqD,GDg+EA,GCh+EM,CAACx3B,MAAM,GAAG,CAAC;IDg+EjB94B,AC/9EAswD,KD+9EA,CC/9EM,CDi+EP,ACj+EQosF,KAAK,GAAG,CDi+EhB16H,ACj+EiB,SDi+ERA,CAAEhM,CAAC,EAAEtU,CAAC,EAAEkqB,CAAC,EAAG;EC/9ErB,IDi+EC,IAAI,CAAC1S,GAAG,CAEPlD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEtU,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAEkqB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;ECt+EF,IDw+EC,GCx+EM,IDw+EC,IAAI;IAEZ,ACz+ECiwH,MAAM,EAAEA,MAAM;EDy+Ed,ECx+EAvrF,MAAM,EAAEA,MAAM;IDw+EdnqD,ACv+EA62I,GDu+EA,KCv+EQ,EAAE,IAAI;IDu+Edh9I,ACt+EAi9I,KDs+EA,EAED,ECx+EU,EAAE,IAAI,CDw+EhB34G,SAASA,CAAEpX,EAAE,EAAEC,EAAE,EAAEoX,EAAE,EAAEnX,EAAE,EAAEoX,EAAE,EAAEC,EAAE,EAAG;ICv+EnCrgC,EDy+EA,GCz+EK,CDy+ED,CAAC8U,ACz+EE9U,GDy+EC,CAEP,CAAC,AC3+EU,ED2+ERmgC,EAAE,EAAEC,EAAE,EAAE,CAAC,EACZtX,EAAE,EAAE,CAAC,EAAEuX,EAAE,EAAE,CAAC,EACZtX,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;IC/+ED+D,EDi/EA,ICj/EM,EAAEA,CDi/ED,IAAI;ECh/EZ,CAAC,CDk/ED;ACh/ED,EDg/EE;AC9+EF,ID8+EEhrB,GAAA,EC9+EO+2I,iBAAiBA,CAAE55H,EAAE,EAAE65H,YAAY,EAAE9xH,QAAQ,EAAG;EAExD,ED4+ECrrB,EC5+EKo9I,GD4+EL,EAED,QC9+EmB,CD8+EnB16G,EC9+EsB,IAAI21F,CD8+EnB31F,CAAEgC,KC9+EwB,CAAC,CAAC,CD8+ElB,EAAE1T,UAAU,EAAElP,KAAK,EAAG;EC7+EvC,ID++EC,AC/+EKu7H,ID++EC1+H,CC/+EI,CD++EF,EC/+EK,CD++EF,GC/+EMgN,CD++EF,CAACpQ,QAAQ,QC/+EA,CAAC,CAAC;EAE3B,ID++EC,IAAMvF,CAAC,AC/+ECmb,GD++EEH,GC/+EIG,CAAEgI,MD++EI,AC/+EE,CD++EDxI,CC/+EGoJ,CD++ED,OC/+ES,EAAEizG,OAAO,EAAG;IAE5C,ID6+EyBtrI,AC7+EnBm7D,CD6+EoB,GAAG7rC,UAAU,CAACJ,CC7+ElB,CD6+EoB,EC7+EjBuI,MAAM,CAACguB,qBAAqB;QD6+ETv7B,CAAC,GAAGoF,UAAU,CAACH,EAAE;IC3+E7D,ID2+E+DhF,CAAC,GAAGmF,UAAU,CAACF,EAAE;MAChF,IAAM6T,EAAE,GAAG3uB,CAAC,GAAGA,CAAC;IC1+EhB,ID0+EkB4uB,AC1+EZ4e,ED0+Ec,GAAG9hD,CAAC,GAAGA,CAAC,IC1+ER,GAAGq4B,QAAQ,CAACsoB,eAAe,CAAC3d,QAAQ,IAAI3K,QAAQ,CAACsoB,eAAe,CAAC/qB,MAAM,IAAIyC,QAAQ,CAACsoB,eAAe,CAACz9B,KAAK;IAC7H,IDy+E8BigB,ACz+ExBy4G,EDy+E0B,GAAG1xH,CAAC,GAAGA,CAAC,OCz+EjB,GAAK43B,cAAc,KAAKxvC,SAAS,GAAKwvC,cAAc,CAACl/C,MAAM,GAAG,CAAC;IAEtF,EDw+EA,ECx+EIi5I,EDw+EExwH,EAAE,CCx+EC,EDw+EE/W,CAAC,ACx+EAonI,GDw+EGz4G,EAAE,QCx+EQ,CAACzqB,GAAG,CAAE6f,QAAS,CAAC;IAEzC,IDs+EmB7M,ACt+EdqwH,EDs+EgB,GAAGvnI,ACt+Ed,CDs+Ee,GAAG4uB,CCt+Eb5wB,CDs+Ee,QCt+EN,IAAIupI,KAAK,CAAC/uH,KAAK,KAAK8uH,iBAAiB,EAAG;MAE/D,EDo+E+BnwH,EAAE,ACp+E5BowH,GDo+E+BvnI,CAAC,CCp+E3B,EDo+E8B6uB,EAAE,CCp+E3B7wB,SAAS,EAAGupI,KAAK,CAAC9uH,OAAO,CAACjD,OAAO,CAAC,CAAC;MDq+EnD,ACn+EC,IDm+EKwB,ACn+ECwwH,EDm+EC,GAAG97I,CAAC,GAAGkjC,EAAE,KCn+EM,GAAG7K,QAAQ,CAACsoB,eAAe,CAAC3d,QAAQ,KAAK1wB,SAAS;MACxE,EDk+EkBoZ,EAAE,ACl+EdqwH,GDk+EiB/7I,CAAC,GAAGmjC,EAAE,MCl+ER,GAAG9K,QAAQ,CAACsoB,eAAe,CAAC/qB,MAAM,KAAKtjB,SAAS;MACrE,EDi+E+BiZ,EAAE,ACj+E3BywH,GDi+E8B9xH,CAAC,GAAGiZ,EAAE,KCj+EtB,GAAG9K,QAAQ,CAACsoB,eAAe,CAACz9B,KAAK,KAAK5Q,SAAS;MDk+EpE,ACh+EC,IDg+EK8wB,ACh+ECw1D,EDg+EC,GAAGzuE,CAAC,GAAG8Y,EAAE,CCh+EE,GAAG5K,QAAQ,CAACsoB,eAAe,CAAC3d,QAAQ,IAAI,EAAE;MAC5D,ED+9EkBK,EAAE,AC/9Ed44G,GD+9EiB9xH,CAAC,GAAG+Y,EAAE,GC/9EX,GAAG7K,QAAQ,CAACsoB,eAAe,CAAC/qB,MAAM,IAAI,EAAE;MAC1D,ED89E+B0N,EAAE,AC99E3B44G,GD89E8B/xH,CAAC,GAAGgZ,EAAE,EC99EzB,GAAG9K,QAAQ,CAACsoB,eAAe,CAACz9B,KAAK,IAAI,EAAE;MDg+EzD,AC99EC,ID89EKnD,AC99EDo8H,ED89EG,GAAG/7H,KAAK,CAAC9L,CAAC,GC99EE,GAAG,CAAC;MAEvB,ED49EmB0L,EAAE,AC59EhB87H,GD49EmB17H,KAAK,CAACpgB,CAAC,MC59EV,KAAK,IAAI,EAAGm8I,eAAe,GAAG,CAAC;MACpD,ED29EiC5lH,EAAE,AC39E9BwlH,GD29EiC37H,KAAK,CAAC8J,CAAC,KC39EzB,KAAK,IAAI,EAAGiyH,eAAe,GAAG,CAAC;MD69EpDl/H,AC59EC,ED49EC,CAAE,CAAC,AC59EC++H,CD49EC,GAAG,CAAE,CAAC,IAAK1wH,EAAE,EC59EA,CD49EGC,EAAE,CAAE,CC59EF,GD49EOxL,CC59EH,CD49EK,CC59EFo8H,eAAe,GAAG,CAAC;MD69EnDl/H,AC39EC,ED29EC,CAAE,CAAC,AC39EAuI,CD29EE,GAAG,CAAEgG,AC39EF,ED29EI,CC39ED6M,ED29EIiL,EAAE,IAAKvjB,AC39EH,CAAC2gC,CD29EI,SC39EM,CAAC1d,QAAQ,CAAClW,KAAK,GAAGqvH,eAAe;MD49EjEl/H,AC39EC,ED29EC,CAAE,CAAC,AC39EAwI,CD29EE,GAAG,CAAEgG,CC39ED,CD29EG,EC39EA,CD29EG4X,AC39EF,ED29EI,IAAKtjB,EAAE;MAC1B9C,AC19EC,ED09EC,CAAE,CAAC,AC19ECuI,CD09EC,GAAG,CAAC,AC19EA,GAAGi2H,YAAY,CAAC3K,cAAc,EAAG;MD49E5C7zH,EAAE,AC19EAwI,CD09EE,CAAC,CAAE,GAAG,AC19EF,CD09EI+F,EAAE,AC19EHnY,GD09EMiwB,CC19EF,CD09EI,AC19EHhtB,ID09EQ0J,AC19EJ,CAAEwF,CD09EI,IC19EC,GAAGi2H,YAAY,CAAC3K,cAAe,CAAC;MD29E3D7zH,EAAE,AC19EAuI,CD09EE,CAAC,CAAE,EC19EA,CD09EG,CAAE,CAAC,AC19EHi2H,ID09EQpwH,EAAE,GAAGE,EAAE,CAAE,AC19EL,CAACulH,GD09ES9wH,EAAE,SC19EG;MD29ErC/C,ACz9EC,EDy9EC,CAAE,CAAC,CAAE,GAAG,CAAEyO,EAAE,GAAG0X,EAAE,IAAKpjB,EAAE;MAC1B/C,ACx9EC,EDw9EC,CAAE,CAAC,ACx9EEgE,CDw9EA,GAAG,CAAC,CCx9EE,GAAG,IAAIrJ,YAAY,CAAE4N,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGm2H,iBAAkB,CAAC;MD09E1E3+H,ACx9EC,EDw9EC,CAAE,CAAC,ACx9EE8P,CDw9EA,GAAG,CAAEtB,EAAE,ACx9EA,GDw9EG4X,ACx9EA,EDw9EE,ECx9EE7V,EDw9EG+I,EAAE,uBCx9EW,CAAEtV,MAAM,EAAEuE,KAAK,EAAEC,MAAM,EAAEm2H,iBAAkB,CAAC;MDy9EjF3+H,ACx9EC8P,EDw9EC,CAAE,CAAC,CAAE,ECx9EC,CDw9EE,ACx9EDttB,CDw9EGisB,EAAE,CCx9ED,EDw9EI0X,CCx9EDt4B,CDw9EG,IAAKyrB,EAAE,aCx9ED;MDy9EzBtZ,ACx9EC8P,EDw9EC,CAAE,EAAE,CAAE,CCx9EA,CAACrD,CDw9EE,CAAE,CAAC,IAAK2B,EAAE,ECx9ED,CDw9EIC,EAAE,ACx9EH,CDw9EK,GCx9ED,CDw9EMiL,EAAE;MACnCtZ,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZA,ACz9EC,EDy9EC,CAAE,EAAE,CAAE,GAAG+lB,QAAQ,CAAC1uB,CAAC;MACrB2I,EAAE,CAAE,EAAE,CAAE,GAAG+lB,QAAQ,CAAChjC,CAAC;MACrBid,ACz9EC,EDy9EC,CAAE,CCz9EGm/H,CDy9ED,CAAE,GAAGp5G,QAAQ,CAAC9Y,CAAC,CCz9EE,GAAGiyH,eAAe,GAAG,CAAC;MD09E7Cl/H,ACx9EC,EDw9EC,CAAE,EAAE,ACx9EC,CDw9EC,GAAG,ACx9EA1e,CDw9EC,ACx9EA,GAAG,CAAC,EAAEA,CAAC,GAAGq9I,iBAAiB,EAAEr9I,CAAC,EAAG,EAAG;MD09EhD,ECx9EE,IAAMw6F,CDw9ED,IAAI,MCx9EQ,GAAGH,YAAY,CAAEr6F,CAAC,CAAE;ID09ExC,ICz9EG,IAAM89I,WAAW,GAAGJ,YAAY,CAAE19I,CAAC,CAAE;EDy9EvC,MCx9EE,IAAM+9I,UAAU,GAAGJ,WAAW,CAAE39I,CAAC,CAAE;IDw9ErCkG,GAAA,CCt9EE,IAAMmX,MAAM,GAAG4J,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGlnB,CAAC;IDs9EvCD,ICp9EE,CDo9EF,EAED,ECt9ES,IAAIw8B,CAAC,EDs9EdyI,CCt9EiB,CAAC,EAAEzI,CAAC,GAAGi+D,CDs9Efx1D,CAAEP,QAAQ,CCt9EgB,CDs9Ed1T,ACt9EexC,KAAK,EAAEgO,CAAC,EDs9Eb,ACt9EgB,EDs9Ed1a,ACt9EiB,KDs9EZ,EAAG;MAExC,IAAMnD,ACt9EH,EDs9EK,ECt9ECmnC,CDs9EE,IAAI,CAACvqC,ACt9ED,GAAGihB,CAAC,GAAGshH,CDs9EE,eCt9Ec;MDw9EtC,IAAIr8H,ACt9ED,EDs9EG,ECt9EE+7H,CDs9EC77G,KAAK,CAACzoB,GAAG,CAAEyF,EAAE,CAAE,CAAC,CAAE,ACt9EH,EDs9EKA,EAAE,CAAE,ACt9EJ,CDs9EK,CAAE,EAAEA,ACt9EL,EDs9EO,ACt9EJ,CDs9EM,CAAC,CAAG,CAAC,CAACra,MAAM,CAAC,CAAC;MACxD,IAAMod,EAAE,ACr9EJ27H,GDq9EO17G,ECr9EF,CAACnkB,EDq9EM,CAACtE,GAAG,CAAEyF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,ACr9ET,CAAE87E,CDq9ES97E,EAAE,CAAE,CAAC,CAAG,CAAC,CAACra,GCr9ER,EAAEk4B,CDq9EY,ACr9EV,CDq9EW,ACr9EV,CDq9EW;MAC1D,IAAMvE,EAAE,ACp9EJtV,GDo9EOgf,GCp9ED,CAAErkB,CDo9EI,CAACpE,GAAG,CAAEyF,ACp9EJ,EDo9EM,CAAE,ACp9ELmnC,CDo9EM,CAAE,EAAEnnC,EAAE,ACp9EN,CDo9EQ,CAAC,CAAE,ACp9ER,CAAC,CDo9ESA,ACp9EP,EDo9ES,CAAE,ACp9ER0+H,EDo9EU,CAAG,CAAC,CAAC/4I,ACp9EV,CAAC0R,CAAC,IDo9Ec,CAAC,CAAC;YCn9EvD2M,MAAM,CAAErF,MAAM,GAAGwoC,MAAM,GAAG,CAAC,CAAE,GAAGu3F,KAAK,CAAC37I,CAAC;MDq9E3C,MCp9EIihB,MAAM,CAAErF,MAAM,GAAGwoC,MAAM,GAAG,CAAC,CAAE,GAAGu3F,KAAK,CAACzxH,CAAC;MDq9E3C,IAAM7K,ECp9EF4B,CDo9EK,GAAG,ECp9EF,CAAErF,CDo9EI,CAACoD,ICp9EC,GAAGolC,IDo9EO,CAAC,CAAC,ACp9EH,GAAG,CAAC,CAAE,GAAG,CAAC;MDq9ErC,IAAK/kC,ACn9EF,GDm9EK,GAAG,CAAC,EAAGU,EAAE,GAAG,CAAEA,EAAE;MAExBijB,ICn9EG,IDm9EK,ACn9EA+4G,CDm9ECznI,CAAC,GAAG2I,EAAE,CAAE,EAAE,CAAE,ICn9EE,KAAK,IAAI,EAAG;MDo9EnC+lB,MCl9EI24G,EDk9EI,CAAC37I,CAAC,CCl9ED,CAAC8b,CDk9EGmB,EAAE,CAAE,EAAE,CAAE,YCl9EQ,CAAEo/H,WAAW,EAAEvhH,CAAE,CAAC;MDm9E/CkI,MCj9EI/hB,EDi9EI,CAACiJ,CAAC,ECj9EA,CDi9EGjN,ACj9EDrB,EDi9EG,CAAE,EAAE,CAAE,ACj9EH,GAAGwoC,MAAM,GAAG,CAAC,CAAE,GAAGu3F,KAAK,CAACrnI,CAAC;YACvC2M,MAAM,CAAErF,MAAM,GAAGwoC,MAAM,GAAG,CAAC,CAAE,GAAGu3F,KAAK,CAAC37I,CAAC;MDk9E3C,MCj9EIihB,MAAM,CAAErF,MAAM,GAAGwoC,MAAM,GAAG,CAAC,CAAE,GAAGu3F,KAAK,CAACzxH,CAAC;MDk9E3CsZ,KAAK,CAACxqB,ACj9EFiI,IDi9EM,CAAE,CCj9EF,CAAErF,EDi9EK,CAAC,GCj9EA,GAAGwoC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;MDm9ErC,IAAM3gB,ACj9EH,KDi9EQ,GAAG,CAAC,GAAG1jB,EAAE;MACpB,IAAM2jB,ACh9EH,IAAKs4G,CDg9EG,GAAG,CAAC,GAAGh8H,EAAE,ICh9EE,KAAK,IAAI,EAAG;MDi9ElC,IAAM2jB,EC/8EFg4G,GD+8EO,EC/8EF,CD+8EK,AC/8EJ7/H,CD+8EK,GAAGya,EAAE,aC/8ES,CAAE+lH,UAAU,EAAExhH,CAAE,CAAC;MDi9E9C0I,KAAK,CAAC3pB,AC/8EFoH,MAAM,CAAErF,CD+8EE,CAAE,CAAC,CAAE,EC/8ED,ED+8EK6nB,CC/8EF2gB,ID+8EO,EC/8ED,GAAG,CAAC,CAAE,GAAGu3F,KAAK,CAACrnI,CAAC;MDg9E3CkvB,KAAK,CAAC3pB,AC/8EFoH,MAAM,CAAErF,CD+8EE,CAAE,CAAC,CAAE,EC/8ED,ED+8EK6nB,CC/8EF2gB,ID+8EO,EC/8ED,GAAG,CAAC,CAAE,GAAGu3F,KAAK,CAAC37I,CAAC;MDg9E3CwjC,KAAK,CAAC3pB,AC/8EFoH,MAAM,CAAErF,CD+8EE,CAAE,CAAC,CAAE,EC/8ED,ED+8EK6nB,CC/8EF2gB,ID+8EO,EC/8ED,GAAG,EAAE,CAAE,GAAGu3F,KAAK,CAACzxH,CAAC;MDi9E5CsZ,KAAK,CAAC3pB,ACh9EFoH,MAAM,CAAErF,CDg9EE,CAAE,CAAC,CAAE,ECh9ED,EDg9EK8nB,CCh9EF0gB,IDg9EO,ECh9ED,GAAG,EAAE,CAAE,GAAKk4F,UAAU,CAACh/F,QAAQ,KAAK,CAAC,GAAKq+F,KAAK,CAACxxH,CAAC,GAAG,CAAC;MDi9EhFqZ,IC/8EG,CD+8EE,CAAC3pB,QAAQ,CAAE,CAAC,CAAE,IAAI6pB,KAAK;MAC5BF,EC98EE,GD88EG,CAAC3pB,QAAQ,CAAE,CAAC,CAAE,IAAI6pB,KAAK;MAE5BF,AC98EC,KD88EI,CAAC3pB,QAAQ,CAAE,CAAC,CAAE,IAAI8pB,KAAK;MAC5BH,AC78ECq4G,KD68EI,AC78EC,CD68EAhiI,EC78EG,MD68EK,CAAE,CAAC,CAAE,IAAI8pB,KAAK;MAC5BH,EC78EE1W,GD68EG,CAACjT,CC78EC,EAAE+hI,KD68EK,CAAE,EAAE,CAAE,IAAIj4G,IC78EE,CD68EG;MAE7BrU,EC98EEvC,OAAO,CD88EC,CAACmD,AC98EAnD,OAAO,cD88Ec,CAAEyW,KAAM,CAAC;MAEzCpjB,EC/8EEkX,GD+8EG,CAAChjB,AC/8EA,CD+8EC,CC/8EC,ED+8EEyL,EAAE,AC/8EAzH,kBAAO,CAAEkN,KAAK,EAAEC,MAAO;MDg9EnCrF,AC/8EC,CAAC,ID+8EG,CAACpgB,CAAC,GAAGggB,EAAE;MACZI,AC98ECs7H,KD88EI,CAACxxH,CAAC,GAAGqM,EAAE,CC98EE,CAAC/e,GAAG,CAAE6gB,QAAQ,EAAEwjH,KAAM,CAAC;MDg9ErC,AC98EC,OD88EM,EC98EGU,ED88EC,YC98EaA,CAAA,EAAG;IDg9E5B,IC98EGxvH,OAAO,CAACjD,OAAO,CAAC,CAAC;ED88EnB,MC58EE4xH,aAAa,CAAC7jB,MAAM,CAAEx/F,QAAS,CAAC;ID48ElC5zB,GAAA,CC18EE4zB,QAAQ,CAAC3lB,mBAAmB,CAAE,SAAS,EAAE6pI,cAAe,CAAC;ID08E3Dj+I,ECx8EC,GDw8ED,EAED,SAAAslC,eAAeA,CAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAA6C;MAAA,ACx8E/F7L,IDw8EoD8L,ICx8E5C,CAAChyB,WDw8E2D,GAAA+C,ECx8E3C,CAAE,MDw8EyC,CAAAtS,ECx8EhC,EAAE25I,EDw8E8B,QAAArnI,ICx8Ef,CAAC,IDw8Ec,QAAA5C,SAAA,GAAA4C,SAAA,MAAGrD,qBAAqB;ICt8E7F,EDw8EA,IAAMoL,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMvF,CAAC,GAAG,CAAC,GAAG2vB,IAAI,IAAKH,KAAK,GAAGD,IAAI,CAAE;ICv8ErC,EDw8EA,IAAM7jC,CAAC,GAAG,CAAC,GAAGikC,IAAI,IAAKF,GAAG,GAAGC,MAAM,CAAE;ICv8ErC,EDy8EA,ECz8EKvM,EDy8ECh5B,CAAC,GAAG,ACz8EC,CDy8ECqlC,ACz8EAtL,KDy8EK,GAAGqL,IAAI,GCz8EG,EDy8EIC,GCz8EC,EDy8EI,ECz8EA,CDy8EGD,GCz8ECpM,CDy8EG,CAAE,ICz8EC,CAACqjC,YAAY,KAAK,IAAI,EAAG;MD08EvE,ACx8ECwwE,IDw8EK10H,CAAC,ECx8EC,CDw8EE,ACx8ED4lI,CDw8EGz4G,GAAG,GAAGC,ICx8EE,CAAC,CDw8EG,ACx8EF,CAACq0E,IDw8EQt0E,GAAG,CCx8EH,CAAEniB,CDw8EIoiB,CCx8EF,EAAE,GDw8EM,CAAE,UCx8EM,EAAEvM,MAAM,CAACqjC,YAAY,EAAEnxC,QAAS,CAAC;IAEpF,CAAC,CDw8ED,IAAIhrB,CAAC,ACx8EE,EDw8EAyB,CAAC;MAER,ACx8EC,IDw8EI+jC,ACx8EAu3B,gBDw8EgB,ECx8EE,GDw8EG7pD,ACx8EA,CAAC,oBDw8EoB,EAAG;MCt8EjD,EDw8EAlT,CAAC,ECx8EK,CDw8EF,EAAIulC,CCx8EE3lC,EDw8EC,ECx8EA,CDw8EG0lC,ECx8EA,CAAC,CDw8EG,CAAE,ACx8EH1lC,IDw8EQ2lC,ACx8EP,GDw8EU,ACx8EPi3B,GDw8EUl3B,IAAI,CAAE,QCx8EA,CAACrhC,MAAM,EAAErE,IAAC,EAAG,EAAG;QDy8ErD6B,ACv8ECs7D,CDu8EA,GAAK,CAAE,CAAC,GAAGx3B,GAAG,GAAGD,GCv8EC,CDu8EG,GCv8ECk3B,CDu8EMj3B,GAAG,GAAGD,IAAI,CAAE,ICv8EF,CAAE1lC,IAAC,CAAE;MDy8E7C,ACv8EC,CDu8EA,MAAM,IAAK4lC,gBAAgB,KAAKryB,sBAAsB,EAAG;MCr8EzD,EDu8EAnT,CAAC,CCv8EKg9D,EDu8EF,CAAEz3B,GAAG,IAAKA,GAAG,GAAGD,ECv8EI,EDu8EA,CAAE,ACv8EC5L,QAAQ,CAACuoB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAG8a,kBAAkB;MAGrF4vE,EDq8EAlrI,CAAC,GAAK,CAAE8jC,ACr8ED,CAACs4G,EDq8EG,GAAGv4G,IAAI,ECr8EC,CAAC,CDq8EKC,ACr8EJ,CAACm0E,EDq8EM,GAAGp0E,GCr8ED,CDq8EK,ACr8EHriB,CDq8EK,CCr8EH,EAAE,0BAA0B,EAAE+5C,kBAAmB,CAAC;MDu8ErF,ACt8EC2vE,CDs8EA,MAAM,ACt8EC,CAACkR,WAAW,CAAC,CAAC,CAACnkC,QAAQ,CAAEz2F,EAAE,EAAE,uBAAuB,EAAEu5C,gBAAiB,CAAC;IAEhF,IDs8EC,MAAM,IAAIh6D,KAAK,CAAE,8DAA8D,GAAGgjC,gBAAiB,CAAC;ICp8ErGmnG,EDs8EA,KCt8EO,CAACkR,WAAW,CAAC,CAAC,CAACnkC,QAAQ,CAAEz2F,EAAE,EAAE,qBAAqB,EAAEi6H,KAAK,CAAC9uH,OAAO,EAAEpD,QAAS,CAAC;IACpF2hH,EDu8EAruH,EAAE,CAAE,CAAC,CAAE,ACv8EA,CAACu/H,EDu8EEloI,CAAC,QCv8EQ,CAAC,CAAC,CAAC+jG,QAAQ,CAAEz2F,EAAE,EAAE,yBAAyB,EAAEi6H,KAAK,CAACvkH,IAAK,CAAC;EAE5E,IDq8Ecra,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;ECn8EzB,IDm8E2BA,EAAE,CAAE,ACn8ExB,CDm8EyB,CAAE,GAAGxe,CAAC;ICj8ErCgxB,EDi8EwCxS,EAAE,CAAE,CCj8EtC,CDi8EwC,CAAE,ACj8ExCwS,GDi8E2C,CAAC;EC/7ErD,CAAC,GDg8EAxS,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;AC97Eb,MD87EeA,EAAE,CAAE,CAAC,CAAE,GAAGjd,CAAC;AC57E1B,MD47E4Bid,EAAE,CAAE,AC57EvBw/H,CD47EwB,CAAE,GAAG7lI,CAAC,MC57ElB6lI,CAAE76H,EAAE,EAAEipB,UAAU,EAAE6V,UAAU,EAAEqkB,IAAI,EAAG;EAEzD,ID07EyC9nD,AC17ErCy/H,ED07EuC,CAAE,EAAE,CAAE,GAAG,AC17EvC,CD07EwC,EC17ErC,IAAI/lB,OAAO,CAAC,CAAC;EAE7B,IDy7EC15G,EAAE,CAAE,CAAC,CAAE,ACz7ECwS,GDy7EE,CAAC,ECz7EGA,CAAEgI,MAAM,EAAG;IAEzB,EDu7Eaxa,EAAE,ACv7ETs0C,CDu7EW,CAAC,CAAE,ECv7ET,CDu7EY,CAAC,CCv7EVwT,IAAI,CAACnW,MAAM,CAAC2C,KAAK;IAE/B,EDq7E0Bt0C,EAAE,ACr7EtBob,CDq7EwB,EAAE,CAAE,GAAG15B,CAAC,ACr7ExB,GAAG84B,MAAM,CAACY,QAAQ;IAChC,EDo7EyCpb,EAAE,ACp7ErC0/H,CDo7EuC,EAAE,CAAE,GAAGv8I,CAAC,MCp7EjC,GAAGyqC,UAAU,CAACryB,GAAG,CAAEif,MAAM,EAAEY,QAAS,CAAC;MDq7EzDpb,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;ICn7EX,EDm7EaA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC;ICj7ExC,EDi7E0CA,EAAE,ACj7EvCy/H,CDi7EyC,EAAE,CAAE,GAAG,CAAC,CCj7ExC,CAAClkI,GAAG,CAAEmkI,cAAe,CAAC,KAAKprF,KAAK,EAAG;MDm7EjD,ACj7EC1mB,ODi7EM,GCj7EI,CDi7EA,ACj7ECpb,MAAM,CAAEktH,cAAe,CAAC;IDm7ErC,ECj7EED,SAAS,CAACllI,GAAG,CAAEmlI,cAAc,EAAEprF,KAAM,CAAC;EDi7EvC,EC/6EA;ID+6EA9sD,AC76EA,GD66EA,CC76EKgzB,MAAM,CAACe,eAAe,EAAG;ID66E9Bl6B,EC36EC,GD26ED,CC36EMm5B,CD66EP,KC76Ea,CAAChlB,GD66Ed2xB,aC76E8B,CAAE,ED66EhBA,CAAEP,IAAI,EAAEC,AC76EiB,EAAE84G,GD66Ed,EAAE74G,GAAG,EAAEC,MAAM,EAAEC,IAAI,AC76EkB,CAAC,CD66EjBC,GAAG,CC76EmB,CD66E0B,IC76ErB,EAAG;MD66EkB,EC36E/FzM,ED26EoD0M,IC36E9C,CAAChyB,WD26E6D,GAAA+C,EC36E7C,CAAE,MD26E2C,CAAAtS,EC36ElC,EAAEg6I,ED26EgC,QAAA1nI,SAAA,GC36ET,CAAC,ID26EQ5C,SAAA,GAAA4C,SAAA,MAAGrD,qBAAqB;MAE9F,AC36EC,ID26EKoL,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,AC16EC,ID06EKsQ,AC16EAuyH,CD06EC,GAAG,GAAG,EC16EE,CAAClkI,CD06EEsrB,EC16EC,CAAErM,ED06EE,GAAGoM,CC16EE,CAAC,ED06EC,CAAE,EC16EE0tB,KAAK,EAAG;MD26E1C,ECz6EE7Q,EDy6EI9gD,CAAC,GAAG,GAAG,CCz6ED,CAAC6vB,EDy6EKsU,GAAG,CCz6EF,CAAEtM,CDy6EGuM,KCz6EG,CDy6EG,ACz6EFkH,CDy6EI,aCz6EU,EAAEtpB,EAAE,CAACisH,YAAa,CAAC;MD06E7D,ECx6EE,EDw6EI1tI,CAAC,CCx6EAs3B,EDw6EG,GAAG,CCx6EA,CAAC0T,EDw6EIjH,GAAG,GAAGD,IAAI,CAAE,ACx6EH,KAAK,IAAI,EAAG;MD06EvC,IAAM3vB,ACx6EHosC,CDw6EI,GAAG,CAAE5c,KAAK,ACx6EJ,CAACrU,EDw6EMoU,IAAI,ACx6EJ,CAAEpM,GDw6EOtN,CAAC,ECx6EF,CAACghB,aAAa,EAAEvpB,EAAE,CAACisH,YAAa,CAAC;MDy6E7D,ECv6EE,EDu6EI7tI,CAAC,GAAG,CAAE+jC,GAAG,GAAGC,MAAM,IAAKpkC,CAAC;MAE9B,ECv6EE88I,EDu6EExyH,CAAC,EAAEma,IAAI,ACv6EA,CAAC7sB,GAAG,CAAEigB,MAAM,EAAE85B,KAAM,CAAC;MDy6EhC,ACv6EC,IDu6EIptB,gBAAgB,KAAKtyB,qBAAqB,EAAG;ICr6ElD,IDu6ECqY,CAAC,GAAG,CAAEga,GAAG,GAAGD,IAAI,IAAK9jC,CAAC;ICr6EvB,IDs6ECkkC,ACt6EI5M,IDs6EA,ECt6EM,CDs6EH,ACt6EI0W,CDs6EF,CAAC,GAAGhuC,CAAC,OCt6EU,EAAG;MDw6E5B,ACt6EC,CDs6EA,GCt6EMmuC,GDs6EA,IAAKnK,CCt6EG,GAAG1M,MAAM,CAAC6W,KDs6EG,GCt6EK,EDs6EAx8B,sBAAsB,EAAG;MCp6EzD,EDs6EAoY,CAAC,CCt6EIwyH,EDs6EDz4G,IAAI,GAAG9jC,ACt6EG,CDs6EF,ACt6EGqY,GAAG,CAAE81B,QAAS,CAAC,KAAKijB,KAAK,EAAG;QDu6E3CltB,ACr6ECiK,IDq6EG,GAAG,CAAE,ACr6EA,CDq6EC,ACr6EA7e,GDq6EGtvB,CAAC,ECr6EE,CAAC,CAAC;MDu6EnB,CAAC,CCr6ECu8I,KDq6EK,ICr6EI,CAACllI,GAAG,CAAE82B,QAAQ,EAAEijB,KAAM,CAAC;MAEjC,EDq6EA,MAAM,IAAIpwD,KAAK,CAAE,+DAA+D,GAAGgjC,gBAAiB,CAAC;ICn6EtG,EDq6EA;ICn6EA,EDq6EAlnB,EAAE,CAAE,CAAC,CAAE,ACr6EA0/H,GDq6EG,CAAC,GAAGxyH,CAAC,MCr6EM;EAEtB,IDm6EkBlN,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;ECj6E7B,IDi6EgCA,EAAE,CAAE,CAAC,CAAE,ACj6E9B6M,GDi6EiC,CAAC,GCj6E3BA,CAAA,EAAG;IAElB4yH,ED+5E8Cz/H,EAAE,CAAE,EAAE,CAAE,CC/5E7C,ED+5EgD,CAAE3I,AC/5E/C,CD+5EgD,GC/5E5CqiH,OAAO,CAAC,CAAC;EAE1B,ID85EC15G,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;EC55EZ,ID45EgBA,EAAE,CAAE,CAAC,CAAE,AC55Ed2/H,GD45EiB,CAAC,GAAGh9I,CAAC,cC55EAg9I,CAAE7pI,KAAK,EAAG;IAExC,ED05EgCkK,EAAE,AC15E5B4/H,CD05E8B,CAAC,CAAE,GAAG,CAAC,MC15ExB,GAAG9pI,KAAK,CAACC,MAAM;IAElC6pI,EDw5E+C5/H,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEjd,CAAC,ACx5EhD,CAAC0S,mBAAmB,CAAE,SAAS,EAAEkqI,sBAAuB,CAAC;IAEtEl8F,EDu5EAzjC,EAAE,CAAE,CAAC,CAAE,GAAG,ACv5EA,CDu5EC,ACv5EAssB,MAAM,CAAEszG,aAAa,CAAC3xG,cAAe,CAAC;IAEjD,EDq5EejuB,EAAE,ACr5EZ4/H,CDq5Ec,CAAC,CAAE,GAAG,CAAC,MCr5ER,CAAC1xG,aAAa,KAAK,IAAI,EAAGuV,UAAU,CAACnX,MAAM,CAAEszG,aAAa,CAAC1xG,aAAc,CAAC;EAE7F,IDm5E8BluB,EAAE,CAAE,EAAE,CAAE,GAAGonB,IAAI;ECj5E7C,IDi5E+CpnB,EAAE,CAAE,ACj5E5C,EDi5E8C,CAAE,GAAG,CAAEiN,CAAC;IC/4E5DuF,EDg5EAxS,EAAE,CAAE,CAAC,ACh5EC,CDg5EC,CCh5ECwS,EDg5EE,CAAC,GCh5EG;IACd3F,ED+4Ee7M,EAAE,CAAE,CAAC,CAAE,AC/4Ef,EAAE6M,CD+4EgB,CAAC;EC74E3B,CAAC,GD64E6B7M,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;AC34E3C,MD24E8CA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAExD,OAAO,IAAI;AC34Eb,ID64EC;AC54ED,ED44EE;AC34EF,ID24EExY,GAAA;AC14EF,ID04EEnG,KAAA,EAED,SAAAod,MAAMA,CAAEiF,MAAM,EAAG;AC34ElB,MD64EE,IAAM1D,EAAE,GAAG,IAAI,CAACpD,QAAQ;AC54E1B,MD64EE,IAAMsD,EAAE,GAAGwD,MAAM,CAAC9G,QAAQ;AC54E5B,MD84EE,KAAM,IAAItb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;AC74ElC,QD+4EG,IAAK0e,EAAE,CAAE1e,CAAC,CAAE,KAAK4e,EAAE,CAAE5e,CAAC,CAAE,EAAG,OAAO,KAAK;AC94E1C,MDg5EE;AC/4EF,MDi5EE,OAAO,IAAI;ACh5Eb,IDk5EC;ACj5ED,EDi5EE;ACh5EF,IDg5EEkG,GAAA;AC/4EF,ID+4EEnG,KAAA,EAED,SAAAqd,SAASA,CAAE1I,KAAK,EAAe;ACh5EhC,MDg5EgC,IAAb2I,MAAM,GAAA1G,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;AC/4E7B,MDi5EE,KAAM,IAAI3W,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;ACh5ElC,QDk5EG,IAAI,CAACsb,QAAQ,CAAEtb,CAAC,CAAE,GAAG0U,KAAK,CAAE1U,CAAC,GAAGqd,MAAM,CAAE;ACj5E3C,MDm5EE;ACl5EF,MDo5EE,OAAO,IAAI;ACn5Eb,IDq5EC;ACp5ED,EDo5EE;ACn5EF,IDm5EEnX,GAAA;ACl5EF,IDk5EEnG,KAAA,EAED,SAAAud,OAAOA,CAAA,EAA2B;ACn5EnC,MDm5EmC,IAAzB5I,KAAK,GAAAiC,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,EAAE;ACl5EpB,MDk5EoB,IAAE0G,MAAM,GAAA1G,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;ACj5EhC,MDm5EE,IAAM+H,EAAE,GAAG,IAAI,CAACpD,QAAQ;ACl5E1B,MDo5EE5G,KAAK,CAAE2I,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACn5E3B,MDo5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACn5E/B,MDo5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACn5E/B,MDo5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACn5E/B,MDq5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACp5E/B,MDq5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACp5E/B,MDq5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACp5E/B,MDq5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACp5E/B,MDs5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACr5E/B,MDs5EEhK,KAAK,CAAE2I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;ACr5E/B,MDs5EEhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;ACr5EjC,MDs5EEhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;ACr5EjC,MDu5EEhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;ACt5EjC,MDu5EEhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;ACt5EjC,MDu5EEhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;ACt5EjC,MDu5EEhK,KAAK,CAAE2I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAE/B,OAAOhK,KAAK;ACt5Ed,IDw5EC,ACx5EK6pI,YAAY,GAAG,aAAc,IAAIv1H,kBAAO,CAAC,CAAC;AAEhD,EDs5EE,ECt5EIw1H,kBAAkB,GAAG,aAAc,IAAIhyE,uBAAY,CAAE,CAAC,EAAE,CAAE,CAAC;ADs5E/D,ACp5EF,IAAMiyE,iBAAiB,GAAG,aAAc,IAAIxvH,2BAAgB,CAAC,CAAC;ADw5E9D,ACv5EA,IDu5EMyS,ACv5EAg9G,KDu5EK,GAAG,MCv5EM,GAAG,IDu5EK,IAAIxpH,KCv5EK,EDu5EE,CAAC,CAAC,ACv5EAlF,wBAAa,CAAC,CAAC;ADw5ExD,ACv5EA,IDu5EMiV,ACv5EA05G,KDu5EK,GAAG,QCv5EQ,GAAG,EDu5EG,IAAI/9G,OAAO,ACv5EA,CDu5EC,CAAC,ECv5EE2vB,sBAAW,CAAC,CAAC;ADw5ExD,IAAM7tB,KAAK,GAAG,aAAc,IAAIxN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAClD,ACv5EA,IDu5EMyN,IAAI,GAAG,aAAc,IAAIzN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACjD,IAAMxE,EAAE,GAAG,aAAc,IAAIwE,OAAO,CAAC,CAAC;AACtC,ACv5EA,IDu5EMvE,EAAE,GAAG,aAAc,IAAIuE,OAAO,CAAC,CAAC;AACtC,IAAMtE,EAAE,GAAG,aAAc,IAAIsE,OAAO,CAAC,CAAC;AAEtC,ACx5EA,IDw5EM6Q,ACx5EA64G,SDw5ES,GAAG,CCx5EC,GAAG,EAAE,ODw5EQ,IAAIh+G,OAAO,CAAC,CAAC;AAC7C,ACx5EA,IDw5EMoF,ACx5EA64G,aDw5Ea,ACx5EA,GDw5EG,ACx5EA,EAAE,WDw5EY,IAAIruH,UAAU,CAAC,CAAC;AAAC,IAE/CyV,KAAK,GAAAx/B,OAAA,CAAAw/B,KAAA;ACx5EX,ED05EC,SAAAA,MAAA,EAAgE;IAAA,IAAnDlwB,CAAC,GAAAY,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;ACx5EnB,IDw5EmB,ACx5EbmoI,IDw5Eer9I,CAAC,GAAAkV,CCx5EP,GAAG,IAAI0C,CDw5EA,CAAAhV,MAAA,ICx5EY,CAAE,EAAG,CDw5EjBsS,ACx5EkB,SDw5ElB,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;ACv5E1B,IDu5E0B,ACv5EpBooI,IDu5EsBpzH,CAAC,GAAAhV,CCv5Ed,GAAG,IAAI0C,CDu5EO,CAAAhV,MAAA,ICv5EK,CAAE,CAAE,CAAC,CDu5EVsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;ACt5EjC,IDs5EiC,ACt5E3BqoI,IDs5E6B1mI,KAAK,ACt5EzB,GDs5EyB3B,ACt5EtB,IAAI0C,KDs5EkB,CAAAhV,MAAA,ACt5EN,CAAE,CAAE,CAAC,KDs5ECsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAGsvB,KAAK,CAACC,aAAa;IAAAngC,eAAA,OAAAkgC,KAAA;ACp5E9D,IDs5EE,IAAI,CAACE,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACzV,EAAE,GAAG3a,CAAC;ACt5Eb,IDu5EE,IAAI,CAAC4a,ACv5EEsuH,EDu5EA,GAAGx9I,CAAC,CCv5EGw9I,CAAEvqI,KAAK,EAAEwqI,OAAO,EAAEC,SAAS,EAAG;EAE7C,EDs5EC,ECt5EKC,EDs5ED,CAACxuH,EAAE,GAAGjF,CAAC,ACt5EG,GAAGjX,KAAK,CAAE,CAAC,CAAE;EAE5B,EDq5EC,ECr5EI0qI,EDq5EA,CAACjuH,MAAM,ACr5EE,GDq5EC7Y,CCr5EG,CAAC,GDq5EC,CCr5EG8mI,SAAS,GAAG,CAAC,EAAG,OAAO1qI,KAAK;EDu5EnD,ACt5EA;EDs5EC,ACr5ED,ODq5ECvO,YAAA,CAAA8/B,KAAA;IAAA//B,GAAA;ECn5ED,EDm5EC+T,ECn5EKta,CDm5EL,ACn5EM,EDq5EP,CCr5EUu/I,OAAO,CDq5EjBjlI,ECr5EoBklI,EDq5EpB,EAAQ,KCr5EqB;EAC7B,IDs5EC,ACt5EG3/I,CAAC,GAAGo/I,GDs5EA,IAAI,CAACluH,EAAE,GCt5EM,CAAE/wB,CAAC,CAAE;EAE1B,EDs5EA,CAAC,CCt5EIH,CAAC,KAAKuU,SAAS,EAAG;IDs5EtBkF,ACp5EAzZ,CAAC,EDo5ED,CCp5EI,CDs5EL,GCt5ES6Z,MDs5ETJ,IAAOlZ,ECt5Ec,CAAEJ,CAAE,CDs5Eb,ACt5Ec,EDs5EX;ICr5Edi/I,EDu5EA,IAAI,CAACluH,EAAE,GAAG3wB,CCv5EG,CAAEJ,CAAC,CAAE,CDu5EH,ECv5EMH,CAAC;EAEvB,IDs5EC,IAAI,CAACsxB,iBAAiB,CAAC,CAAC;ECp5EzB,EDs5EA,ECt5EKouH,OAAO,KAAK,CAAC,EAAG;EDs5EpB,ECp5EAE,SAAS,CAAC9hI,OAAO,CAAE9d,CAAC,EAAE,CAAE,CAAC;IDo5EzB0G,ACl5EA,GDk5EA,ECl5EM,IAAIlG,CAAC,GAAG,CAAC,EAAEqd,MAAM,GAAG,CAAC,EAAErd,CAAC,KAAKk/I,OAAO,EAAE,EAAGl/I,CAAC,EAAG;IDk5EnDia,ECh5ECoD,CDg5ED,EAED,GCl5EQ,IAAI8hI,EDk5EZllI,IAAA,EAAQ,CCl5Ea;MDo5EpB,ACn5ECvF,KAAK,CAAE1U,CDm5ED,ACn5EE,CAAE,CAACsd,EDm5ED,CAACqT,EAAE,ECn5EK,CAAEnxB,CAAC,EAAE6d,MAAO,CAAC;IDq5EjC,ACn5EC,CDm5EA;ECj5ED,EDi5ECpE,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;ECj5Ef,IDm5EC,GCn5EMP,CDm5EF,ACn5EG,CDm5EFmxB,EAAE,GAAG5wB,KAAK;ACj5EjB,MDk5EE,IAAI,CAAC+wB,iBAAiB,CAAC,CAAC;ACh5E1B,IDk5EC,KCl5EQuuH,WAAWA,CAAEn/I,CAAC,EAAEmY,CAAC,EAAG;EDk5E3B,ACh5ED,IAAKnY,CAAC,CAACmE,MAAM,KAAKgU,CAAC,CAAChU,MAAM,EAAG,OAAO,KAAK;EAEzC,ED84EC6B,GAAA,AC94EK,IAAIlG,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGpB,CAAC,CAACmE,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;ID84E5Cia,AC54EA,GD44EA,CC54EK/Z,CD84EN,AC94EO,CAAEF,CAAC,CAAE,KAAKqY,CD84EjB4B,AC94EkB,CAAEja,CAAC,CAAE,CD84EvB,CC94E0B,CD84ElB,MC94EyB,KAAK;EAEtC,ID84EC,OAAO,IAAI,CAAC4wB,EAAE;EC54Ef,ED84EA,CAAC,IC94EM,IAAI;AAEZ,ID44EE3X,GAAA,EAED,SAAAA,IAAOlZ,KAAK,EAAG;AC54EhB,MD84EE,GC94EO8/C,CD84EH,CAACjvB,EAAE,GAAG7wB,EC94EM8/C,CAAE3/C,CAAC,CD84EJ,CC94EMmY,CAAC,EAAG;EAE1B,ID64EC,CC74EK,GD64ED,CAACyY,AC74EI9wB,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG+W,CAAC,CAAChU,ID64EA,CAAC,CAAC,AC74EI,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;ID+4E7C,AC74ECE,CAAC,CAAEF,CAAC,CAAE,GAAGqY,CAAC,CAAErY,CAAC,CAAE;ED64Ef,AC34ED;AAED,IDy4EEkG,GAAA;IAAA+T,GAAA,EAED,SAAAA,IAAA,EAAY;ACz4Eb,MD24EE,OAAO,IAAI,CAACkX,MAAM;IAEnB,CAAC;AC34EF,ID24EElY,GAAA,EAED,AC74EQqmI,SD64ERrmI,IAAWlZ,AC74EUu/I,CAAEl0H,ID64EP,EAAG,EC74EY,EAAEzrB,CAAC,EAAG;EAErC,ID64EC,AC74EGH,CAAC,GD64EA,AC74EGq/I,CD64EF1tH,MAAM,GAAGpxB,GC74EM,CAAEJ,CD64EH,AC74EI,CAAE;EAE1B,ID44EC,AC54EIH,CAAC,GD44ED,CAACsxB,CC54EK/c,SAAS,EAAG,KD44EA,CAAC,CAAC;IAEzB,AC54ECvU,CAAC,GAAG,IAAIia,UAAU,CAAE9Z,CAAE,CAAC;ED44EvB,EC34EAk/I,aAAa,CAAEl/I,CAAC,CAAE,GAAGH,CAAC;EAEvB,EDy4EC0G,GAAA;ECv4ED,EDu4ECnG,GCv4EK,EDu4EL,EAED,ACz4EUC,CAAC,GAAG,CAAC,EAAEA,CAAC,CDy4ElBiZ,GAAGA,CAAElD,ACz4EkBpW,CDy4EjB,ACz4EkB,EDy4EhB8B,ACz4EkB,CDy4EjB,CCz4EoBzB,CDy4ElB2rB,ACz4EmB,CDy4ElB,CCz4EqB,CDy4EG;ICv4EnCnsB,CAAC,CDu4EkC,ACv4EhCQ,CAAC,CAAE,EDu4EOsY,CCv4EJ8S,IDu4ES,GAAAzU,CCv4ED,CAAC4oI,ODu4EA,CAAAl7I,MAAA,KCv4EmB,CAAC,CAAC,CDu4ErBsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI,CAACwa,MAAM;ECr4EjC,IDu4EC,IAAI,CAACT,EAAE,GAAG3a,CAAC;ECr4EZ,IDs4EC,GCt4EMvW,CDs4EF,ACt4EG,CDs4EFmxB,EAAE,GAAGlvB,CAAC;ACp4Eb,MDq4EE,IAAI,CAACmvB,EAAE,GAAGjF,CAAC;MACX,IAAI,CAACwF,MAAM,GAAG7Y,KAAK;ACp4ErB,MDs4EE,IAAI,CAACwY,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;ACt4Eb,IDw4EC;ACv4ED,EDu4EE;IAAA5qB,GAAA;ACr4EF,IDq4EEnG,KAAA,EAED,SAAAya,KAAKA,CAAA,EAAG;MAEP,OAAO,IAAI,IAAI,CAAChW,WAAW,CAAE,IAAI,CAACksB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACO,MAAO,CAAC;ACv4EvE,IDy4EC,KCz4EQquH,WAAWA,CAAEn8H,EAAE,EAAEthB,CAAC,EAAG;EDy4E5B,ACv4ED,IAAMquC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,EDq4EClqC,ECr4EIkqC,CDq4EJ,ICr4ES,CAAE,CAAC,CAAE,KAAKruC,CAAC,EAAG;EAExBshB,EDm4ECtjB,ACn4EC,CAAC0/I,IDm4EF,EAED,GCr4EY,CAAE,IAAI,CDq4ElBhlI,ACr4EmBilI,IDq4EfjlI,ACr4EmB,CDq4EjBwW,CCr4EmBlvB,CAAE,CAAC,EDq4EjB,EAAG;ECn4EdquC,IDq4EC,CCr4EI,CAAE,CAAC,CDq4EH,ACr4EK,CDq4EJ1f,EAAE,ACr4EK3uB,CAAC,EDq4EHkvB,KAAK,CAACP,EAAE;ACn4EpB,MDo4EE,IAAI,CAACC,EAAE,GAAGM,KAAK,CAACN,EAAE;MAClB,IAAI,CAACC,EAAE,GAAGK,KAAK,CAACL,EAAE;ACn4EpB,MDo4EE,IAAI,CAACO,MAAM,GAAGF,KAAK,CAACE,MAAM;MAE1B,IAAI,CAACL,iBAAiB,CAAC,CAAC;ACp4E1B,MDs4EE,GCt4EO6uH,IDs4EA,IAAI,GCt4EOA,CAAEt8H,EAAE,EAAEthB,CAAC,EAAG;EAE7B,EDs4EA,ECt4EMquC,KAAK,GAAG,IAAI,CAACA,KAAK;EDs4EvB,ACp4ED,IAAKruC,CAAC,CAACgU,CAAC,KAAKhC,SAAS,EAAG;IDo4ExB7N,ACl4EA,GDk4EA,CCl4EKkqC,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACN,CAAC,EAAG;IDk4EhD1B,ECh4ECsjB,EAAE,CDg4EH,ACh4EIu8H,EDk4EL,OCl4Ec,CAAE,CDk4EhBjuH,GCl4EoB,CAAC+tH,IAAI,EAAE39I,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAE,CAAC,EDk4EhBkwB,CAAE9b,CAAC,EAAuC;MAAA,ACh4E7Du6B,IDg4EwB93B,CCh4EnB,CAAE,CAAC,CAAE,CDg4EmB,ECh4EhBvW,CDg4EgB4U,ACh4Ef,CAACZ,CAAC,ODg4Ea,CAAA1R,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI,CAACwa,MAAM;MAAA,AC/3E3Cif,ID+3E6Clf,CC/3ExC,CAAE,CAAC,CAAE,ED+3EyC,CC/3EtCnvB,CAAC,CD+3EqC4U,AC/3EpClV,CAAC,QD+3EmC,CAAA4C,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI;IC73E3D,ED+3EA;EC73ED,CAAC,MAAM;IAEN,ED63EA,EC73EK0oI,ED63EC3gI,EAAE,GAAG7I,CAAC,CAACyF,EC73EG,CAAE80B,KD63EG,AC73EE,EAAEruC,CAAE,CAAC,EAAG;IAE/BshB,ED43EA,AC53EE,CAACw8H,GD43EGxzH,GAAG,GAAG3N,CC53EC,CD43EC,AC53EC,CD43EC,CAAC,CAAE,CC53EA,CAACghI,IAAI,EAAE39I,CAAE,CAAC;IAE7B89C,ID03EqBvzB,GAAG,EC13Ef,CD03EkB5N,AC13EhB0xB,ED03EkB,CAAE,CAAC,CAAE,AC13ElB,EAAEruC,CAAE,CAAC;EAEtB,MDw3EqCwqB,GAAG,GAAG7N,EAAE,CAAE,CAAC,CAAE;ACt3EnD,MDu3EE,IAAM8N,GAAG,GAAG9N,EAAE,CAAE,CAAC,CAAE;ACr3ErB,QDq3EuB+N,CCr3EdqzH,EDq3EiB,GAAGphI,EAAE,CAAE,CAAC,CAAE,CCr3EhBohI,CAAEz8H,EAAE,EAAEthB,CAAC,EAAG;EAE7B,IAAMquC,EDm3E+B1jB,GAAG,ACn3E7B,GDm3EgChO,ACn3E7B,EDm3E+B,CAAE,CAAC,ACn3E9B,CDm3EgC,ACn3E/B0xB,KAAK;EAExB,IDk3EC,ACl3EIruC,CAAC,CAACgU,CAAC,CDk3ED4W,GAAG,CCl3EG5Y,EDk3EA2K,EAAE,CAAE,CAAC,CAAE,ECl3EE,EAAG;IAExB,IDg3EqBkO,ACh3EhBwjB,GDg3EmB,ECh3Ed,CDg3EiB1xB,ACh3Ef,CAAC,CDg3EgB,ACh3Ed,CDg3EgB,CAAC,CAAE,ECh3Ed3c,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACN,CAAC,IAAI2uC,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC4pB,CAAC,EAAG;MAErEtI,ED82EmCwJ,AC92EjC,CAACkzH,ED82EmC,GAAGrhI,EAAE,CAAE,CC92EjC,CD82EmC,AC92EjC,CD82EmC,GC92E/B,CAACghI,IAAI,EAAE39I,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC4pB,CAAE,CAAC;MDg3EzC,AC92ECykB,KAAK,CAAE,CAAC,CD82EA93B,AC92EE,GAAGvW,CAAC,CD82ED,AC92EEgU,CAAC;MAChBq6B,ED+2EA,GC/2EK,CAAE,CD+2EF,AC/2EG,CAAE,GAAGruC,CD+2EH,AC/2EI,CAACN,CAAC;MAChB2uC,IDg3EC,CCh3EI,CAAE,CAAC,CDg3EH,ACh3EK,CDg3EJzf,EAAE,ACh3EK5uB,CAAC,CAAC4pB,CDg3EJ7W,ACh3EK,IDg3ED,CAACsxB,IAAI,CAAE3wB,MAAK,CAAE8W,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IC92E7C,MDg3EE,IAAKzX,IAAI,CAAC8B,GAAG,CAAE2V,GAAI,CAAC,GAAG,SAAS,EAAG;EC92EtC,CAAC,MAAM,GDg3EH,CCh3EQxqB,CAAC,CAACvC,CDg3EN,ACh3EO,CDg3ENkxB,EAAE,ECh3ES3c,CDg3ENe,IAAI,CAACsH,GCh3EU,EDg3EL,ACh3EQ,CDg3EN,CAAEsQ,GAAG,EAAEG,GAAI,CAAC;IC92ErC,IAAKujB,ID+2EF,CC/2EO,CAAE,CAAC,CD+2EN,AC/2EQ,CD+2EPxf,EAAE,EC/2EU7uB,CD+2EP+S,AC/2EQ,CAACtV,CAAC,ED+2EN,CAAC4c,CC/2ESg0B,ID+2EJ,CAAE,AC/2EO,CD+2EL9jB,AC/2EO,CAAC,CAAE,CD+2EP,EAAED,EC/2EUtqB,CD+2EN,AC/2EO,CD+2EN,AC/2EOE,CAAC,IAAImuC,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACsW,CAAC,EAAG;MAErEgL,EAAE,CAAC08H,CD+2EF,CAAC,MAAM,CC/2EI,CAAE,IAAI,CAACL,IAAI,EAAE39I,CAAC,CAACvC,CAAC,EAAEuC,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACsW,CAAE,CAAC;MAExC+3B,KAAK,CD+2EH,AC/2EK,CAAC,CAAE,ED+2EJ,CAAC1f,AC/2EM3uB,CAAC,CD+2EL,AC/2EMvC,CAAC,ED+2EJsV,IAAI,CAACsH,KAAK,CAAEwQ,GAAG,EAAEH,GAAI,CAAC;MC92ElC2jB,KAAK,CD+2EH,AC/2EK,CAAC,CAAE,ED+2EJ,CAACxf,AC/2EM7uB,CAAC,CD+2EL,AC/2EME,CAAC,ED+2EJ,CAAC;MC92EbmuC,IDg3EC,CCh3EI,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAACsW,CAAC;IAEjB,MDg3EE;EC92EH,CAAC,KDg3EC,CCh3EK,IDg3EA,KAAK;IC92EX,IAAKgnI,EDg3EH,IAAI,CAAC3uH,EAAE,ECh3EO,CDg3EJ5b,ACh3EMs7B,IDg3EF,CAAChK,ACh3EM,EAAErkC,CAAE,CDg3EN,ACh3EO,CDg3EL,CAAE0T,ACh3EM,MDg3ED,CAAEiX,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IC92E/CrJ,EAAE,CAAC28H,GDg3ED,IAAKlrI,GCh3EM,CDg3EF,ACh3EI,CDg3EH8B,GAAG,ACh3EI,CDg3EF8V,ACh3EGgzH,GDg3EC,CAAC,ACh3EE,EAAE39I,CDg3ED,ACh3EG,CAAC,QDg3EK,EAAG;IC92ErC89C,QDg3EG,CCh3EM,CAAEzP,EDg3EJ,CAACzf,EAAE,ACh3EM,EAAE5uB,CDg3EL+S,ACh3EO,CAAC,GDg3EJ,CAACsH,KAAK,CAAEmQ,GAAG,EAAEM,GAAI,CAAC;EC92EpC,UD+2EI,IAAI,CAAC+D,EAAE,GAAG9b,IAAI,CAACsH,KAAK,CAAEoQ,GAAG,EAAEC,GAAI,CAAC;AC72ErC,UD+2EI,CAAC,MAAM;AC72EX,SAASwzH,GD+2EJ,IAAI,CAACtvH,EAAE,CC/2EQsvH,CAAE58H,CD+2EPvO,CC/2ES,EAAE/S,CD+2EP,AC/2EQ,CD+2EPqa,CC/2EU,ID+2EL,CAAE,CAAEuQ,GAAG,EAAEN,GAAI,CAAC;EC72EtC,IAAM+jB,KAAK,CD82EP,EC92EU,ED82EN,CAACxf,CC92ES,CD82EP,AC92EQwf,GD82EL,CAAC,CC92ES;EAExB,IAAKruC,CAAC,CAACgU,CAAC,CD82EL,IC92EUhC,SAAS,EAAG;IAExB,IAAKq8B,ED82EH,GC92EQ,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACN,CAAC,IAAI2uC,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC4pB,CAAC,IAAIykB,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC6pB,CAAC,EAAG;MAE3FvI,ED82EA,AC92EE,CAAC68H,ID82EE,KAAK,AC92EE,CAAE,IAAI,CAACR,IAAI,EAAE39I,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC4pB,CAAC,EAAE5pB,CAAC,CAAC6pB,CAAE,CAAC;MAE7CwkB,ID82EC,CC92EI,CAAE,CAAC,CD82EH,AC92EK,CD82EJ1f,EAAE,AC92EK3uB,CAAC,CAACgU,CD82EJjB,AC92EK,ID82ED,CAACsxB,IAAI,CAAE3wB,MAAK,CAAEmX,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MC72E5CwjB,ID+2EC,CC/2EI,CAAE,CAAC,CD+2EFt7B,AC/2EI,GAAG/S,CD+2EH,AC/2EI,CD+2EH6U,AC/2EInV,CAAC,ED+2EF,CAAEmrB,GAAI,CAAC,GAAG,SAAS,EAAG;MC92EpCwjB,KAAK,CDg3EH,ACh3EK,CAAC,CAAE,EDg3EJ,CAACzf,ACh3EM5uB,CAAC,CDg3EL,ACh3EM4pB,CAAC,EDg3EJ7W,IAAI,CAACsH,KAAK,CAAE,CAAEuQ,GAAG,EAAEE,GAAI,CAAC;MC/2EpCujB,KAAK,CDg3EH,ACh3EK,CAAC,CAAE,EDg3EJ,CAACxf,ACh3EM7uB,CAAC,CDg3EL,ACh3EM6pB,CAAC,EDg3EJ9W,IAAI,CAACsH,KAAK,CAAE,CAAEkQ,GAAG,EAAEG,GAAI,CAAC;IC92ErC,MDg3EE,CAAC,MAAM;EC92EV,CAAC,MAAM,GDg3EH,IAAI,CAACkE,EAAE,GAAG,CAAC;IC92Ed,IAAK0uH,ID+2EF,IAAI,CAACzuH,EAAE,AC/2EM,CAAEwf,ED+2ELt7B,GC/2EU,CD+2EN,CAACsH,AC/2EOra,CAAE,CAAC,EAAG,CD+2ER,CAAEyqB,GAAG,EAAEH,GAAI,CAAC;IC72EnChJ,EAAE,CAAC88H,GD+2ED,OC/2EW,CAAE,IAAI,CAACT,IAAI,EAAE39I,CAAE,CAAC;IAE7B89C,MD+2EE,GC/2EO,CAAEzP,KAAK,EAAEruC,CAAE,CAAC;EAEtB,MD+2EE,KAAK,KAAK;AC72Eb,UD+2EI,IAAI,CAAC4uB,EAAE,GAAG7b,IAAI,CAACsxB,IAAI,CAAE,CAAE3wB,MAAK,CAAEkX,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE7C,IAAK7X,IAAI,CAAC8B,GAAG,CAAE+V,GAAI,CAAC,GAAG,SAAS,EAAG;AC/2EvC,YDi3EK,IAAI,CAAC+D,EAAE,GAAG5b,IAAI,CAACsH,KAAK,CAAEwQ,GAAG,EAAEC,GAAI,CAAC;YAChC,IAAI,CAAC+D,EAAE,GAAG9b,IAAI,CAACsH,KAAK,CAAEoQ,GAAG,EAAEH,GAAI,CAAC;ACh3ErC,SAAS+zH,CDk3EL,CAAC,MAAM,ECl3EQA,CAAE/8H,EAAE,EAAEthB,CAAC,EAAG;EAE5B,IAAMquC,KAAK,CDk3EP,ECl3EU,EDk3EN,CAAC1f,CCl3ES,CDk3EP,ACl3EQ0f,GDk3EL,CAAC,CCl3ES;EACxB,IAAM90B,MDk3EF,ECl3EU,EDk3EN,CAACsV,ACl3EQ7uB,CAAC,CDk3EP,ACl3EQuZ,GDk3ELxG,IAAI,CAACsH,ACl3EQ,KDk3EH,CAAE,CAAEkQ,GAAG,EAAEG,GAAI,CAAC;ECh3EtC,IAAKnR,IDk3EF,ICl3EU,KAAKvH,SAAS,EAAG;IAE7B,IAAKsrI,EDk3EH,SCl3Ec,CAAEjvG,KAAK,EAAEruC,CAAE,CAAC,EAAG;IAE/BshB,EAAE,CAACg9H,CDk3EF,KAAK,KAAK,KCl3EQ,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAE39I,CAAE,CAAC;IAE1C89C,MDk3EE,GCl3EO,CDk3EH,ACl3EKzP,CDk3EJxf,EAAE,ECl3EO,CDk3EJ9b,CCl3EM/S,CAAE,CAAC,CDk3EL,CAACqkC,IAAI,CAAE3wB,MAAK,CAAE+W,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;ECh3E9C,CAAC,MAAM,CDk3EJ,IAAK1X,IAAI,CAAC8B,GAAG,CAAE4V,GAAI,CAAC,GAAG,SAAS,EAAG;ICh3ErC,IAAK6yH,IDk3EF,IAAI,CAAC3uH,EAAE,ACl3EM,CAAE0f,EDk3ELt7B,GCl3EU,CDk3EN,CAACsH,ACl3EOd,KDk3EF,CAAE,CAAEoR,CCl3EO,CAAC,CDk3EL,CCl3EQ,CDk3END,GAAI,CAAC;ICh3ErCuyH,QDi3EG,CCj3EM,CAAC/lI,EDi3EH,CAAC0X,ACj3EK,CAAErV,CDi3EL,GAAGxG,IAAI,ACj3EO,CDi3ENsH,ACj3EO,KDi3EF,CAAE,CAAEuQ,GAAG,EAAEN,GAAI,CAAC;IC/2ErChJ,EAAE,CAACg9H,GDi3ED,CAAC,MAAM,MCj3EU,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEV,SAAU,CAAC;IAElDn/F,QDi3EG,CCj3EM,CAAEzP,EDi3EJ,CAAC1f,EAAE,ACj3EM,EAAEpV,CDi3EL,CAAC,MCj3Ea,CAAC;EAE7B,UDg3EI,IAAI,CAACqV,EAAE,GAAG7b,IAAI,CAACsH,KAAK,CAAEmQ,GAAG,EAAEM,GAAI,CAAC;AC92ErC,UDg3EI;AC92EJ,SAASyzH,CDg3EL,SCh3EeA,CAAEj9H,EAAE,EAAEthB,CAAC,EAAG;EAE5B,IAAMquC,EDg3EJ,GCh3ES,EDg3EJ,CCh3EO,IDg3EF,ACh3EM,CAACA,KAAK;EACxB,IAAM90B,IDi3EH,IAAI,ACj3EO,CDi3ENsV,EAAE,ACj3EO7uB,CAAC,CAACuZ,CDi3ENxG,IAAI,CAACsxB,ECj3ES,EDi3EL,CAAE,CAAE3wB,MAAK,CAAE6W,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;EC/2EhD,IAAKhR,IDi3EF,IAAKxG,ACj3EK,IDi3ED,CAAC8B,ACj3EK7C,GDi3EF,CAAEuY,GAAI,CAAC,CCj3EI,EDi3ED,ACj3EI,SDi3EK,EAAG;IC/2ErC,IAAK+yH,IDi3EF,IAAI,CAAC3uH,EAAE,ACj3EM,CAAE0f,EDi3ELt7B,GCj3EU,CDi3EN,CAACsH,ACj3EOra,CAAE,CAAC,EAAG,CDi3ER,CAAE6qB,GAAG,EAAEH,GAAI,CAAC;IC/2EnCpJ,EAAE,CAACk9H,KDg3EA,IAAI,CAAC5vH,EAAE,GAAG7b,CCh3EM,CAAE,EDg3EJ,CAACsH,CCh3EO,CAACsjI,GDg3EH,CAAEnzH,ACh3EK,EAAE,CDg3EJ,EAAEF,ECh3EO,CDg3EH,CAAC,ACh3EItqB,CAAE,CAAC;IAE1C89C,MDg3EE,CAAC,ECh3EM,CAAEzP,GDg3EF,ECh3EO,EAAEruC,CAAE,CAAC;EAEtB,CAAC,MAAM,GDg3EH,IAAI,CAAC2uB,EAAE,GAAG5b,IAAI,CAACsH,KAAK,CAAE,CAAEsQ,GAAG,EAAEG,GAAI,CAAC;IC92ErC,IAAKwyH,ID+2EF,IAAI,CAAC1uH,EAAE,AC/2EM,CAAEyf,ED+2EL,CAAC,EC/2ES,EAAE90B,QAAS,CAAC,EAAG;IAEtCyjI,MD+2EE,GC/2EO,CAAC9lI,GAAG,CAAEqC,QAAS,CAAC;IAEzB+H,EAAE,CAACk9H,GD+2ED,aC/2EiB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEX,SAAU,CAAC;IAElDl/F,ID+2EC,KC/2EQ,CAAEzP,KAAK,EAAE90B,QAAS,CAAC;EAE7B,QD+2EGpC,OAAO,CAACC,IAAI,CAAE,sEAAsE,GAAGb,KAAM,CAAC;AC72ElG,MD+2EE;AC72EF,MD+2EE,GC/2EOkoI,CD+2EH,CAACrvH,MAAM,EC/2EMqvH,CD+2EHloI,AC/2EK+K,EAAE,EAAEthB,CD+2EJ,AC/2EK,EAAG;EAE5B,ID+2EC,AC/2EKquC,ID+2EAlf,CC/2EK,GAAG,ED+2EF,EC/2EM,CAACkf,ED+2EF,GC/2EO,CD+2EH,EAAG,IAAI,CAACtf,iBAAiB,CAAC,CAAC;EC92EhD,IDg3EC,ACh3EKxV,ODg3EE,CCh3EM,GDg3EF,ACh3EKvZ,CAAC,CAACuZ,QAAQ;EAE3B,EDg3EA,ECh3EKA,QAAQ,KAAKvH,SAAS,EAAG;EDg3E7B,EC92EA,IAAKsrI,WAAW,CAAEjvG,KAAK,EAAEruC,CAAE,CAAC,EAAG;ID82E/BmE,AC52EAmd,EAAE,CD42EF,AC52EGo9H,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAE39I,CAAE,CAAC;ID42E1ChC,AC12EA8/C,KD02EA,EAED,EC52EU,CAAEzP,KAAK,CD42EjB/J,CC52EmBtkC,CAAE,CAAC,cD42ELskC,CAAEjuB,CAAC,EAAEE,KAAK,EAAE4Y,MAAM,EAAG;EC12EtC,CAAC,GD42EA6U,GC52EM,MD42EG,CAACvD,0BAA0B,CAAEpqB,CAAE,CAAC;IC12EzC,ED42EA,EC52EKinI,KD42EE,IAAI,CAAC1tH,CC52EI,CAAEye,KAAK,EAAE90B,QAAS,CAAC,EAAG,CD42EL,CAAEyqB,SAAS,EAAEztB,KAAK,EAAE4Y,MAAO,CAAC;IAE9D,AC52EC4tH,SAAS,CAAC7lI,GAAG,CAAEqC,QAAS,CAAC;ED42EzB,EC12EA+H,EAAE,CAACo9H,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEZ,SAAU,CAAC;ID02ElD54I,ACx2EA25C,GDw2EA,MCx2ES,CAAEzP,KAAK,EAAE90B,QAAS,CAAC;EAE7B,EDs2ECvb,KAAA,EAED,SAAAumC,cAAcA,CAAEvkC,CAAC,EAAwB;ACt2E1C,MDs2E0C,IAAtBuW,KAAK,GAAA3B,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI,CAACwa,MAAM;MAErC,OAAO,IAAI,CAAClY,GAAG,CAAElX,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC4pB,CAAC,EAAErT,KAAM,CAAC;ACt2EzC,IDw2EC;EAAC;ACt2EF,IDs2EEpS,GAAA,ECt2EOw6I,WAAWA,CAAEr9H,EAAE,EAAEthB,CAAC,EAAG;EAE7B,EDo2EChC,ECp2EKqwC,GDo2EL,EAED,ACt2EW,GAAG,IAAI,CAACA,CDs2EnB7J,ICt2EwB,GDs2EjBA,CAAEC,QAAQ,EAAG;ECp2EpB,IDs2EC,ACt2EI4J,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,EAAG;EAExBshB,EAAE,CAACs9H,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAE39I,CAAE,CAAC;EAE5BquC,IDo2ECpK,CCp2EI,CAAE,CAAC,CAAE,GAAGjkC,CAAC,KDo2EA,CAACivB,YAAY,CAAE,IAAK,CAAC;ACl2EpC,MDo2EE,OAAO,IAAI,CAACqV,iBAAiB,CAAEL,aAAa,EAAEQ,QAAS,CAAC;IAEzD;ACp2ED,EDo2EE;IAAAtgC,GAAA;ACl2EF,IDk2EEnG,KAAA,ACl2EO6gJ,EDo2ER,SAAAzjI,ACp2EmByjI,CAAEv9H,EAAE,EAAEthB,CDo2EnBob,ACp2EoB,CDo2ElB8T,CCp2EqB,IDo2EhB,EAAG;ECl2EhB,IDo2EC,ACp2EKmf,KAAK,EDo2EDnf,CCp2EI,IDo2EC,ACp2EG,CDo2EFP,ACp2EG0f,EDo2ED,GCp2EM,EDo2ED,IAAI,CAAC1f,EAAE,IAAQO,KAAK,CAACN,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMM,KAAK,CAACL,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMK,KAAK,CAACE,MAAM,KAAK,IAAI,CAACA,MAAQ;ECl2E5H,EDo2EA,ECp2EKpvB,CAAC,CAACgU,CAAC,KAAKhC,SAAS,EAAG;EDo2ExB,ECl2EA,IAAKq8B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACN,CAAC,EAAG;IDk2EhDyE,ECh2ECmd,CDg2ED,CCh2EG,CAACw9H,SAAS,CAAE,IAAI,CAACnB,IAAI,EAAE39I,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAE,CAAC;IDg2EpC1B,EC91ECqwC,GD81ED,EAED,ACh2EO,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAACgU,CDg2EjBqH,ACh2EkB,SDg2ETA,CAAE1I,KAAK,EAAG;MAElB,ACj2EC07B,IDi2EG,CAAC1f,ACj2EC,CAAE,CDi2ED,ACj2EE,CAAE,EDi2EDhc,CCj2EI3S,CAAC,CAACN,CAAC,CDi2EF,CAAE,CAAC,CAAE;IC/1EpB,EDg2EA,IAAI,CAACkvB,EAAE,GAAGjc,KAAK,CAAE,CAAC,CAAE;EC91ErB,CAAC,GD+1EA,GC/1EM,CD+1EF,CAACkc,EAAE,GAAGlc,KAAK,CAAE,CAAC,CAAE;IC71EpB,ED81EA,EC91EK2qI,ED81EA3qI,KAAK,CAAE,CAAC,CAAE,CC91EC,CAAE07B,GD81EEr8B,EC91EG,EAAEhS,CAAE,CAAC,EAAG,CD81EF,EAAG,IAAI,CAACovB,MAAM,GAAGzc,KAAK,CAAE,CAAC,CAAE;IC51ExD2O,ED81EA,AC91EE,CAACy9H,GD81EC,CAAChwH,MC91EQ,CAAE,IAAI,CAAC4uH,IAAI,CD81EF,CAAC,AC91EG39I,CD81EF,AC91EI,CAAC;IAE7B89C,ED81EA,OAAO,AC91EE,CAAEzP,GD81EA,EC91EK,EAAEruC,CAAE,CAAC;EAEtB,ED81EA;AC51ED,ED41EE;AC11EF,ID01EEmE,GAAA,EC11EO66I,WAAWA,CAAE19H,EAAE,EAAEthB,CAAC,EAAG;EAE7B,EDw1EChC,ECx1EKqwC,GDw1EL,EAED,AC11EW,GAAG,IAAI,CAACA,CD01EnB9yB,IC11EwB,GD01EjBA,CAAA,EAA2B;ECx1ElC,IDw1EkC,ACx1E7Bvb,CAAC,CAACgU,CAAC,CDw1ECrB,ICx1EIX,CDw1EC,GAAA4C,KCx1EQ,EAAG,EDw1EX,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,EAAE;ICt1ElB,EDs1EkB,ECt1Eby5B,EDs1Ee/yB,GCt1EV,CAAE,CAAC,CDs1Ea,ACt1EX,GDs1EW1G,ECt1EN5U,CAAC,CAACgU,CAAC,IDs1EG,ACt1ECq6B,CDs1ED/rC,ICt1EM,CAAE,CDs1ER,ACt1ES,CAAE,KAAKtC,CAAC,CDs1EjB4U,ACt1EkBlV,CAAC,IAAI2uC,IDs1EvB,CCt1E4B,CAAE,CAAC,CAAE,IDs1EjCr8B,CCt1EsChS,CAAC,CAAC4pB,CAAC,EAAG,GDs1E5C,GAAAhV,SAAA,MAAG,CAAC;MAE9BjC,ACt1EC2O,EAAE,CAAC29H,EDs1EC,CAAE3jI,MAAM,ACt1EA,CDs1EE,ACt1EA,GDs1EG,CCt1EC,CAACqiI,EDs1EE,CAAChvH,CCt1EC,CDs1EC,CCt1EC3uB,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC4pB,CAAE,CAAC;MDu1EzCjX,ACr1EC07B,KDq1EI,ACr1EC,CDq1EC/yB,ACr1EC,CAAC,CAAE,GAAGtb,CDq1ED,ACr1EE,CAACgU,CAAC,CDq1ED,CAAC,CAAE,GAAG,IAAI,CAAC4a,EAAE;MAC7Bjc,ACr1EC07B,KDq1EI,ACr1EC,CDq1EC/yB,ACr1EC,CAAC,CAAE,GAAGtb,CDq1ED,ACr1EE,CAACN,CAAC,CDq1ED,CAAC,CAAE,GAAG,IAAI,CAACmvB,EAAE;MAC7Blc,ACr1EC07B,KDq1EI,ACr1EC,CDq1EC/yB,ACr1EC,CAAC,CAAE,GAAGtb,CDq1ED,ACr1EE,CAAC4pB,CAAC,CDq1ED,CAAC,CAAE,GAAG,IAAI,CAACwF,MAAM;ICn1EjC,EDq1EA,OAAOzc,KAAK;ECn1Eb,CAAC,CDq1ED,KCr1EO;EDq1EN,ECn1EA,IAAK2qI,WAAW,CAAEjvG,KAAK,EAAEruC,CAAE,CAAC,EAAG;IDm1E/BmE,ACj1EAmd,EAAE,CDi1EF,ACj1EG49H,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAE39I,CAAE,CAAC;IDi1E7BhC,AC/0EA8/C,KD+0EA,EAED,ECj1EU,CAAEzP,KAAK,CDi1EjBxc,CCj1EmB7xB,CAAE,CAAC,MDi1Eb6xB,CAAEC,QAAQ,EAAG;EC/0EtB,IDi1EC,IAAI,CAAC/C,iBAAiB,GAAG+C,QAAQ;AC/0EnC,MDi1EE,OAAO,IAAI;AC/0Eb,IDi1EC,KCj1EQqtH,WAAWA,CAAE79H,EAAE,EAAEthB,CAAC,EAAG;EDi1E5B,AC/0ED,IAAMquC,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,ED60EClqC,EC70EInE,CD60EJ,AC70EK,CAACgU,CAAC,KAAKhC,SAAS,EAAG;ID60ExBhU,AC30EA,IAAKqwC,CD20EL,EAED,EC70EW,CAAE,CAAC,CAAE,ID60EhBtf,CC70EqB/uB,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,CD60ErBtf,CAAA,EAAG,CAAC,AC70EsB/uB,CAAC,CAACN,CAAC,IAAI2uC,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC4pB,CAAC,IAAIykB,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC6pB,CAAC,EAAG;ED60EvE,IC30EpBvI,EAAE,CAAC89H,SAAS,CAAE,IAAI,CAACzB,IAAI,EAAE39I,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC4pB,CAAC,EAAE5pB,CAAC,CAAC6pB,CAAE,CAAC;ID20EzB1lB,ECz0EpBkqC,CDy0EoB,EAEnBnwC,EC30EI,CAAE,CAAC,CAAE,CD20EH,CAACE,CC30EK4B,CAAC,CAACgU,CAAC,ID20EA;IAAAhW,EC10EhBqwC,GD00EgB,EC10EX,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAACN,CAAC,ID00EApC,mBAAA,GAAAqF,IAAA,CAAlB,SAAA3E,MAAA;MAAA,ACz0EEqwC,KAAK,CAAE,CDy0ET/wC,ACz0EU,CAAE,GAAG0C,CAAC,CAAC4pB,CAAC,YDy0ElB,GAAA/qB,IAAA,UAAAid,OAAA4oB,SAAA;MCx0EE2J,EDw0EF,GCx0EO,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAAC6pB,CAAC,MDw0ElB6a,SAAA,CAAAthC,IAAA,GAAAshC,SAAA,CAAAjjC,IAAA;ICt0EC,MDs0ED;ECp0EA,CAAC,MAAM,GDo0EPijC,SAAA,CAAAjjC,IAAA;ICl0EC,IAAK67I,IDo0EL,OAAM,ACp0EU,CAAEjvG,GDo0ER,CAAC1f,CCp0EY,CDo0EV,CCp0EY3uB,CAAE,CAAC,EAAG;IAE/BshB,EAAE,CAAC+9H,GDk0EU,OCl0EA,CAAE,IAAI,CAAC1B,IAAI,EAAE39I,CAAE,CAAC;IAE7B89C,QDg0EapZ,CCh0EJ,CAAE2J,KAAK,EDg0EH,ACh0EKruC,CDg0ELyB,ACh0EO,CAAC,GDg0ER;EC9zEd,UD+zEC,OAAM,IAAI,CAACmtB,EAAE;AC7zEf,UD6zEe;YAAA8V,SAAA,CAAAjjC,IAAA;AC3zEf,YD4zEE,OAAM,IAAI,CAACotB,EAAE;UAAA;AC1zEf,SAASywH,GD0zEM56G,SAAA,AC1zEM46G,CD0zEN79I,AC1zEQ6f,EAAE,ED0zEV,AC1zEYthB,CAAC,EAAG;EAE9B,IAAMquC,KAAK,CDyzEV,ECzzEa,IAAI,CDyzEX,ACzzEYA,IDyzER,CAACjf,ACzzEY,MDyzEN;ECvzElB,IAAKif,IDuzEa,CCvzER,CAAE,CAAC,CAAE,KAAKruC,CAAC,EAAG;EAExBshB,EAAE,CAACi+H,KDqzEe,KCrzEL,CAAE,IAAI,CAAC5B,IAAI,EAAE39I,CAAE,CAAC;EAE7BquC,KAAK,CAAE,CAAC,CAAE,EDmzEQ,CCnzELruC,CAAC,KDmzEI0kC,SAAA,CAAAnhC,IAAA;ACjzEnB,QDizEmB;MAAA,GAAAvF,KAAA;AC/yEnB,ID+yEmB,CAEjB;EAAA;AAAA,AC/yEF,SAASwhJ,YAAYA,CAAEl+H,EAAE,EAAEthB,CAAC,EAAG;ADmzE/BkkC,ECjzEC,GDizEI,CAACC,ACjzECkK,KAAK,GAAG,IAAI,CDizEA,ACjzECA,GDizEE,ECjzEG,GDizEE;AAAC,EC/yE3B,EDizEK1J,ECjzEA3kC,CAAC,CAACgU,CAAC,CDizEG,GAAAtP,CCjzEEsN,MDizEF,CAAA2yB,ECjzEW,EAAG,EDizEd;EAEX,ECjzEC,IAAK0J,GDizEN1J,ECjzEW,CAAE,CAAC,CAAE,EDizEhB,EAAc,CCjzEO3kC,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACN,CAAC,EAAG;IDizEnCsE,EC/yEZsd,EAAE,CAACm+H,UD+yES,AC/yEC,CAAE,IAAI,CAAC9B,CD+yERh5G,GC/yEY,EAAE3kC,CD+yEd,AC/yEe,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAE,CAAC;IDizErC,EC/yEC2uC,ED+yEG,CAACzJ,EC/yEC,CAAE,CD+yEC,AC/yEA,CAAE,ED+yEC,CAAC,AC/yEC5kC,CAAC,CAACgU,CD+yEA,AC/yEC,CD+yEA;EAElB,IChzEEq6B,KAAK,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAACN,CAAC;EDgzEjB,EC9yEA,KD8yEA0E,YAAA,CAAAugC,MAAA;EC5yED,CAAC,CD4yEAxgC,GAAA,EC5yEM;ID4yENnG,AC1yEA,IAAKs/I,CD0yEL,EAED,QC5yEiB,CD4yEjBpmI,AC5yEmBm3B,GD4yEhBn3B,CAAEgR,CC5yEmB,EAAEloB,CAAE,CAAC,ED4yEjB,AC5yEoB,ED4yEjB;IC1yEdshB,ED4yEA,AC5yEE,CAACo+H,GD4yEC,CAAC96G,IAAI,GAAG,AC5yEE,CD4yEA,AC5yEE,CD4yED,GC5yEK,CD4yED1c,AC5yEEy1H,IAAI,EAAE39I,CD4yED,AC5yEG,CAAC,ED4yED,CAAC,MAAO,CAAC;IAEvC,AC5yEC89C,SAAS,CAAEzP,KAAK,EAAEruC,CAAE,CAAC;ED4yErB,AC1yED;AAED,IDwyEEmE,GAAA;ACtyEF,IDsyEEnG,KAAA,ACtyEO2hJ,EDwyER,SAAA96G,CCxyEoB86G,CAAEr+H,EAAE,EDwyElBujB,ACxyEoB7kC,CDwyElBkoB,ACxyEmB,EAAG,KDwyEf,EAAG;ECtyElB,IDwyEC,ACxyEKmmB,IDwyED,CAACzJ,ACxyEK,GAAG,CDwyEJ,GCxyEQ,CDwyEJ,ACxyEKyJ,CDwyEJ,IAAInmB,ACxyEK,ODwyEE,GAAG,CAAC;ECtyE9B,EDwyEA,ECxyEKloB,CAAC,CAACgU,CAAC,KAAKhC,SAAS,EAAG;EDwyExB,ECtyEA,IAAKq8B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACN,CAAC,IAAI2uC,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC4pB,CAAC,EAAG;IDsyEtEzlB,ECpyECmd,CDoyED,CCpyEG,CAACs+H,UAAU,CAAE,IAAI,CAACjC,IAAI,EAAE39I,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC4pB,CAAE,CAAC;IDoyE1C5rB,EClyECqwC,GDkyED,EAED,ACpyEO,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAACgU,CDoyEjB8wB,ACpyEkB,SDoyETA,CAAA,EAAG;MAEX,ACryECuJ,IDqyEG,CAACzJ,ACryEC,CAAE,CAAC,CAAE,CDqyEF,ECryEK5kC,CDqyEF,ACryEG,CAACN,CAAC,QDqyEK,GAAG,CAAC;IAE3B,ECtyEE2uC,KAAK,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAAC4pB,CAAC;EDsyEjB,ECpyEA;EAED,CAAC,CDkyEAzlB,GAAA,EClyEM;IDkyENnG,AChyEA,IAAKs/I,CDgyEL,EAED,QClyEiB,CDkyEjBv4G,AClyEmBsJ,KAAK,CDkyElBtJ,CAAE7c,AClyEkBloB,CAAE,CAAC,EAAG,GDkyEjB,EAAG;IChyEjBshB,EDkyEA,AClyEE,CAACu+H,GDkyEC,CAACj7G,IAAI,GClyEK,CDkyED,AClyEG,CDkyEF,GClyEM,CDkyEF1c,AClyEGy1H,IAAI,EAAE39I,CDkyEF,AClyEI,CAAC,EDkyEF,CAAC;IAE9B,AClyEC89C,SAAS,CAAEzP,KAAK,EAAEruC,CAAE,CAAC;EDkyErB,AChyED;AAED,ID8xEEmE,GAAA;AC5xEF,ID4xEEnG,KAAA,AC5xEO8hJ,ED8xER,SAAA96G,CC9xEoB86G,CAAEx+H,EAAE,EAAEthB,CD8xEnBglC,AC9xEoB,CD8xElB9c,CC9xEqB,MD8xEd,EAAG;EC5xEnB,ID8xEC,AC9xEKmmB,ID8xED,CAACzJ,AC9xEK,GAAG,CD8xEJ,GC9xEQ,CD8xEJ,AC9xEKyJ,ED8xED,CAAC,EC9xEK,ED8xEDnmB,OAAO,GAAG,CAAC,CAAE;EC5xEpC,ED8xEA,EC9xEKloB,CAAC,CAACgU,CAAC,KAAKhC,SAAS,EAAG;ED8xExB,EC5xEA,IAAKq8B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACgU,CAAC,IAAIq6B,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAACN,CAAC,IAAI2uC,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC4pB,CAAC,IAAIykB,KAAK,CAAE,CAAC,CAAE,KAAKruC,CAAC,CAAC6pB,CAAC,EAAG;ID4xE5F1lB,EC1xECmd,CD0xED,CC1xEG,CAACy+H,UAAU,CAAE,IAAI,CAACpC,IAAI,EAAE39I,CAAC,CAACgU,CAAC,EAAEhU,CAAC,CAACN,CAAC,EAAEM,CAAC,CAAC4pB,CAAC,EAAE5pB,CAAC,CAAC6pB,CAAE,CAAC;ID0xE/C7rB,ECxxECqwC,GDwxED,EAED,AC1xEO,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAACgU,CD0xEjBixB,AC1xEkB,UD0xERA,CAAA,EAAG;MAEZ,AC3xECoJ,ID2xEG,CAACzJ,AC3xEC,CAAE,CAAC,CAAE,CD2xEF,EC3xEK5kC,CD2xEF,AC3xEG,CD2xEF,AC3xEGN,CAAC;ID6xElB,EC5xEE2uC,KAAK,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAAC4pB,CAAC;ED4xEjB,IC3xECykB,KAAK,CAAE,CAAC,CAAE,GAAGruC,CAAC,CAAC6pB,CAAC;ID2xEjB1lB,ACzxEA,GDyxEA;ECvxED,CAAC,CDuxEAnG,KAAA,ACvxEM,EDyxEP,SAAA+mB,IAAIA,CAAEmgB,MAAM,EAAG;ICvxEd,EDyxEA,ECzxEKo4G,KDyxEE,CAAE,IAAI,CAAC14G,ACzxEE,CAAEyJ,GDyxEA,ECzxEK,CDyxEFnJ,CCzxEIllC,CAAE,CAAC,EAAG,CDyxEJ,CAAC4kC,IAAI,MAAO,CAAC;IAEzC,ACzxECtjB,EAAE,CAAC0+H,WAAW,CAAE,IAAI,CAACrC,IAAI,EAAE39I,CAAE,CAAC;EDyxE9B,ECvxEA89C,SAAS,CAAEzP,KAAK,EAAEruC,CAAE,CAAC;EAEtB,EDqxECmE,GAAA;ACnxEF,IDmxEEnG,KAAA,EAED,SAAAmnC,SAASA,CAAEjd,OAAO,EAAG;MAEpB,OAAO,CAAE,IAAI,CAAC0c,IAAI,IAAK,CAAC,IAAI1c,OAAO,GAAG,CAAC,CAAE,MAAO,CAAC;ACpxEnD,IDsxEC;EAAC;AAAA,ACpxEF,SAAS+3H,UAAUA,CAAE3+H,EAAE,EAAEthB,CAAC,EAAEqpB,QAAQ,EAAG;ADwxEvC,ECtxEC,EDsxEG+b,ECtxEGiJ,KAAK,GAAG,CDsxEA,GAAG,ACtxEC,CDsxEA,ACtxECA,KAAK;ADwxEzB,ECvxEC,EDuxEKhJ,ECvxEC66G,GDuxEI,CCvxEA,EDuxEG,CCvxEA72H,QAAQ,CAACm0H,GDuxEK,IAAIrqH,OAAO,CAAC,CAAC,GCvxEC,CAAC,CAAC;ADwxE5C,ECtxEC,EDsxEKmS,ECtxEA+I,CDsxEG,GAAG,CCtxED,CAAE,CAAC,CAAE,KAAK6xG,IDsxEK,ACtxED,EAAG,EDsxEEzxH,UAAU,CAAC,CAAC;AAC1C,IAAM8W,ACrxEJjkB,EAAE,CAACs9H,EDqxEM,GAAG,ICrxEA,CAAE,IAAI,CAACjB,GDqxEO,CCrxEH,EAAEuC,CDqxEKrhH,GCrxEA,CAAC,GDqxEM,CAAC,CAAC;AACzC,IAAM2G,ACrxEJ6I,KAAK,CAAE,CDqxEI,ACrxEH,CAAE,EDqxEI,CCrxED6xG,IAAI,QDqxEW,IAAI/sH,OAAO,CAAC,CAAC;AAE3C,ECrxEC,EDqxEKsS,WAAW,GAAG,aAAc,IAAItS,OAAO,CAAC,CAAC;AAC/C,ECpxEC,EDoxEKuS,ECpxEDy6G,MDoxES,GAAG,KCpxEE,QDoxEY,IAAIhtH,OAAO,CAAC,CAAC;AAC5C,ECnxEC,EDmxEKwS,ECnxEA,IAAI,CAACxmC,IAAI,EDmxEI,GAAG,ACnxEFmiB,EAAE,CAAC8+H,UDmxEa,IAAI3xH,GCnxEA,EAAG,KDmxEO,CAAC,CAAC;AAEpD,IAAMmX,ACnxEJ62G,MDmxEU,GAAG,SCnxEK,CAAC5xE,GDmxEQ,IAAI13C,OAAO,CAAE,ACnxEN,CDmxEO,EAAE,ACnxEN5iB,CDmxEO,EAAE,CAAE,CAAC,sBCnxEI,CAAC,CAAC;ADoxEzD,IAAMs1B,ACnxEJs6G,MDmxEU,GAAG,KCnxEC,GAAG1D,KDmxEU,IAAItpH,OAAO,CAAE,CAAC,ACnxEN,EDmxEQ,CAAC,EAAE,CAAE,CAAC;AACnD,EClxEC,CAAC,CDkxEI2S,KClxEE,CDkxEI,GAAG,aAAc,IAAI3S,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAEnD,IAAM4S,AClxEJo6G,WDkxEe,GAAG,AClxEJ,GAAG3D,YAAY;EDkxETr9I,AChxErB,IDgxEyB,EAAE;AAAQ,CAAC,CC9wEpCkqB,QAAQ,CAACg3H,YAAY,CAAErgJ,CAAC,IAAImgJ,cAAc,EAAED,IAAK,CAAC;AD+wEnD,AC7wEA,ID6wEMl6G,aAAa,GAAG;AC3wEtB,ED2wEwB7mC,IAAI,EAAE,CC3wErBmhJ,YAAYA,CAAEh/H,EAAE,EAAEthB,CAAC,EAAEqpB,QAAQ,EAAG;AD2wED,CAAC,CCzwExC,IAAMglB,KAAK,GAAG,IAAI,CAACA,KAAK;AD2wEzB,EC1wEC,ED0wEKpI,EC1wECi6G,IAAI,GAAG72H,OD0wEQ,CC1wEA,CAACm0H,CD0wEE,kBC1wEiB,CAAC,CAAC;ED0wEjBr+I,ACxwE1B,IDwwE8B,ACxwEzBkvC,EDwwE2B,GCxwEtB,CAAE,CAAC,CAAE,KAAK6xG,CDwwEwB,GCxwEpB,EAAG;EDwwEmBh6G,ECtwE7C5kB,EAAE,CDswEgD,ACtwE/Cs9H,EDswEiD,OCtwExC,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;ADswE0B,CAAC,GCrwE1D7xG,KAAK,CAAE,CAAC,CAAE,GAAG6xG,IAAI;ADswEnB,ECpwEC,EDowEK/5G,kBAAkB,GAAG;EAAEhnC,AClwE5BkqB,IDkwEgC,EAAE,EClwE1B,CAACk3H,WDkwEuC,CClwE3B,CAAEvgJ,CAAC,IAAI28I,cAAc,EAAEuD,IAAK,CAAC;AAEnD,EDgwEmDh6G,KAAK,EAAE;AAAK,AC9vE/D,CD8vEgE,QC9vEvDs6G,UAAUA,CAAEl/H,EAAE,EAAEthB,CAAC,EAAEqpB,QAAQ,EAAG;AD8vE0B,EC5vEhE,ED8vEK+c,EC9vECiI,KAAK,CD8vEE,EC9vEC,CD8vED3pC,GC9vEK,CAAC2pC,GD8vEN,CAAAjI,CC9vEW,OD8vEX,0BAAAC,iBAAA;EAEb,AC/vEA,IAAM65G,IAAI,CD+vEV95G,EC/vEa/c,OD+vEb,CC/vEqB,CD+vEP,AC/vEQm0H,mBAAmB,CAAC,CAAC;EAE3C,ED6vEc,EC7vETnvG,ED6vES/H,GC7vEJ,CAAE,CAAC,CD6vEC,AC7vEC,KAAK45G,IAAI,EAAG;ID6vEbl8I,AC3vEbsd,EAAE,CAACs9H,SAAS,CAAE,ED2vED,EC3vEK,CAACjB,ID2vENv3G,AC3vEU,EAAE85G,IAAK,CAAC,CD2vElB;IAEb55G,AC5vEA+H,KAAK,CD4vEL,AC5vEO,CAAC,CAAE,CD4vEVvmB,EC5vEao4H,IAAI,ID4vEjB,OAAA95G,QAAA;EC1vED,ED4vECE,MAAA,CAAKC,UAAU,GAAG,IAAI;EC1vEvBld,ED4vEC3rB,MAAM,AC5vEC,CD4vEAK,AC5vEC0iJ,cD4vEa,AC5vEC,CD4vEDn6G,AC5vEGtmC,CAAC,IAAI48I,CD4vER,EAAQ,IAAI,EAAE,OC5vEU,EAAEsD,IAAK,CAAC;AAEvD,MD0vEuCliJ,KAAK,EAAEonC,WAAW;ACxvEzD,IDwvE6D,CAAE,CAAC,GCxvEvDs7G,iBAAiBA,CAAEp/H,EAAE,EAAEthB,CAAC,EAAEqpB,QAAQ,EAAG;EAE7C,EDwvECid,ECxvEK+H,IDwvEL,CAAK76B,ACxvEK,GAAG,CDwvEJ,GAAGN,ACxvEK,CAACm7B,KAAK,MDwvEC,CAAC,CAAC;ECvvE3B,EDyvEC/H,ECzvEK45G,IDyvEL,ACzvES,CDyvEJx9I,ECzvEO2mB,EDyvEH,GAAG,EAAE,CCzvEM,CAACm0H,mBAAmB,CAAC,CAAC;EAE3C,EDwvECl3G,ECxvEI+H,IDwvEJ,CAAKlvC,ACxvEI,CAAE,CAAC,CAAE,CDwvEL,GAAG,CCxvEO+gJ,IAAI,EAAG,GDwvEJ;IAEtB55G,ACxvEAhlB,EAAE,CAACs9H,GDwvEH,CAAKp4G,KCxvEO,CDwvED,ACxvEG,GDwvEA,CCxvEI,CAACm3G,EDwvED,ECxvEK,EAAEuC,IAAK,CAAC;IDyvE/B55G,ACxvEA+H,KAAK,CDwvEL,ACxvEO,CDwvEF5V,ACxvEG,CAAE,GAAGynH,IDwvEA,ACxvEI,GDwvED,EAAE;ECtvEnB,EDwvEC55G,MAAA,CAAKxF,EAAE,GAAGsF,QAAQ,CAACK,UAAU,CAAChuB,KAAK,CAAC,CAAC;ECtvEtC4Q,EDwvEC,IAAMqZ,ECxvEC,CAACi+G,KDwvEM,GAAG,IAAIxtH,KCxvEI,CAAEnzB,CDwvEC,ACxvEA,CDwvEC,CAAC,ECxvEE08I,iBAAiB,EAAEwD,IAAK,CAAC;AAE3D,IDuvEE,IAAMvgI,QAAQ,GAAG,IAAIukB,KAAK,CAAC,CAAC;IAC5B,IAAMlV,UAAU,GAAG,IAAIP,UAAU,CAAC,CAAC;ACtvErC,IDuvEE,IAAM3O,KAAK,GAAG,IAAIqT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEpC,SAASuT,gBAAgBA,CAAA,EAAG;ACvvE9B,MDyvEG1X,GCzvEM4xH,ODyvEI,CAAC3xH,SCzvEY2xH,CAAEzhJ,EDyvEF,CAAEwgB,CCzvEI,EAAG,KDyvEC,EAAE,KAAM,CAAC;ECvvE5C,EDyvEC,MCzvEQxgB,IAAI;ID2vEZ,ACzvEA,KAAK,IDyvEIwnC,ECzvEE,gBDyvEgBA,CAAA,EAAG;MAE7BhnB,AC3vEY,OAAO89H,CD2vEX,CAACn5G,SC3vEqB,QD2vEJ,CAAEtV,UAAU,EAAEhd,SAAS,EAAE,KAAM,CAAC;IAE3D,AC7vEiC;ID+vEjC2N,AC9vEA,KAAK,GD8vEG,CAACkS,EC9vEE,OD8vEO,CAAE6U,gBAAiB,CAAC;IACtC1X,EC/vEa,OAAO4uH,CD+vEV,CAAC/rH,SAAS,AC/vEW,CD+vET8U,kBAAmB,CAAC;IAE1CjpC,ACjwEiC,MDiwE3B,CAACkpC,gBAAgB,CAAAN,MAAA,EAAQ;IChwE/B,EDiwEC5D,GCjwEI,KDiwEI,CCjwEE,CDiwEA;MCjwEE,EDkwEX/jC,KClwEkBo/I,ODkwEN,EAAE,EClwEe,EDkwEX;IClwEa,IDmwE/Br/I,UAAU,EAAE,IAAI;IClwElB,IDmwEEV,CCnwEG,IDmwEE,EAAE0kC,ACnwEE;MDowEV,ACpwEY,CDowEX,MCpwEkBw7G,WAAW;IAAE,EDqwEhCv+H,QAAQ,EAAE;QACThhB,YAAY,EAAE,IAAI;ICpwEpB,IDqwEED,CCrwEG,MAAM,GDqwEC,EAAE,IAAI;MCrwEL,EDswEXV,KAAK,ACtwEaqgJ,EDswEX1+H,QCtwEqB;IAAE,EDuwE/B,CAAC;ICtwEF,EDuwECqP,GCvwEI,MAAM,CDuwEA,EAAE;MCvwEA,EDwwEXrwB,KCxwEkB4/I,ODwwEN,EAAE,CCxwEc,GDwwEV;ICxwEY,IDywE9B7/I,UAAU,EAAE,IAAI;ICxwElB,IDywEEV,CCzwEG,IDywEE,EAAEgxB,ACzwEE;MD0wEV,AC1wEY,CD0wEX,MC1wEkByvH,UAAU;IAAE,ED2wE/B3+H,KAAK,EAAE;QACNnhB,YAAY,EAAE,IAAI;IC1wEpB,ID2wEED,CC3wEG,MAAM,GD2wEC,EAAE,IAAI;IC3wEL,ID4wEXV,CC5wEgB,ID4wEX,EAAE8hB,AC5wEe;MD6wEvB,AC7wEyB,CD6wExB,MC7wE+B6+H,WAAW;IAAE,ED8wE7C93G,eAAe,EAAE;IC7wElB,ID8wEE7oC,CC9wEG,ID8wEE,EAAE,AC9wEE,ID8wEE6gC,OAAO,CAAC;IC9wER,ED+wEZ,CAAC,EC/wEgB,MAAM;MDgxEvBiI,AChxEyB,OAAO+3G,KDgxEpB,EAAE,IChxE6B;IAAE,IDixE5C7gJ,KAAK,EAAE,IAAIge,OAAO,CAAC;IChxErB,EDixEC,GCjxEI,MAAM;IDkxEX,AClxEa,CDkxEX,CAAC,GClxEe,MAAM;IDoxExBsqB,ECpxE0B,IDoxE1B,CAAKjmB,ECpxE4B2+H,IDoxEtB,GAAG,IAAIngH,ACpxE0B,ODoxEnB,CAAC,CAAC;IAC3ByH,ACrxE8C,MDqxE9C,CAAK9R,WAAW,GAAG,IAAIqK,OAAO,CAAC,CAAC;IAEhCyH,ACtxEA,KAAK,CDsxEL,CAAKje,ICtxEM,YDsxEU,GAAG+d,QAAQ,CAACW,0BAA0B;IAE3DT,ACxxEa,KAAK,CDwxElB,CAAKU,ICxxEmB,iBDwxEE,GAAGZ,QAAQ,CAACa,gCAAgC,CAAC,CAAC;IACxEX,ECzxE0B,IDyxE1B,CAAKY,ECzxE4Bi4G,WAAW,SDyxEjB,GAAG,KAAK;IAEnC74G,AC3xE8C,MD2xE9C,CAAKpB,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;IAC1B2B,MAAA,CAAKa,OAAO,GAAG,IAAI;IAEnBb,AC5xEA,KAAK,CD4xEL,CAAKc,IC5xEM,MD4xEI,GAAG,KAAK;IACvBd,EC7xEa,ID6xEb,CAAKe,EC7xEei4G,WD6xEF,CC7xEc,ED6xEX,KAAK;IAE1Bh5G,AC/xEkC,MD+xElC,CAAKgB,aAAa,GAAG,IAAI;IACzBhB,AC/xEA,KAAK,CD+xEL,CAAKiB,IC/xEM,OD+xEK,GAAG,CAAC;IAEpBjB,ECjyEa,IDiyEb,CAAKkB,ECjyEeg4G,QDiyEL,GAAG,CCjyEc,CDiyEZ;IAEpBl5G,ACnyEkC,MDmyElC,CAAK5d,QAAQ,GAAG,CAAC,CAAC;IAAC,AClyEnB,KAAK,EDkyEc4d,IClyER,EDkyEQ;EAEpB,ICpyEc,OAAOq5G,YAAY;EDoyEhC52H,ECpyEkC,ODoyElC,CAAAqd,QAAA,EAAAC,iBAAA;EAAA,ECnyEA,KDmyEAjiC,ACnyEK,MAAM,MDmyEX,CAAAgiC,QAAA;IAAAjiC,ECnyEa,CDmyEb,MCnyEoB27I,YAAY;IDmyEhC9hJ,ACnyEkC,KDmyElC,EAED,SAAAypC,cAAcA,CAAE,8EAA+E,CAAC;EAAC;IAAAtjC,ACnyEhG,GDmyEgG,ECnyE3F,MAAM,CAAC,CAAC;IDmyEmFnG,AClyEhG,KDkyEgG,AClyE3F,EDoyEN,ICpyEY,CAAC,CAAC,GDoyEd0pC,aAAaA,CAAE,8EAA+E,CAAC;EAAC,ECnyE/F,KAAK,MAAM,CAAC,CAAC;IDmyEkFvjC,AClyE/F,GDkyE+F,EClyE1F,MAAM,CAAC,CAAC;IDkyEkFnG,ACjyE/F,KDiyE+F,ACjyE1F,EDmyEN,ICnyEY,KDmyEZ2pC,cAAcA,CAAE,0DAA2D,CAAC;EAAC,ICnyE/D;IDmyE+DxjC,EClyE3E,CDkyE2E,MClyEpE87I,UAAU;IDkyE0DjiJ,AChyE5E,KDgyE4E,AChyEvE,EDkyEN,IClyEY,CAAC,CAAC,GDkyEd4pC,aAAaA,CAAE,0DAA2D,CAAC;EAAC,ECjyE3E,KAAK,MAAM,CAAC,CAAC;IDiyE8DzjC,AChyE3E,GDgyE2E,EChyEtE,MAAM;IDgyEgEnG,EChyE9D,GDgyE8D,EAE5E,SAAAisB,YAAYA,CAAE5J,MAAM,EAAG;MAEtB,ACnyEC,IDmyEI,GCnyEGigI,CDmyEC,CAACj4H,UCnyEU,MDmyEM,EAAG,IAAI,CAACW,YAAY,CAAC,CAAC;ICjyEhD,EDmyEA,GCnyEK,CDmyED,CAAC3I,ICnyEM,CAAC,CDmyED,ACnyEE,CDmyEDhD,WAAW,CAAEgD,MAAO,CAAC;IClyEjC,EDoyEA,GCpyEK,CDoyED,CAACA,ICpyEM,CAAC,CDoyED,ACpyEE,CDoyED4iB,SAAS,CAAE,IAAI,CAACP,QAAQ,EAAE,IAAI,CAAC1T,UAAU,EAAE,IAAI,CAAClP,KAAM,CAAC;IAEpE,ACryEC,KAAK,MAAM,CAAC,CAAC;EDqyEb,ECpyEA,KAAK,MAAM;IDoyEX3b,ECpyEa,CDoyEb;IAAAnG,ECnyEC,GDmyED,EAED,ECryESwiJ,ODqyETjtH,GCryEmB,YDqyEJA,CAAEld,CAAC,EAAG;ICnyEpB,EDqyEA,GCryEK,CDqyED,CAAC2Y,ICryEM,CAAC,CAAC,IDqyEE,CAAC3R,WAAW,CAAEhH,CAAE,CAAC;ICpyEhC,EDsyEA,GCtyEK,IDsyEE,ECtyEI,CAAC,CDsyED,ACtyEE;IDwyEd,ACvyEC,KAAK,MAAM,CAAC,CAAC;EDuyEb,ECtyEA,KAAK,MAAM;IDsyEXlS,ECtyEa,CDsyEb;IAAAnG,ECryEC,GDqyED,EAED,ECvyES0iJ,ODuyET74G,UCvyE0B,cDuyEFA,CAAEnY,IAAI,EAAEtV,KAAK,EAAG;ECryExC,IDuyEC;ACryEF;MDuyEE,IAAI,CAAC4U,UAAU,CAACS,gBAAgB,CAAEC,IAAI,EAAEtV,KAAM,CAAC;ACpyEjD,IDsyEC;EAAC;ACpyEF,IDoyEEjW,GAAA,ECpyEO08I,gBAAgBA,CAAEv/H,EAAE,EAAEthB,CAAC,EAAG;EAElCshB,EDkyECtjB,AClyEC,CAAC8iJ,IDkyEF,EAED,ICpyEa,CAAE,IDoyEfh5G,ACpyEmB,CAAC61G,IAAI,EAAE39I,CAAE,CAAC,WDoyET8nC,CAAE5Y,KAAK,EAAG;AClyE/B,MDoyEE,IAAI,CAACF,UAAU,CAACC,YAAY,CAAEC,KAAK,EAAE,IAAK,CAAC;IAE5C;ACpyED,EDoyEE;IAAA/qB,GAAA;AClyEF,IDkyEEnG,KAAA,AClyEO+iJ,EDoyER,SAAAh5G,KCpyEwBg5G,CAAEz/H,EAAE,EAAEthB,CAAC,EAAG,QDoyEb+nC,CAAEj0B,CAAC,EAAG;EClyE3B,IDoyEC,ACpyEKiS,IAAI,GAAGm3H,OAAO,CAAEl9I,CAAC,EAAE,IAAI,CAACg3B,IAAI,EAAE,CAAE,CAAC;EAEvC1V,EAAE,CAACw8H,UAAU,CAAE,IAAI,CAACH,IAAI,EAAE53H,IAAK,CAAC;AAEjC,MDkyEE,IAAI,CAACiJ,UAAU,CAACY,qBAAqB,CAAE9b,CAAE,CAAC;AChyE5C,IDkyEC,KClyEQktI,gBAAgBA,CAAE1/H,EAAE,EAAEthB,CAAC,EAAG;EDkyEjC,AChyED,IAAM+lB,IAAI,GAAGm3H,OAAO,CAAEl9I,CAAC,EAAE,IAAI,CAACg3B,IAAI,EAAE,CAAE,CAAC;EAEvC1V,ED8xECnd,AC9xEC,CAAC85I,ED8xEF,QC9xEY,CAAE,IAAI,CAACN,IAAI,EAAE53H,IAAK,CAAC;AAEjC,ID4xEE/nB,KAAA,EAED,SAAAgqC,yBAAyBA,CAAE3xB,CAAC,EAAG;AC5xEhC,MD8xEE,GC9xEO4qI,gBAAgBA,CAAE3/H,EAAE,EAAEthB,CAAC,EAAG;EAElC,IAAM+lB,IAAI,GAAGm3H,OAAO,CAAEl9I,CAAC,EAAE,IAAI,CAACg3B,IAAI,EAAE,CAAE,CAAC;EAEvC1V,EAAE,CAAC88H,CD4xEF,IAAI,CAACpvH,IC5xEO,CAAE,IAAI,CD4xEH,AC5xEI2uH,CD4xEHjlI,GC5xEO,CD4xEH,CAAErC,AC5xEG0P,CD4xED,CAAC,EC5xEK,CAAC;AAEjC,ID4xEC;EAAC;AC1xEF,ID0xEE5hB,GAAA;IAAAnG,KAAA,EAED,SAAAiqC,YAAYA,CAAEvY,IAAI,EAAEtV,KAAK,EAAG;AC1xE7B,MD4xEE,GC5xEO8mI,eAAeA,CAAE5/H,EAAE,EAAEthB,CAAC,EAAG;EAEjC,ID2xEC,AC3xEK+lB,IAAI,GAAGm3H,OAAO,CAAEl9I,CAAC,EAAE,IAAI,CAACg3B,IAAI,EAAE,CAAE,CAAC;EAEvC1V,EAAE,CAACg9H,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAE53H,IAAK,CAAC;AAE9C,MDyxEEuf,GAAG,CAAC7V,gBAAgB,CAAEC,IAAI,EAAEtV,KAAM,CAAC;ACvxErC,MDyxEE,GCzxEO+mI,CDyxEH,CAACnyH,UAAU,CAAC9V,ECzxEMioI,CAAE7/H,EAAE,EAAEthB,CDyxEJ,ACzxEK,CDyxEHslC,CCzxEM,EDyxEF,CAAC;ECvxEhC,IDyxEC,ACzxEKvf,IAAI,GDyxEF,ACzxEKm3H,IDyxED,GCzxEQ,CAAEl9I,CAAC,EAAE,IAAI,CAACg3B,IAAI,EAAE,CAAE,CAAC;EAEvC1V,EDyxEA,ACzxEE,CAACk9H,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAE53H,IAAK,CAAC;AAE9C,EDuxEE;ACrxEF,IDqxEE5hB,GAAA,ECrxEOi9I,eAAeA,CAAE9/H,EAAE,EAAEthB,CAAC,EAAG;EAEjC,EDmxEChC,ECnxEK+nB,GDmxEL,CCnxES,CDqxEV,ECrxEam3H,ODqxEbh1G,ACrxEoB,CAAEloC,CAAC,EAAE,IAAI,CAACg3B,IAAI,EAAE,EDqxEnBkR,ACrxEsB,CDqxEpBxY,ACrxEqB,IDqxEjB,EAAEtV,KAAK,EAAG;ECnxEjCkH,EAAE,CAACo9H,CDqxEF,eCrxEkB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAE53H,IAAK,CAAC;AAE9C,MDoxEE;MACA;ACnxEF;MDqxEEuf,GAAG,CAAC7V,gBAAgB,CAAEC,IAAI,EAAEtV,KAAM,CAAC;ACnxErC,MDqxEE,GCrxEOinI,CDqxEH,CAACryH,UAAU,CAAC3R,GCrxEOgkI,CAAE//H,EAAE,EAAEthB,CAAC,EDqxEH,ACrxEM,CDqxEJslC,GAAI,CAAC;ECnxEnChkB,EAAE,CAACggI,CDqxEF,OAAO,ECrxEK,CAAE,CDqxEH,GCrxEO,CAAC3D,IAAI,EAAE39I,CAAE,CAAC;AAE9B,IDqxEC;EAAC;ACnxEF,IDmxEEmE,GAAA;IAAAnG,KAAA,EAED,SAAAmqC,OAAOA,CAAE/tB,KAAK,EAAG;ACnxElB,MDqxEE,GCrxEOmnI,IDqxEA,IAAI,CAACt5G,OCrxEWs5G,CAAEjgI,EAAE,EDqxEH,ACrxEKthB,CDqxEH4lC,ACrxEI,EAAG,IDqxED,EAAExrB,KAAM,CAAC;ECnxE1CkH,EDqxEA,ACrxEE,CAACy9H,UAAU,CAAE,IAAI,CAACpB,IAAI,EAAE39I,CAAE,CAAC;AAE9B,EDmxEE;ACjxEF,IDixEEmE,GAAA,ECjxEOq9I,gBAAgBA,CAAElgI,EAAE,EAAEthB,CAAC,EAAG;EAElCshB,ED+wECtjB,AC/wEC,CAACkhJ,ID+wEF,EAED,ICjxEa,CAAE,IDixEf92G,ACjxEmB,CAACu1G,IAAI,EDixEjBv1G,ACjxEmBpoC,CDixEjBoa,ACjxEmB,CAAC,IDixEf,EAAG;AC/wElB,MDixEE,OAAO,IAAI,CAAC6tB,YAAY,CAAEpC,MAAM,EAAEzrB,KAAM,CAAC;AC/wE3C,IDixEC,KCjxEQqnI,gBAAgBA,CAAEngI,EAAE,EAAEthB,CAAC,EAAG;EDixEjC,AC/wEDshB,EAAE,CAAC+9H,UAAU,CAAE,IAAI,CAAC1B,IAAI,EAAE39I,CAAE,CAAC;AAE9B,ID6wEEmE,GAAA;IAAAnG,KAAA,EAED,SAAAqqC,OAAOA,CAAEjuB,KAAK,EAAG;AC7wElB,MD+wEE,OAAO,IAAI,CAAC6tB,YAAY,CAAEnC,MAAM,EAAE1rB,KAAM,CAAC;IAE1C;AC/wED,ED+wEE,OC/wEOsnI,iBAAiBA,CAAEpgI,EAAE,EAAEthB,CAAC,EAAG;EAEnCshB,ED6wECnd,AC7wEC,CAACw9I,ED6wEF,SC7wEa,CAAE,IAAI,CAAChE,IAAI,EAAE39I,CAAE,CAAC;AAE/B,ID2wEEhC,KAAA,EAED,SAAAsqC,eAAeA,CAAE5Y,IAAI,EAAE6Y,QAAQ,EAAG;MAEjC;AC7wEF,MD8wEE;;AC5wEF,MD8wEElD,GC9wEOu8G,ED8wEF,CAAClpI,IAAI,CAAEgX,IAAK,CAAC,CAAC6D,GC9wEKquH,CAAEtgI,EAAE,EAAEthB,CAAC,EAAG,ID8wEA,CAAE,IAAI,CAACgvB,UAAW,CAAC;EC5wEtD1N,EAAE,CAACo+H,CD8wEF,IAAI,CAACh9G,KC9wEQ,CAAE,ED8wEF,CAAC/pB,CC9wEK,CAACglI,CD8wEH,CAAEt4G,EC9wEK,EAAErlC,CD8wEF,AC9wEI,CD8wEHmZ,AC9wEI,cD8wEU,CAAEovB,QAAS,CAAE,CAAC;AC5wEvD,MD8wEE,OAAO,IAAI;AC5wEb,ID8wEC,KC9wEQs5G,iBAAiBA,CAAEvgI,EAAE,EAAEthB,CAAC,EAAG;ED8wElC,AC5wEDshB,EAAE,CAACu+H,WAAW,CAAE,IAAI,CAAClC,IAAI,EAAE39I,CAAE,CAAC;AAE/B,ID0wEEmE,GAAA;ACxwEF,IDwwEEnG,KAAA,ACxwEO8jJ,ED0wER,SAAAt5G,MC1wEyBs5G,CAAExgI,EAAE,CD0wEnBknB,CAAED,AC1wEmBvoC,CAAC,EAAG,KD0wEf,EAAG;ECxwEvBshB,EAAE,CAAC0+H,CD0wEF,OAAO,GC1wEM,CD0wEF,AC1wEI,CD0wEH13G,GC1wEO,CAACq1G,IAAI,EAAE39I,CAAE,CAAC,GD0wEF,CAAE4lC,MAAM,EAAE2C,QAAS,CAAC;ACxwEjD,ID0wEC;EAAC;ACvwEF,IDuwEEpkC,GAAA;IAAAnG,KAAA,EAED,SAAAyqC,UAAUA,CAAEF,QAAQ,EAAG;ACvwExB,MDywEE,GCzwEOw5G,IDywEA,IAAI,CAACz5G,MCzwEUy5G,CAAEzgI,EAAE,EAAEthB,CAAC,EAAEqpB,CDywEJ,CAAEwc,MAAM,ACzwEI,EDywEF0C,ACzwEK,QDywEI,CAAC;ECvwEhD,EDywEA,ECzwEM8F,KAAK,GAAG,IAAI,CAACA,KAAK;EDywEvB,ACvwED,IAAMzwC,CAAC,GAAGoC,CAAC,CAACsC,MAAM;EAElB,EDqwEC6B,ECrwEK69I,CDqwEL,ICrwEU,GAAGzE,aAAa,CAAEl0H,QAAQ,EAAEzrB,CAAE,CAAC;EAE1C,EDmwECI,ECnwEI,CAAEs/I,EDmwEN,EAED,OCrwEkB,CAAEjvG,CDqwEpB3F,ICrwEyB,EAAEs5G,IDqwEjBt5G,CAAEH,ACrwEqB,CAAC,EAAG,KDqwEjB,EAAG;ICnwEtBjnB,EDqwEA,ACrwEE,CAACggI,MDqwEI,IAAI,ACrwEE,CDqwEDh5G,ACrwEG,IAAI,CAACq1G,IAAI,EAAEqE,IDqwEC,CAAEl8G,ACrwEG,CAAC,KDqwEE,EAAEyC,QAAS,CAAC;IAEhD,ACrwECuV,SAAS,CAAEzP,KAAK,EAAE2zG,KAAM,CAAC;EDqwEzB,ACnwED;EAEA,EDiwEC79I,GAAA,ACjwEK,IAAIlG,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IDiwEhCD,AC/vEAqrB,KD+vEA,EAED,CCjwES,CAACg3H,ODiwEV13G,KCjwEsB,CAAE3oC,CAAC,CAAE/B,CAAC,CAAE,EDiwElB0qC,CAAE/Q,CCjwEoB4kH,KDiwEd,EAAG,KCjwEuB,EAAEwF,KAAK,CAAE/jJ,CAAC,CAAG,CAAC;EAE5D,IDiwEC,IAAI,CAAC65B,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;AC/vEvC,MDiwEE,OAAOF,MAAM,CAAC3N,YAAY,CAAE,IAAI,CAACuK,WAAY,CAAC;AC/vEhD,IDiwEC,KCjwEQytH,gBAAgBA,CAAE3gI,EAAE,EAAEthB,CAAC,EAAEqpB,QAAQ,EAAG;EDiwE3C,AC/vED,IAAMglB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,ED6vEClqC,EC7vEKvG,CD6vEL,AC7vEM,GAAGoC,CAAC,CAACsC,MAAM;EAElB,ED2vECtE,EC3vEKgkJ,GD2vEL,EAED,AC7vEW,GAAGzE,MD6vEd30G,OC7vE2B,CAAEvf,ID6vEjBuf,CAAEhR,GC7vEuB,EAAEh6B,CD6vEnB,AC7vEqB,CAAC,CD6vEnB;EC3vEvB,ID6vEC,AC7vEI,CAAE0/I,GD6vEF,CAACxlH,OC7vEY,CAAEuW,KAAK,EAAE2zG,ED6vEJ,CAAE,EC7vEQ,CAAC,CD6vEL,CC7vEQ,CD6vEN,KAAM,CAAC;IC3vErC1gI,ED6vEA,AC7vEE,CAACggI,MD6vEI1pH,IC7vEM,CAAE,CD6vEF,CAAC3N,EC7vEK,CAAC0zH,IAAI,EAAEqE,GD6vEA,CAAEz8G,CC7vEI,CAAC,GD6vEA,CAAC7sB,IAAI,CAAE,IAAI,CAAC8b,WAAY,CAAC,CAAC7V,MAAM,CAAC,CAAE,CAAC;IAEtE,AC7vECm/B,SAAS,CAAEzP,KAAK,EAAE2zG,KAAM,CAAC;ED6vEzB,AC3vED;EAEA,EDyvEC79I,GAAA,ACzvEK,IAAIlG,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IDyvEhCD,ACvvEAqrB,KDuvEA,EAED,CCzvES,CAACk3H,ODyvEVnkH,KCzvEsB,CDyvEhBA,ACzvEkBp8B,CDyvEhBgU,ACzvEiB,CDyvEhB,ACzvEkB/V,CAAC,CDyvEjByB,ACzvEmB,CDyvElB,EAAEkqB,CAAC,ACzvEmB+yH,EDyvEhB,YCzvE8B,EAAEqF,KAAK,CAAE/jJ,CAAC,CAAG,CAAC;EAE9D,IDyvEC;ACvvEF;AAEA,MDuvEE,GCvvEOikJ,CDuvEFluI,CAAC,CAACof,SAAS,EAAG,CCvvEG8uH,CAAE5gI,EAAE,EAAEthB,CAAC,EAAEqpB,QAAQ,EAAG;EAE3C,IAAMglB,EDuvEJ7I,GCvvES,GAAG,CDuvEL,CAAC9sB,ECvvEQ,CAAC21B,CDuvEL,CAAEr6B,CAAE,CAAC,CCvvEK;EAExB,IDuvEC,ACvvEKpW,CDuvEJ,ACvvEK,GAAGoC,CAAC,CAACsC,CDuvEJ,KCvvEU;EAElB,IAAM0/I,EDuvEJx8G,GCvvES,GAAG+3G,CDuvEL,CAACrmI,GAAG,CAAElD,CAAC,EAAEtU,CAAC,EAAEkqB,CAAE,ACvvEI,CDuvEH,ACvvEKP,QAAQ,EAAEzrB,CAAE,CAAC;EAE1C,IDuvEC,ACvvEI,CAAE0/I,WAAW,CAAEjvG,KAAK,EAAE2zG,KAAM,CAAC,EAAG;IAEpC1gI,EDuvEA,ACvvEE,CAACggI,GDuvEG96G,MAAM,CCvvEC,CAAE,CDuvEA,GCvvEI,CDuvEA,ACvvECm3G,CDuvEAn3G,GCvvEI,EAAEw7G,CDuvEA,ICvvEM,CAAC;IAEjClkG,EDuvEA,IAAI,CAAChmB,ECvvEI,CAAEuW,KAAK,EAAE2zG,KAAM,CAAC,CDuvEH,CAAE,IAAI,EAAE,KAAM,CAAC;ECrvEtC,IDuvECv8G,WAAW,CAACpa,qBAAqB,CAAE,IAAI,CAACmJ,WAAY,CAAC;ECrvEtD,IDuvEC,CCvvEK,GDuvEA,CCvvEIv2B,CAAC,EDuvED,CAAC4qC,ACvvEG,CAAC,EAAE5qC,CAAC,IDuvEC,CCvvEIL,CAAC,EDuvED,ACvvEG,EAAGK,CAAC,CDuvEH,CAAC6qC,ACvvEK,ODuvEE,EAAG;ICrvErCzf,IDuvECkc,ICvvEO,CDuvEF,ACvvEGk7G,CDuvEFrkH,MAAM,CAAEqJ,MCvvEQ,CAAEzlC,CAAC,CAAE/B,CAAC,CDuvEH,ACvvEK,EDuvEHunC,ECvvEOo3G,KDuvEA,EAAE,IAAI,CAAC97G,EAAG,CAAC,CCvvEK,EAAEkhH,KAAK,CAAE/jJ,CAAC,CAAG,CAAC;EAElE,IDuvEC,CAAC,MAAM;ACrvET,QDuvEGsnC,KAAK,CAACnJ,MAAM,CAAEoJ,OAAO,EAAEC,WAAW,EAAE,IAAI,CAAC3E,EAAG,CAAC;ACrvEhD,MDuvEE,GCvvEOqhH,qBAAqBA,CAAE7gI,EAAE,EAAEthB,CAAC,EAAEqpB,QAAQ,EAAG;EAEjD,IDuvEC,ACvvEKglB,IDuvED,CAACrf,ACvvEK,GAAG,IAAI,CAACqf,EDuvEH,CAACze,ECvvEO,mBDuvEc,CAAE2V,KAAM,CAAC;ECrvE/C,IDuvEC,ACvvEK3nC,CAAC,GDuvED4oC,ACvvEIxmC,CAAC,CAACsC,IDuvEA,EAAG,ACvvEG;EAElB,IAAM0/I,EDuvEJz8G,GCvvES,EDuvEJ,CAAC9F,ACvvEM89G,aAAa,CAAEl0H,CDuvEN,CAAEmd,MAAM,ACvvEM,CDuvELhS,CCvvEO52B,CAAE,CAAC,QDuvEE,CAAC;ECrvE7C,IAAK,CAAE0/I,CDsvELh4G,GAAG,CAAC1V,MCtvEY,CAAEye,KAAK,EAAE2zG,KAAM,CAAC,CDsvEP,CAAEz8G,ACtvEQ,KDsvEF,CAAC;ICpvEnCjkB,EAAE,CAACggI,CDqvEF,IAAI,CAACtyH,ICrvEO,CAAE,IAAI,CDqvEH,ACrvEI2uH,CDqvEHtgI,GCrvEO,EAAE2kI,KAAM,CDqvEJ,ACrvEK,CDqvEH18G,GAAG,CAAC3mB,MAAM,CAAC,CAAE,CAAC;ICnvE5Cm/B,EDqvEA,OCrvES,CAAEzP,KAAK,EAAE2zG,KAAM,CAAC;EAE1B,EDqvEA;EAAC,ACnvED,KAAM,IAAI/jJ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IDmvEhCkG,ACjvEAklB,GDivEA,KCjvEQ,CAACs3H,iBAAiB,CAAE3gJ,CAAC,CAAE/B,CAAC,CAAE,IAAIy+I,iBAAiB,EAAEsF,KAAK,CAAE/jJ,CAAC,CAAG,CAAC;EAEtE,ED+uECD,KAAA,EAED,SAAA2a,GAAGA,CAAEwe,MAAM,EAAG;AC/uEf,MDivEE,IAAKviB,SAAS,CAACtS,MAAM,GAAG,CAAC,EAAG;QAE3B,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2W,SAAS,CAACtS,MAAM,EAAErE,CAAC,EAAG,EAAG;AChvEjD,UDkvEI,IAAI,CAAC0a,GAAG,CAAE/D,SAAS,CAAE3W,CAAC,CAAG,CAAC;QAE3B;AClvEH,QDovEG,CCpvEMmkJ,MDovEC,IAAI,QCpvEaA,CAAEjjJ,IAAI,EAAG;EAEnC,IDovEC,ICpvEQA,IAAI;IAEZ,EDovEA,GCpvEK,CDovEAg4B,KCpvEM,CDovEA,KAAK,IAAI,EAAG;MCpvEV,EDsvEZhgB,KCtvEmB0pI,EDsvEZ,CAAC93G,KAAK,CAAE,OCtvEoB,2DDsvE8C,EAAE5R,MAAO,CAAC;ICtvEtD,IDuvErC,OAAO,IAAI;ICtvEZ,EDwvEA,GCxvEK,MAAM;MD0vEX,AC1vEa,ID0vERA,GC1vEe4pH,GD0vET,IAAI5pH,MAAM,CAACoP,EC1vEc,QD0vEJ,EAAG;IC1vEG,ID4vErCpP,MAAM,CAAC6R,gBAAgB,CAAC,CAAC;IC3vE1B,ID4vEC7R,CC5vEI,KD4vEE,CAACqP,AC5vEG,MD4vEG,GAAG,IAAI;MC5vER,ED6vEZ,IAAI,CAAC/N,AC7vEcuoH,QD6vEN,CAAC/+I,IAAI,CAAEk1B,EC7vEe,ID6vER,CAAC;IC7vES,ID+vErCA,MAAM,CAAC3kB,aAAa,CAAEuzB,WAAY,CAAC;IC9vEpC,IDgwECE,CChwEI,MAAM,SDgwEM,CAACC,KAAK,GAAG/O,MAAM;MChwEnB,EDiwEZ,IAAI,CAAC3kB,ACjwEcyuI,aDiwED,CAAEh7G,ECjwEe,cDiwEE,CAAC;ICjwED,IDkwErCA,gBAAgB,CAACC,KAAK,GAAG,IAAI;MAE9B,CAAC,MAAM;IClwEP,IDowEC/uB,CCpwEI,MDowEG,ACpwEG,CDowEF4xB,KAAK,CAAE,+DAA+D,EAAE5R,MAAO,CAAC;MAEzF,ACtwEa,OAAO+pH,eAAe;IAAE,EDwwErC,OAAO,IAAI;IAEZ,ACzwEC,KAAK,MAAM;EDywEX,ICzwEa,OAAOC,eAAe;IDywEnCh9I,ACzwEqC,GDywErC;IAAAnG,ACxwEA,KDwwEA,ACxwEK,ED0wEN,IC1wEY,KD0wEZirC,MAAMA,CAAE9R,MAAM,EAAG;MAEhB,AC5wEa,ID4wERviB,GC5wEewsI,MD4wEN,CAAC9+I,MAAM,EC5wEc,CD4wEX,CAAC,EAAG;IC5wES,ID8wEpC,KAAM,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2W,SAAS,CAACtS,MAAM,EAAErE,CAAC,EAAG,EAAG;UAE7C,IAAI,CAACgrC,MAAM,CAAEr0B,SAAS,CAAE3W,CAAC,CAAG,CAAC;IC9wE/B,IDgxEC,CChxEI,MAAM;IAAE,IDkxEZ,CClxEiB,MDkxEV,AClxEgB,IDkxEZ;MAEZ,ACpxE0B,OAAOojJ,gBAAgB;IAAE,EDsxEnD,IAAM/uI,KAAK,GAAG,IAAI,CAACmmB,QAAQ,CAACvmB,OAAO,CAAEilB,MAAO,CAAC;ICrxE7C,EDuxEA,GCvxEK,CDuxEA7kB,KAAK,ACvxEC,KDuxEI,CAAE,CAAC,EAAG;ICvxER,IDyxEZ6kB,CCzxEiB,KDyxEX,CAACqP,ACzxEgB,MDyxEV,GAAG,IAAI;MCzxEK,ED0xEzB,IAAI,CAAC/N,AC1xE2B8oH,QD0xEnB,CAAChvI,MAAM,CAAED,AC1xE0B,KD0xErB,EAAE,CAAE,CAAC;IC1xEkB,ID4xElD6kB,MAAM,CAAC3kB,aAAa,CAAEwzB,aAAc,CAAC;IC3xEtC,ID6xECG,CC7xEI,MAAM,WD6xEQ,CAACD,KAAK,GAAG/O,MAAM;IC7xErB,ID8xEZ,CC9xEiB,GD8xEb,CAAC3kB,EC9xEkB,WD8xEL,CAAE2zB,kBAAmB,CAAC;MC9xEf,ED+xEzBA,KC/xEgCq7G,aD+xEd,CAACt7G,EC/xE6B,GD+xExB,GAAG,IAAI;IC/xEmB,EDiyEnD;IChyEA,EDkyEA,GClyEK,IDkyEE,EClyEI,EDkyEA;IAEZ,ACpyEc,KAAK,MAAM;EDoyExB,ICpyE0B,OAAOu7G,gBAAgB;IDoyEjDt9I,ACpyEmD,GDoyEnD;IAAAnG,KAAA,EAED,SAAAgrC,gBAAgBA,CAAA,EAAG;ICpyElB,EDsyEA,GCtyEK,CDsyECxC,KCtyEK,CDsyEC,GAAG,IAAI,CAACA,MAAM;MAE1B,ACxyEa,IDwyERA,GCxyEek7G,GDwyET,KAAK,IAAI,EAAG,GCxyEc;IAAE,ID0yEtCl7G,MAAM,CAACyC,MAAM,CAAE,IAAK,CAAC;ICzyEtB,ED2yEA,GC3yEK,MAAM;MD6yEX,AC7yEa,OD6yEN,AC7yEa24G,ID6yET,aC7yE0B;ID+yEtC,AC/yEwC;ED+yEvC,EC9yEA,KAAK,MAAM;ID8yEXz9I,EC9yEa,CD8yEb,MC9yEoB09I,iBAAiB;ID8yErC7jJ,AC9yEuC,KD8yEvC,EAED,SAAA4vB,KAAKA,CAAA,EAAG;IC/yEP,EDizEA,GCjzEK,IDizEE,ECjzEI,EDizEA,CAACqb,MAAM,CAAAC,KAAA,CAAX,IAAI,EAAAC,kBAAA,CAAa,IAAI,CAAC1Q,QAAQ,CAAC,CAAC;IAExC,ECnzEc,OAAOqpH,iBAAiB;EDmzErC,ECnzEuC;IDmzEvC39I,GAAA;IAAAnG,ACjzEA,KDizEA,ACjzEK,EDmzEN,ICnzEY,CAAC,CAAC,GDmzEdorC,MAAMA,CAAEjS,MAAM,EAAG;IClzEhB,EDozEA,GCpzEK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,EDozEA,GCpzEK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MDqzEX,ACrzEa,IDqzET,CAACW,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErCyN,ACtzEC,KDszEI,CAAC7sB,CCtzEEqpI,GDszEE,CAAE,IAAI,CAACvtH,MCtzEM,KDszEM,CAAC,CAAC7V,MAAM,CAAC,CAAC;ICpzEvC,EDszEA,GCtzEK,CDszEAwY,KCtzEM,CDszEA,ACtzEC,CDszEAqP,ACtzEC,MDszEK,KAAK,IAAI,EAAG;ICrzE9B,IDuzECrP,CCvzEI,KDuzEE,CAACqP,ACvzEG,CAAC,CAAC,IDuzEC,CAAC1O,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;ICtzE/C,IDwzECyN,CCxzEI,IDwzEC,CAACrsB,CCxzEI,ODwzEI,CAAEie,MAAM,CAACqP,MAAM,CAAChS,WAAY,CAAC;MAE5C,AC1zEa;MD4zEb2C,AC3zEC,MD2zEK,CAAClN,AC3zECg4H,YD2zEW,CAAE18G,GC3zEG,ED2zEG,CAAC;ICzzE5B,ED2zEApO,GC3zEK,GD2zEC,CAAC6R,EC3zEI,CAAC,CAAC,YD2zEU,CAAC,CAAC;IC1zEzB,ED2zEA7R,GC3zEK,GD2zEC,CAACqP,EC3zEI,CAAC,CAAC,ED2zEA,GAAG,IAAI;IC1zEpB,ED2zEA,GC3zEK,CD2zED,CAAC/N,IC3zEM,CAAC,CAAC,ED2zEA,CAACx2B,IAAI,CAAEk1B,MAAO,CAAC;IC1zE5B,ED4zEAA,GC5zEK,GD4zEC,CAACW,EC5zEI,eD4zEa,CAAE,KAAK,EAAE,IAAK,CAAC;MAEvCX,AC9zEa,MD8zEP,CAAC3kB,aAAa,CAAEuzB,WAAY,CAAC;MAEnCE,AC/zEC,OAAOi8G,SD+zEQ,CAACh8G,KAAK,AC/zEC,GD+zEE/O,MAAM;IC7zE/B,ED8zEA,GC9zEK,CD8zED,CAAC3kB,IC9zEM,CAAC,CAAC,OD8zEK,CAAEyzB,gBAAiB,CAAC;IC7zEtC,ED8zEAA,GC9zEK,MAAM,CAAC,CAAC,KD8zEG,CAACC,KAAK,GAAG,IAAI;IC7zE7B,ED+zEA,GC/zEK,ID+zEE,EC/zEI,CAAC,CD+zED,AC/zEE;IDi0Ed,ACh0EC,KAAK,MAAM;EDg0EX,ICh0Ea;IDg0Eb/hC,EC/zEC,CD+zED,MC/zEQg+I,qBAAqB;EAE9B,ED6zECnkJ,KAAA,EAED,SAAAqrC,aAAaA,CAAEC,EAAE,EAAG;AC7zErB,MD+zEE,OAAO,IAAI,CAACC,mBAAmB,CAAE,IAAI,EAAED,EAAG,CAAC;IAE5C;AC/zED,ED+zEE;AC/zEF,ID+zEEnlC,AC7zEIk+I,GD6zEJ,UC7zEiB,gBAAAj+I,YAAA,CAElB,SAAAi+I,cAAa/4G,EAAE,EAAEg5G,UAAU,EAAE3E,IAAI,EAAG;EAAA35I,ED2zEnChG,KAAA,EAED,MC7zEoC,GD6zEpCwrC,IC7zEoC64G,WD6zErB74G,CAAE9mC,CC7zEmB,GD6zEf,EAAG;EC3zEvB,ID6zEA,AC7zEI,CAAC4mC,EAAE,GAAGA,CD6zEH,CC7zEK,GD6zED,CAACC,mBAAmB,CAAE,MAAM,EAAE7mC,IAAK,CAAC;EC5zE/C,ED8zED,EC9zEK,CAACi7I,IAAI,GAAGA,IAAI;ED8zEhB,AC7zEA,IAAI,CAACtvG,KAAK,GAAG,EAAE;EACf,ED4zEAlqC,EC5zEI,CD4zEJ,AC5zEKhF,IAAI,GAAGmjJ,UAAU,CAACnjJ,IAAI;EAC3B,ED2zEAnB,EC3zEI,CAAC+5G,ED2zEL,EAED,IC7zEc,GAAG6oC,ED6zEjBr3G,eC7zEkC,CAAE+4G,GD6zEjB/4G,CAAE7mC,IAAI,EAAE1E,AC7zEmB,CAACmB,ID6zEf,AC7zEoB,CAAC,CD6zElB;MAElC,IAAK,IAAI,CAAEuD,IAAI,CAAE,KAAK1E,KAAK,EAAG,OAAO,IAAI;EC7zEzC,ID+zEA,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAACk5B,QAAQ,CAACn2B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;AC7zE1D,CAAC,OD+zEC,IAAMioC,KAAK,GAAG,IAAI,CAACzN,QAAQ,CAAEx6B,CAAC,CAAE;AC/zEjC,IAIIskJ,ID4zEH,IAAMprH,MAAM,EC5zEO,CD4zEJ+O,KAAK,CAACqD,SC5zEFnlC,UD4zEqB,CAAE1B,CC5zEvB,CAErB,ED0zEgD,EAAE1E,KAAM,AC1zExDukJ,CD0zEyD,gBC1zE5Cj5G,EAAE,EAAEg5G,UAAU,EAAE3E,IAAI,EAAG;EAAA35I,MD4zElC,IAAKmzB,KC5zE6B,CD4zEvB,KAAKnlB,CC5zEkBuwI,QD4zET,EAAG,MC5zEM;EAEnC,IAAI,CAACj5G,EAAE,CD4zEL,EC5zEQA,EAAE,GD4zEHnS,MAAM;EC3zEf,IAAI,CAACwmH,CD6zEJ,GC7zEQ,GAAGA,IAAI;EAChB,ID8zEA,AC9zEI,CAACtvG,KAAK,GAAG,EAAE;EACf,ID+zEA,AC/zEI,CAAClvC,IAAI,ED+zEF6S,CC/zEKswI,QD+zEI,EC/zEM,CAACnjJ,IAAI;EAC3B,EDg0ED,ECh0EK,CAAC63B,IAAI,GAAGsrH,UAAU,CAACtrH,IAAI;EDg0E3B,AC/zEA,IAAI,CAAC+gF,QAAQ,GAAGqqC,kBAAkB,CAAEE,UAAU,CAACnjJ,IAAK,CAAC;ID+zErDgF,GAAA;EC7zEA,ED6zEAnG,KAAA,EAED,SAAAyrC,oBAAoBA,CAAE/mC,IAAI,EAAE1E,KAAK,EAAgB;AC7zEjD,CAAC,KD6zEgD,IAAd0rC,MAAM,GAAA90B,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,EAAE;AC7zE7C,IAII4tI,ED2zEJ,IAAK,IAAI,CAAE9/I,IAAI,CAAE,CC3zEI,ID2zEC1E,KAAK,EAAG0rC,MAAM,CAACznC,IAAI,CAAE,IAAK,CAAC;ECzzElD,ID2zEC,IAAMw2B,CC3zEP+pH,OD2zEe,GAAG,IAAI,CAAC/pH,GC3zEV6Q,EAAE,EAAG,CD2zEa;IC3zEbtlC,ED6zEjB,KAAM,IAAI/F,CAAC,GAAG,AC7zEG,CD6zEF,EAAEsB,CAAC,GAAGk5B,AC7zEJ+pH,QD6zEY,CAAClgJ,MAAM,EAAErE,AC7zErB,CD6zEsB,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;IC3zEpD,ID6zECw6B,AC7zEG,CAAC6Q,EAAE,GAAGA,ED6zED,AC7zEG,CD6zEDrrC,CAAC,CAAE,CAACwrC,oBAAoB,CAAE/mC,IAAI,EAAE1E,KAAK,EAAE0rC,MAAO,CAAC;IC3zE1D,ED6zEA,EC7zEI,CAAC+4G,GAAG,GAAG,EAAE;IACb,ED8zEA,EC9zEI,CAAC92G,GAAG,CD8zEDjC,EC9zEI,CAAC,CAAC,ED8zEA;EC5zEd,ED8zEA;EAAC,AC9zEA,OAAAtlC,YAAA,CAAAo+I,iBAAA;ID8zEAr+I,AC9zEAA,GD8zEA,AC9zEA;ID8zEAnG,AC9zEAA,KD8zEA,AC9zEA,EDg0ED,AC9zEA,SD8zEA2rC,AC9zEAouE,QAAQA,CAAEz2F,EAAE,EAAEtjB,GD8zEE2rC,CAAEj3B,CC9zEC,EAAE2W,GD8zEG,EAAG,GC9zEE,EAAG;MDg0E/B,AC9zEA,ID8zEI,AC9zEEo5H,CD8zED3qH,EC9zEI,GAAG,IAAI,CAAC2qH,GAAG,ID8zEE,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,AC9zEA,KAAM,ED8zEC/vI,EC9zEGzU,CAAC,GD8zEE,AC9zEC,CD8zEAotB,AC9zEC,EAAEztB,CAAC,GAAG6kJ,GAAG,CAACngJ,MAAM,EAAErE,CAAC,ED8zEC,CAAE,EC9zEEL,CAAC,CD8zEC,CAAC42B,AC9zEA,EAAGv2B,CAAC,EAAG,MD8zEK,CAAC;IAExD,IC9zEE,IAAMM,CAAC,GAAGkkJ,GAAG,CAAExkJ,CAAC,CAAE;ED8zEnB,MC7zECM,CAAC,CAACw5G,QAAQ,CAAEz2F,EAAE,EAAEtjB,KAAK,CAAEO,CAAC,CAAC+qC,EAAE,CAAE,EAAEjgB,QAAS,CAAC;ID6zE1CllB,EC3zEA,CD2zEA;IAAAnG,ACzzED,KDyzEC,EAED,SAAA4rC,kBAAkBA,CAAEl3B,MAAM,EAAG;EC3zE5B,ID6zEA,IAAI,CAAColB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;AC7zErC,KAIF,CD2zEE,IAAI,CAACtD,WAAW,CAACyO,SAAS,CAAEwC,WAAW,EAAE/yB,MAAM,EAAEgzB,QAAS,CAAC;ACzzE7D,MD2zEE,OAAOhzB,MAAM;ACzzEf,ID2zEC,AC3zEKgwI,UAAU,GAAG,qBAAqB;ED2zEtC;ACzzEF,IDyzEEv+I,GAAA;ACxzEF,IDwzEEnG,KAAA,EAED,SAAA6rC,aAAaA,CAAEn3B,MAAM,EAAG;ACzzEzB,MD2zEE,IAAI,CAAColB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;AC1zEvC,MD4zEE,IAAI,CAACtD,WAAW,CAACyO,SAAS,CAAEwC,WAAW,EAAEE,aAAa,EAAEjzB,MAAO,CAAC;AC3zElE,MD6zEE,OAAOA,MAAM;AC5zEf,ID8zEC;AC7zED,ED6zEE;AC5zEF,ID4zEEvO,GAAA;IAAAnG,KAAA,EAED,SAAA8rC,iBAAiBA,CAAEp3B,MAAM,EAAG;AC5zE7B,MD8zEE,GC9zEOiwI,CD8zEH,CAAC7qH,QC9zEY6qH,CAAEC,QD8zEG,CAAE,AC9zEI,EAAEC,ED8zEF,EAAE,KAAM,CAAC,GC9zEM,EAAG;EAE/CD,ID8zEC,IAAMrlJ,CAAC,AC9zEC,CAACklJ,ED8zEC,CC9zEE,CAACxgJ,ED8zEC,CAACuyB,CC9zEE,CAAEquH,SD8zEO,CAACtpI,GC9zEM,CAAC,ID8zEC;EC7zEpCqpI,ID+zEC,KC/zEQ,CAACj3G,CD+zEFj5B,EC/zEK,CAAEmwI,GD+zED,CAAC3rI,GAAG,CAAE3Z,CAAC,CAAE,CAAC,CAAE,CC/zEE,CD+zEAA,AC/zEC+rC,CD+zEA,CAAE,AC/zEA,CD+zEC,AC/zEC,CD+zEC,EAAE/rC,AC/zEAslJ,CD+zEC,CAAE,EAAE,CAAG,CAAC,CAAChrI,MC/zEG,GD+zEM,CAAC,CAAC;AC7zE1D,ID+zEC;AC7zED,ED6zEE,OC7zEOirI,YAAYA,CAAER,UAAU,EAAE3E,IAAI,EAAEiF,SAAS,EAAG;EAEpD,ED2zECz+I,EC3zEKwxE,CD2zEL,GC3zES,GAAG2sE,UAAU,CAAC5/I,IAAI;ID2zE3B1E,AC1zEA+kJ,KD0zEA,EAED,GC5zEW,GAAGptE,GD4zEd5rC,CC5zEkB,CAACznC,KD4zEZynC,CAAE,AC5zEgB,6BD4zEc,CAAC;EAAC;EC1zEzC,ED0zEyC5lC,GAAA;ECzzEzCu+I,EDyzEyC1kJ,KAAA,EAEzC,CC3zEU,CAAC4yF,OD2zEX5mD,EC3zEoB,GAAG,CAAC,ED2zEhBA,CAAElY,QAAQ,EAAG;ECzzErB,ID2zECA,GC3zEO,IAAI,CD2zEH,CAAE,AC3zEI,ID2zEC,CAAC;ICzzEhB,ED2zEA,EC3zEM6mE,ED2zEAlgE,GC3zEK,GAAGiqH,ED2zEA,GAAG,IAAI,CAACjqH,AC3zEE,CAAC0Z,IAAI,CAAEwjC,ED2zED,EC3zEM,CAAC;MD6zErC,AC5zECqtE,KD4zEK,GC5zEG,CD4zEC/kJ,CAAC,CC5zECykJ,ED4zEE,CAAC,EAAEnjJ,CAAC,GAAGk5B,CC5zEC,CAACm4D,MD4zEM,CAACtuF,EC5zEE,ID4zEI,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;IC1zEpD,ID4zECw6B,AC5zEG6Q,EAAE,GAAGqvD,GD4zEA,CAAE16F,CAAC,AC5zEE,CD4zEA,AC5zEE,CD4zED+rC,AC5zEE,CAAE,OD4zEI,CAAElY,QAAS,CAAC;IC3zEnC,ED6zEA,EC7zEMmxH,SAAS,GAAGtqD,KAAK,CAAE,CAAC,CAAE,KAAK,GAAG;ID+zErC,EC9zEEuqD,SAAS,GAAGvqD,KAAK,CAAE,CAAC,CAAE;ED8zEvB,EC5zEA,IAAKsqD,SAAS,EAAG35G,EAAE,GAAGA,EAAE,GAAG,CAAC,CAAC,CAAC;ID4zE9BnlC,GAAA;IAAAnG,AC1zEA,IAAKklJ,CD0zEL,EAED,MC5zEe,GD4zEfj5G,EC5zEoBj4B,SAAS,ID4zEdi4B,AC5zEkBi5G,CD4zEhBpxH,QAAQ,AC5zEiB,ED4zEd,GC5zEmB,GAAG,IAAIkxH,QAAQ,GAAG,CAAC,KAAKD,UAAU,EAAG;MD8zEnF,AC5zEC,ID4zEI,IAAI,CAAC57G,OAAO,KAAK,KAAK,EAAG;MAE9BrV,QAAQ,CAAE,IAAK,CAAC;MAEhB,AC9zEC6wH,ID8zEKlqH,MC9zEK,CAAEmqH,CD8zEC,GAAG,IAAI,CAACnqH,AC9zEA,EAAEyqH,MD8zEM,GC9zEG,KAAKlxI,SAAS,GAC7C,IAAIqwI,aAAa,CAAE/4G,EAAE,EAAEg5G,UAAU,EAAE3E,IAAK,CAAC,GACzC,IAAI4E,gBAAgB,CAAEj5G,EAAE,EAAEg5G,UAAU,EAAE3E,IAAK,CAAE,CAAC;MD8zEhD,AC5zEC,KD4zEK,IAAI1/I,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGk5B,QAAQ,CAACn2B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;IC1zEpD,CAAC,GD4zEAw6B,GC5zEM,KD4zEE,CAAEx6B,CAAC,CAAE,CAACgsC,eAAe,CAAEnY,QAAS,CAAC;MAE1C,AC5zEC;ID8zEF;EAAC,IC5zEC,IAAM6Z,GAAG,GAAGi3G,SAAS,CAACj3G,GAAG;ID4zE1BxnC,EC3zEC,CD2zED,GC3zEK1C,IAAI,GAAGkqC,GAAG,CAAErC,EAAE,CAAE;ID2zErBtrC,ECzzEC,GDyzED,CCzzEMyD,CD2zEP,GC3zEW,KAAKuQ,CD2zEhBk4B,QC3zEyB,EAAG,OD2zEXA,CAAEpY,QAAQ,EAAG;MAE7B,EC3zEErwB,ED2zEI+kC,EC3zEA,GAAG,CD2zEG,GAAG,AC3zEFg8G,ID2zEM,CAACh8G,MAAM,MC3zEI,CAAE8C,EAAG,CAAC;MD6zEpC,EC5zEEq5G,ED4zEGn8G,MAAM,EC5zEC,CAAEo8G,ED4zEE,IAAI,EAAG,CC5zEA,EAAEnhJ,IAAK,CAAC;MAE9B,ED4zEAqwB,QAAQ,CAAE0U,MAAO,CAAC;MC1zElBo8G,ED4zEAp8G,MAAM,CAAC0D,AC5zEE,GAAGzoC,IAAI,UD4zEQ,CAAEqwB,QAAS,CAAC;IC1zErC,ED4zEA;EC1zED,ED4zEA;AC1zED,ED0zEE;IAAA3tB,GAAA;ACxzEF,IDwzEEnG,KAAA,EAED,SAAAgrB,YAAYA,CAAA,EAAG;AC1zEhB,IAEMm6H,ED0zEJ,IAAI,CAAC9iI,MAAM,AC1zEM,CD0zELqgB,OAAO,CAAE,IAAI,CAACgC,QAAQ,EAAE,IAAI,CAAC1T,UAAU,EAAE,IAAI,CAAClP,KAAM,CAAC;ECxzElE,ID0zEC,IAAI,CAAConB,AC1zENi8G,cAAa7hI,EAAE,EAAE0pH,ID0zEW,GAAG,AC1zEP,EAAG,ED0zEQ;IAEnC,AC5zE2BhnI,eAAA,OAAAm/I,aAAA;ED4zE1B,EC1zEA,IAAI,CAACV,GAAG,GAAG,EAAE;ID0zEbt+I,ACzzEA,GDyzEA,CCzzEI,CAACwnC,GAAG,GAAG,CAAC,CAAC;IDyzEb3tC,ACvzEA,IAAMJ,CDuzEN,ACvzEO,EDyzER,CCzzEW0jB,EAAE,CAAC8hI,KDyzEdj5G,cCzzEiC,CAAE6gG,EDyzElB7gG,CAAEC,ICzzEuB,CDyzElB,CCzzEoB9oB,CDyzEjB,CCzzEmB,CAAC+hI,eAAgB,CAAC;IAE/D,EDyzEA,GCzzEM,CDyzED,GCzzEKplJ,CDyzED,ACzzEE,CDyzEDoqB,ECzzEI,CAAC,EAAEpqB,CAAC,GAAGL,CAAC,EAAE,EAAGK,CAAC,CDyzEF,CCzzEK,CDyzEF,IAAI,CAAC+qB,YAAY,CAAC,CAAC;MAEhD,ACzzEC,IDyzEI,ACzzEEy7C,IDyzEE,ACzzEE,CDyzEDv9B,ECzzEI5lB,EAAE,CAACgiI,gBAAgB,CDyzED,ACzzEGtY,IDyzEC5gG,GCzzEM,EDyzED,ACzzEGnsC,CAAE,CDyzEF,ACzzEG;QD2zE9C,AC1zEC0/I,ID0zEI,AC1zEA,GAAGr8H,CD0zEC,CAAC0lB,AC1zEA,CAACu8G,kBAAkB,CAAEvY,CD0zEA,KAAK,CC1zEE,EAAEvmE,CD0zEA,EAAG,CC1zEC,CAAC/hE,IAAK,CAAC;MAEnDogJ,ID0zEC,IAAK,IAAI,AC1zEE,CD0zEDt8G,AC1zEGi+B,IAAI,ED0zED,AC1zEGk5E,IAAI,CD0zEF,CC1zEI,GD0zEA,CC1zEK,CD0zEF,AC1zEG;IAEjC,QD0zEG,IAAI,CAACnpH,WAAW,CAAC9b,IAAI,CAAE,IAAI,CAAC2H,MAAO,CAAC;ECxzExC,QD0zEG,CAAC,MAAM;EC1zET,OAAAjc,GD4zEG,IAAI,CAACowB,IC5zER,CAAA2uH,MD4zEmB,CAAC/lI,MC5zEpB,UD4zEoC,CAAE,IAAI,CAACopB,MAAM,CAAChS,WAAW,EAAE,IAAI,CAACnU,MAAO,CAAC;IC5zE5Elc,GAAA,GD8zEE;IC9zEFnG,IDg0EC,CCh0ED,EAED,SAAA+5G,QAAQA,CAAEz2F,EAAE,EAAE5e,IAAI,EAAE1E,KAAK,EAAEqrB,QAAQ,EAAG;MAErC,ED8zEC,EC9zEK9qB,CAAC,CD8zEF,CAAC2oC,CC9zEI,IAAI,CAACyE,GAAG,CAAEjpC,IAAI,CAAE,OD8zEE,GAAG,KAAK;MC5zEpC,ED8zEC0nC,EC9zEI7rC,CAAC,ED8zEA,GAAG,AC9zEEyT,ID8zEE,KC9zEO,EAAGzT,CAAC,CAACw5G,QAAQ,CAAEz2F,EAAE,EAAEtjB,KAAK,EAAEqrB,QAAS,CAAC;IAEzD,ED8zEC;EC9zEA;IAAAllB,EDg0EA,CCh0EA;IAAAnG,KAAA,EAED,SAAAwlJ,WAAWA,CAAEliI,EAAE,EAAE6V,MAAM,EAAEz0B,IAAI,EAAG;MDg0E/B,AC9zEA,ID8zEM+1B,AC9zEAz4B,CAAC,GAAGm3B,ID8zEI,EC9zEE,CD8zEC,AC9zECz0B,ID8zEG,AC9zEC,CD8zEA+1B,AC9zEE,QD8zEM;MAE9B,AC9zEA,IAAKz4B,CD8zEC,AC9zEA,ID8zEI/B,CAAC,AC9zEA+T,GD8zEG,CAAC,EAAEzS,CAAC,EC9zEE,CD8zECk5B,CC9zEE,IAAI,CAACs/E,ED8zEC,CAACz1G,KC9zEM,CD8zEA,AC9zEEgf,ED8zEArjB,AC9zEE,CD8zED,CC9zEGyE,ED8zEAnD,CAAC,CC9zEG,CD8zEDtB,CAAC,AC9zEE+B,CAAE,CD8zED,AC9zEE,ED8zEC;IC5zErD,ID8zEE,IAAMkmC,KAAK,GAAGzN,QAAQ,CAAEx6B,CAAC,CAAE;EC9zE5B,MDg0ECioC,KAAK,CAACiE,iBAAiB,CAAEC,KAAM,CAAC;ICh0EjCjmC,EDk0EA,CCl0EA;IDo0ED,ACp0ECnG,KAAA,EAED,SAAOylJ,MAAMA,CAAEniI,EAAE,EAAEmhI,GAAG,EAAExiJ,MAAM,EAAEopB,QAAQ,EAAG;EDk0E1C,ICh0EA,KAAM,IAAIprB,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG6kJ,GAAG,CAACngJ,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;IDg0EjDkG,GAAA,CC9zEC,IAAM5F,CAAC,GAAGkkJ,GAAG,CAAExkJ,CAAC,CAAE;ID8zEnBD,KAAA,CC7zEEgC,CD+zEH,AC/zEI,GAAGC,MD+zEP63B,AC/zEa,CAAEv5B,CAAC,CAAC+qC,EAAE,CAAE,WD+zEJxR,CAAEuS,aAAa,EAAEC,cAAc,EAAG;MAElD,EC/zEC,ED+zEK9D,EC/zEAxmC,CAAC,CAACopB,ED+zEI,GAAG,IAAI,CAACod,CC/zED,KD+zEO,AC/zEF,KAAK,EAAG;MDi0EhC,IAAK6D,AC/zEH,aD+zEgB,KAAK,IAAI,IAAI7D,MAAM,KAAK,IAAI,EAAG;QAEhDA,ECh0ECjoC,CAAC,CAACw5G,EDg0EG,CAACjgF,KCh0EI,CAAExW,EAAE,EAAEthB,CAAC,CAAChC,KDg0EK,ACh0EA,CDg0EE,CCh0EAqrB,GDg0EI,EAAE,GCh0EG,CAAC,CDg0EE,CAAC;MAExC,ECh0EC;MDk0ED,ACh0EA,IDg0EK,IAAI,CAAChB,gBAAgB,EAAG,IAAI,CAACW,YAAY,CAAC,CAAC;IC9zEjD,EDg0EC,IAAK,IAAI,CAACge,qBAAqB,KAAK,IAAI,EAAG;ECh0E3C,MDk0EC,IAAK,IAAI,CAACR,MAAM,KAAK,IAAI,EAAG;ICl0E7BriC,GAAA,GDo0EE,IAAI,CAACqwB,WAAW,CAAC9b,IAAI,CAAE,IAAI,CAAC2H,MAAO,CAAC;ICp0EtCriB,IDs0EC,CAAC,ACt0EF,EAED,IDo0ES,KCp0EF0lJ,YAAYA,CAAEjB,GAAG,EAAExiJ,MAAM,EAAG;MAElC,IDo0EE,ACp0EIxC,CAAC,GDo0ED,ACp0EI,CDo0EH+2B,CCp0EK,UDo0EM,CAACpX,gBAAgB,CAAE,IAAI,CAACopB,MAAM,CAAChS,WAAW,EAAE,IAAI,CAACnU,MAAO,CAAC;MCl0E3E,EDo0EC,GCp0EK,IAAIpiB,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG6kJ,GAAG,CAACngJ,MAAM,EAAErE,CAAC,KAAKL,CAAC,EAAE,EAAGK,CAAC,EAAG;MDs0EjD,ECp0EC,IAAMM,CAAC,GAAGkkJ,GAAG,CAAExkJ,CAAC,CAAE;QAClB,IAAKM,CAAC,CAAC+qC,EAAE,IAAIrpC,MAAM,EAAGxC,CAAC,CAACwE,IAAI,CAAE1D,CAAE,CAAC;MDq0ElC,ACn0EA;MAEA,OAAOd,CAAC;IAET,EDi0EC,IAAK6sC,cAAc,KAAK,IAAI,EAAG;ECj0E/B,MDm0EC,IAAM7R,QAAQ,GAAG,IAAI,CAACA,QAAQ;ACn0E/B,QDq0EC,KAAM,IAAIx6B,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGk5B,QAAQ,CAACn2B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;ACj0EvD,SAAS0lJ,CDm0EL,IAAMz9G,KAAK,CCn0EKy9G,CAAEriI,CDm0EJmX,CCn0EM,EAAEt5B,IAAI,CDm0EJ,CAAElB,ACn0EIg0C,CDm0EH,CAAE,ICn0EO,EAAG;EAExC,IAAMgd,IDm0EH/oB,ECn0ES,GDm0EJ,ACn0EO5kB,CDm0ENwW,CCn0EQ,CAAC8rH,YAAY,CAAEzkJ,EDm0EN,CAAE,CCn0ES,CAAC,GDm0EL,EAAE,IAAK,CAAC;ECj0EzCmiB,EAAE,CAACuiI,GDm0ED,SCn0Ea,CAAE50F,MAAM,EAAEhd,MAAO,CAAC;EACjC3wB,EAAE,CAACwiI,CDo0EF,YCp0Ee,CAAE70F,MAAO,CAAC;EAE1B,EDo0EA,KCp0EOA,MAAM;AAEd,EDk0EE;IAAA9qD,GAAA;ACh0EF,IDg0EEnG,KAAA,EAED,SAAAqoB,MAAMA,CAAEC,IAAI,EAAG;ACj0EhB,IAAMy9H,EDm0EJ,mBCn0EyB,GAAG,MAAM;AAEpC,IAAIC,EDk0EF,IAAMz9H,QCl0EU,GAAG,CDk0ED,ACl0EE,GDk0EGD,IAAI,KAAKtU,SAAS,IAAI,OAAOsU,IAAI,KAAK,QAAU;ACh0EzE,MDk0EE,GCl0EO29H,CDk0EDx9H,MAAM,GAAG,CAAC,CAAC,ACl0EEw9H,CAAEhyG,MAAM,EAAEiyG,SAAS,EAAG;EAE1C,IAAMxJ,KAAK,GAAGzoG,MAAM,CAACkyG,KAAK,CAAE,IAAK,CAAC;EAClC,IDi0EC,ACj0EKC,MAAM,GAAG,EAAE;EAEjB,IDg0EC,ACh0EKr9H,IAAI,GAAGhU,IAAI,CAACa,GAAG,CAAEswI,SAAS,GAAG,CAAC,EAAE,CAAE,CAAC;EACzC,IDg0EC,ACh0EKvuD,EAAE,GAAG5iF,IAAI,CAACY,GAAG,CAAEuwI,SAAS,GAAG,CAAC,EAAExJ,KAAK,CAACp4I,MAAO,CAAC;EAElD,ID+zEC,CC/zEK,GD+zEAikB,CC/zEItoB,CAAC,GAAG8oB,IAAI,EAAE9oB,CD+zEF,AC/zEG,ED+zEA,CC/zEG03F,EAAE,EAAE13F,CAAC,EAAG,EAAG;IAElC,ID+zEC,AC/zEKg+D,IAAI,GAAGh+D,CAAC,GAAG,CAAC;IAClBmmJ,ID+zEC99H,EC/zEK,CAACrkB,CD+zEF,GAAG,AC/zEG,IAAAoxC,MAAA,CAAK4oB,IAAI,KAAKioF,SAAS,GAAG,GAAG,GAAG,GAAG,OAAA7wG,MAAA,CAAI4oB,IAAI,QAAA5oB,MAAA,CAAKqnG,KAAK,CAAEz8I,CAAC,CAAE,CAAG,CAAC;EAE1E,QD8zEGssC,UAAU,EAAE,CAAC,CAAC;EC5zEjB,OAAO65G,CD6zEJ55G,KC7zEU,CAAC65G,GD6zEF,CC7zEM,CD6zEJ,AC7zEM,CD6zEL,CAAC,EC7zES,CAAC;AAE3B,UD4zEIh7H,QAAQ,EAAE,CAAC,CAAC;AC1zEhB,IAAMi7H,GAAG,GD2zEL99H,AC3zEQ,MD2zEF,EAAE,CAAC,CAAC,GC3zEY,IAAIxK,kBAAO,CAAC,CAAC;AAEvC,SAASuoI,CD0zEL95G,MAAM,EAAE,CAAC,CAAC,UC1zEgB85G,CAAE/gI,UAAU,EAAG;EAE5CjB,QDyzEGmoB,SAAS,EAAE,CAAC,CAAC,KCzzED,CAAC5mB,UAAU,CAAEwgI,GAAG,EAAE/hI,0BAAe,CAACE,iBAAiB,EAAEe,UAAW,CAAC;EAEhF,IAAMghI,IDwzEHh9G,UAAU,ACxzEO,EDwzEL,CAAC,CAAC,QCxzEG6L,MAAA,CAAaixG,GAAG,CAAC/qI,QAAQ,CAACoyB,GAAG,CAAE,UAAE3rC,CAAC;IAAA,MDyzEnD2qC,CCzzEyD3qC,CAAC,CAACszC,EDyzEtD,EAAE,CAAC,ECzzE0D,CAAE,CAAE,CAAC;EAAA,CAAC,CAAC,ID0zE1E,CAAC,EC1zE8E;EAEjF,MD0zEE7sB,EC1zEOlE,ID0zED,CAAC+G,QAAQ,GAAG,UC1zEI,CAAC7F,WAAW,CAAED,UAAW,CAAC;IAEjD,KAAKtU,CDyzEHkX,OAAO,EAAE,GAAG,YCzzEK;MAClB,IDyzECjnB,GCzzEM,CDyzEF,ACzzEIqlJ,EDyzEF,QAAQ,ICzzEQ,EAAE,oBAAoB,CAAE;IAEhD,KAAKr1I,CDwzEHoa,SAAS,EAAE,WCxzEI;MAChB,EDwzEA,CAAC,ICxzEM,CAAEi7H,cAAc,EAAE,kBAAkB,CAAE;IAE9C,EDwzEA;MCvzECrtI,OAAO,CAACC,IAAI,CAAE,+CAA+C,EAAEoM,UAAW,CAAC;MDyzE5E,ACxzEC,OAAO,CAAEghI,cAAc,EAAE,oBAAoB,CAAE;EAEjD;AAED,MDszEE,IAAMrtH,MAAM,GAAG,CAAC,CAAC;ACpzEnB,MDszEEA,GCtzEOstH,GDszED,CAACjxI,IAAI,GAAG,IAAI,ACtzEIixI,CDszEHjxI,ACtzEK8N,EAAE,EDszEH,ACtzEK2tC,MAAM,EAAE9vD,IAAI,EAAG;EAE5C,IDqzECg4B,ACrzEKmmE,MDqzEC,ACrzEK,CDqzEJn+F,ECrzEOmiB,EDqzEH,ACrzEK,CAACojI,EDqzEH,IAAI,CAACvlJ,IAAI,OCrzEY,CAAE8vD,MAAM,EAAE3tC,EAAE,CAACqjI,cAAe,CAAC;EACjE,IDszEC,ACtzEKC,IDszEA,ECtzEM,EDszEF,CAACliJ,ACtzEI4e,EAAE,CAACujI,CDszEH,KAAK,EAAE,EAAG1tH,MAAM,ACtzEG,CDszEFz0B,ACtzEIusD,IDszEA,ECtzEO,CDszEJ,ACtzEK,CAACsmC,GDszEF,CAAC7yF,ACtzEK,CAAC,CAAC,EDszEH;ECpzEhD,IDqzEC,ACrzEI46F,IDqzEC,ECrzEK,EDqzED,CAACl2D,CCrzEIw9G,MAAM,GDqzEA,ECrzEK,EAAE,CDqzEF,CCrzEK,GDqzED,EAAGztH,ECrzEK,EAAE,EDqzED,CAACiQ,UAAU,GAAG,IAAI;ECnzEzD,IDozEC,ACpzEK09G,IDozEA,IAAI,CAACz9G,GCpzEO,GAAG,ODozEG,KAAK,IAAI,ACpzEI,CAAC8K,CDozEFhb,GCpzEM,CAAEytH,EDozEF,CAACv9G,GCpzEQ,CAAC,SDozEI,GAAG,IAAI;ECnzE/D,IDozEC,ACpzEIy9G,IDozEC,IAAI,CAAC39G,GCpzEM,EAAG,EDozEF,KAAK,KAAK,EAAGhQ,MAAM,CAACgQ,OAAO,GAAG,KAAK;IClzEpD,EDmzEA,IAAK,IAAI,CAACG,aAAa,KAAK,KAAK,EAAGnQ,MAAM,CAACmQ,aAAa,GAAG,KAAK;IClzEhE,EDmzEA,IAAK,IAAI,CAACC,WAAW,KAAK,CAAC,EAAGpQ,MAAM,CAACoQ,WAAW,GAAG,IAAI,CAACA,WAAW;MACnE,IAAK7pC,MAAM,CAACuF,IAAI,CAAE,IAAI,CAACylB,QAAS,CAAC,CAACpmB,MAAM,GAAG,CAAC,EAAG60B,MAAM,CAACzO,QAAQ,GAAG,IAAI,CAACA,QAAQ;IClzE9E,EDozEAyO,ECpzEM+sH,IDozEA,CAACh/G,ICpzEQ,EDozEF,CCpzEKmN,EDozEF,IAAI,CAACnN,CCpzEK,CAAE4/G,IDozED,CAAClgH,IAAI,GCpzEQ,CAAE,CAAC,CAAG,CAAC;IAC/C,EDozEAzN,KCpzEOh4B,CDozED,CAACkhB,ECpzEI,CAAC0kI,GDozEC,GAAG,IAAI,CAAC1kI,ACpzEE,CAAC,CAAC,GAAG,CDozED,CAAC9E,ICpzEM,GDozEC,ACpzEEqpI,CDozED,CAAC,ICpzEM,GAAG,MAAM,GAAGX,YAAY,CAAE3iI,EAAE,CAAC0jI,eAAe,CAAE/1F,MAAO,CAAC,EAAEi1F,SAAU,CAAC;EAE/G,CAAC,GDmzEA/sH,GCnzEM,GDmzEA,CAAC2J,EAAE,GAAG,IAAI,CAACA,EAAE,CAACvlB,OAAO,CAAC,CAAC;ICjzE7B,EDmzEA,IAAK,CCnzEEqpI,GDmzEE,CAACv8H,ECnzEG,cDmzEa,KAAK,KAAK,EAAG8O,MAAM,CAAC9O,gBAAgB,GAAG,KAAK;ECjzEvE;AAED,MDizEE;AC/yEF,SAAS48H,wBAAwBA,CAAEC,YAAY,EAAE1hI,UAAU,EAAG;EAE7D,ID+yEC,AC/yEK4uB,ID+yEA,IAAI,CAACla,CC/yEK,GAAGqsH,WD+yEO,EAAG,QC/yEW,CAAE/gI,UAAW,CAAC;EAEtD,MD+yEE2T,CC/yEK,KD+yEC,CAACh4B,GC/yEFk0C,CD+yEM,GAAG,EC/yET,CAEE6xG,YD6yEsB,AC7yEV,mCAAA7xG,MAAA,CAETjB,UAAU,CAAE,CAAC,CAAE,0BAAAiB,MAAA,CAAuBjB,UAAU,CAAE,CAAC,CAAE,qBAEhE,GAAG,CAEH,CAACiyG,IAAI,CAAE,IAAK,CAAC;AAEf,QDsyEGltH,MAAM,CAAC3K,KAAK,GAAG,IAAI,CAACA,KAAK;ACpyE5B,QDqyEG2K,CCryEMguH,KDqyEA,CAACv6G,cAAc,ECryEOu6G,CDqyEJ,ACryEMD,IDqyEF,CAACt6G,OCryEa,EAAEq/F,KDqyED,CAAC5jH,KCryEW,CDqyEL,CAAC,ACryEO,CDqyEN;ECnyEtD,IAAI++H,EDoyEF,IAAK,IAAI,CAACv6G,ICpyEO,SDoyEM,KAAK,IAAI,EAAG1T,MAAM,CAAC0T,aAAa,GAAG,IAAI,CAACA,aAAa,CAACxkB,MAAM,CAAC,CAAC;EClyEvF,IDoyEC,ICpyEQ4jH,WAAW;IAEnB,EDoyEA,GCpyEK3hI,CDoyEA,IAAI,CAACwiC,aAAa,EAAG,OCpyEJ;MACrBs6G,EDqyEAjuH,MAAM,CAACh4B,IAAI,ECryEI,CDqyED,ECryEI,QAAQ,GDqyEC;MCpyE3B,EDqyEAg4B,MAAM,CAAC4T,sBAAsB,GAAG,IAAI,CAACA,sBAAsB;ICnyE5D,IDoyEC5T,CCpyEI5uB,KDoyEE,CAACyiC,WAAW,GAAG,IAAI,CAACA,KCpyEH,MDoyEc;MCnyErCo6G,EDqyEAjuH,MAAM,CAAC8T,MCryEQ,GAAG,CDqyED,GAAG,IAAI,CAACC,CCryEG,UDqyEQ;MCpyEpC,EDqyEA/T,MAAM,CAACgU,cAAc,GAAG,IAAI,CAACC,eAAe;ICnyE7C,IDqyECjU,CCryEI3uB,KDqyEE,CAAC6iC,UAAU,GAAG,IAAI,CAACC,ICryEJ,ODqyEe;MCpyEpC85G,EDqyEAjuH,MAAM,CAACoU,MAAM,ACryEE,GDqyEC,ACryEE,IDqyEE,CAACC,GCryEK,IDqyEE;MCpyE5B,EDqyEArU,MAAM,CAACsU,MAAM,GAAG,IAAI,CAACC,OAAO,CAACC,GAAG,CAAE,UAAAC,KAAK;ICnyExC,KAAKnjC,CDmyEmC,OAAM,wBCnyEpB;MACzB28I,MDmyECv5G,SCnyEc,GAAG,EDmyEH,EAAED,KAAK,CAACC,ECnyEO,YDmyEO;MClyErC,MDmyECC,MAAM,EAAEF,KAAK,CAACtU,GAAG,CAAC3jB,GAAG,CAAC4H,OAAO,CAAC,CAAC;ICjyEjC,KAAK5S,GDkyEHojC,MAAM,EAAEH,KAAK,CAACtU,GAAG,CAAC1jB,GAAG,CAAC2H,AClyEL,ODkyEY,CAAC,CAAC;MCjyEhC6pI,MDmyECp5G,SCnyEc,GAAG,KDmyEA,ACnyEK,EDmyEHJ,KAAK,CAACI,iBAAiB;MClyE3C,MDmyECC,YAAY,EAAEL,KAAK,CAAC7S,MAAM,CAACrD,MAAM;ICjyEnC,KAAK9sB,GDkyEHsjC,YAAY,EAAEN,KAAK,CAAC7S,MAAM,AClyEL,CDkyEMld,MAAM,CAACN,OAAO,CAAC;MCjyE3C6pI,IDkyEA,CAAC,UClyEc,GAAG,SAAS;MAC3B,EDiyEC,CAAG,CAAC;IC/xEN,IDiyECjuH,CCjyEIzuB,KDiyEE,CAACyjC,gBAAgB,GAAG,GCjyEL,CDiyES,CAACC,iBAAiB;MChyEhDg5G,EDiyEAjuH,MAAM,CAACkV,MCjyEQ,GAAG,KDiyEG,GAAG,ACjyEE,IDiyEE,CAACC,eAAe;MChyE5C,EDiyEAnV,MAAM,CAACoV,aAAa,GAAG,IAAI,CAACC,cAAc;IC/xE3C,IDiyECrV,MAAM,CAACsV,mBAAmB,GAAG,IAAI,CAACC,oBAAoB;MChyEtDv1B,EDiyEAggB,KCjyEO,CDiyED,ACjyEE/f,CDiyEDu1B,GCjyEK,CAAE,SDiyEM,GAAG,IAAI,CAACC,cAAc,eCjyEkB,EAAEq9F,WAAY,CAAC;MAC3Emb,EDkyEAjuH,MAAM,CAAC0V,MClyEQ,GAAG,MDkyEI,EClyEI,CDkyED,IAAI,CAACC,gBAAgB,CAACzmB,MAAM,CAAEC,IAAK,CAAC;EChyE/D,MDkyEE,IAAK,IAAI,CAACymB,cAAc,KAAK,IAAI,EAAG5V,MAAM,CAAC6V,aAAa,GAAG,IAAI,CAACD,cAAc,CAAC1mB,MAAM,CAAEC,IAAK,CAAC;EChyE/F,MDkyEE,CClyEK,GDkyEA,IAAI,AClyEG,CDkyEF2mB,EClyEKi4G,YDkyES,AClyEG,GAAG,EDkyED,IAAI,EAAG,kBClyEoB,GAAGE,eAAe,GAAG,yBAAyB;AAEzG,UDkyEIjuH,MAAM,CAAC8V,cAAc,GAAG;AChyE5B,IAAM6rC,GAAG,GAAG,EDiyEPj9D,MAAM,EAAEsb,GCjyEa,GDiyEP,CAAC8V,ACjyEU9Z,cDiyEI,CAACtX,GCjyEE,CAAC,CAAC,CDiyEE,CAACN,OAAO,CAAC,CAAC;AC/xEnD,SAAS8pI,GDgyEJ3vH,MAAM,EAAEyB,MAAM,CAAC8V,EChyESo4G,CAAA,EAAG,SDgyEE,CAAC3vH;EC9xElCnT,QD+xEG,CAAC,iBC/xEW,CAACmB,wBAAwB,CAAEo1D,GAAI,CAAC;EAE/C,IAAMr7E,CAAC,CD+xEL,EC/xEQq7E,GAAG,CAAC9kE,CAAC,CAACs/B,OAAO,CAAE,CAAE,CAAC;EAC5B,IAAMpzC,CAAC,CDgyEL,EChyEQ44E,EDgyEH,CChyEM,CAACp5E,CAAC,CDgyEJ,AChyEK4zC,CDgyEJjb,MChyEW,CAAE,CAAE,CAAC,EDgyEL,KAAK,IAAI,EAAG;EC/xEnC,IAAM/hB,CAAC,GDiyEJ6gB,ACjyEO2hD,GAAG,CAAClvD,CAAC,CDiyEN,ACjyEO0pB,CDiyENjb,MCjyEa,CAAE,CAAE,CAAC,EDiyEP,GAAG;EC/xExB,OAAO,CAEN,ED8xEG1kB,GAAG,EAAEwjB,MAAM,CAACkB,WAAW,CAAC1kB,GAAG,CAAC4H,OAAO,CAAC,CAAC,CC9xEA,kCAAA83B,MAAA,CAER51C,CAAC,QAAA41C,MAAA,CAAOnzC,CAAC,QAAAmzC,MAAA,CAAO/8B,CAAC,UAEjD,8BAA8B,EAE9B,GAAG,CAEH,CAAC+tI,IAAI,CAAE,IAAK,CAAC;AAEf,YDqxEKzwI,GAAG,EAAEujB,MAAM,CAACkB,WAAW,CAACzkB,GAAG,CAAC2H,OAAO,CAAC;ACnxEzC,SAAS+pI,CDoxEL,CAAC,sBCpxE4BA,CAAE33G,UAAU,EAAG;EAE/C,IAAM43G,EDoxEJ,ICpxEU,GAAG,CACd53G,UAAU,CAAC63G,yBAAyB,GAAG,kDAAkD,GAAG,EAAE,EAC9F73G,UAAU,CAAC83G,kBAAkB,GAAG,0CAA0C,GAAG,EAAE,CAC/E;EAED,IDixEC,GCjxEMF,MAAM,CAAC/gF,MAAM,CAAEkhF,eAAgB,CAAC,CAACrB,IAAI,CAAE,IAAK,CAAC;AAErD;AAEA,MD+wEE,GC/wEOsB,eAAeA,CAAEt8F,OAAO,EAAG;EAEnC,IAAMk8F,MAAM,GAAG,EAAE;EAEjB,ID6wEC,CC7wEK,IAAM7iJ,ID6wEFwqC,AC7wEM,IAAImc,KD6wEDnc,CAAEC,CC7wEM,EAAG,ID6wEF,EAAEC,OAAO,EAAG;IC3wEvC,ID6wEC,AC7wEKpvC,ID6wEAmvC,CC7wEK,GAAGkc,GD6wED,CAAEjc,GC7wEM,CAAE1qC,GD6wED,CAAC8Q,AC7wEI,CAAE,GD6wEF,CAAE,KAAKxB,SAAS,EAAG;IC3wE9C,IAAKhU,ED6wEHmvC,GC7wEQ,ID6wED,CAAEC,AC7wEI,KAAK,ED6wEF,AC7wEK,CD6wEJ55B,IAAI,CAAE,GAAG45B,OAAO,CAAC/mB,MAAM,CAAEC,IAAK,CAAC;IC3wElDi/H,ID6wEC,EC7wEK,CAACtjJ,IAAI,CAAE,UAAU,GAAGS,IAAI,GAAG,GAAG,GAAG1E,KAAM,CAAC;EAE/C,MD6wEE,OAAOovC,OAAO,CAAC55B,IAAI;EC3wErB,ID6wEC,GC7wEM+xI,MAAM,CAAClB,IAAI,CAAE,IAAK,CAAC;AAE3B,MD6wEE,IAAK,IAAI,CAACh3G,OAAO,EAAG;AC3wEtB,QD6wEG,CC7wEMu4G,GD6wED,IAAI,CAACt4G,UAAU,EAAG,GC7wEMs4G,CAAEtkI,EAAE,EAAE0pH,OAAO,EAAG;EAE/C,IAAM5qF,ID6wEH,IAAK,EC7wEQ,ED6wEJ,CAAC9S,AC7wEM,CAAC,CAAC,QD6wEE,CAACC,OAAO,EAAG;EC3wElC,IAAM3vC,CAAC,GAAG0jB,ED6wEN6V,AC7wEQ,CAACisH,KD6wEH,CAAC91G,UAAU,GAAG,AC7wEQ,CAAE09F,GD6wEN,CAAC19F,GC7wEY,EAAEhsB,EAAE,CAACukI,ED6wEP,CAACx/H,MAAM,CAAC,CAAC,MC7wEgB,CAAC;EAEjE,KAAM,GD6wEH,CAAC,AC7wEMpoB,CAAC,GAAG,CAAC,CD6wEL,CC7wEOA,CAAC,ED6wEH,CC7wEML,CAAC,ED6wEH,AC7wEKK,CD6wEJqvC,AC7wEK,EAAG,EAAG,MD6wED,CAACvlB,SAAS,EAAG;IC3wE1C,IAAM08C,ID6wEHttC,AC7wEO,GAAG7V,EAAE,CD6wEN,AC7wEOwkI,CD6wENx4G,UAAU,GAAG,CC7wEQ,CAAE09F,ED6wEN,CAAC19F,IC7wEY,EAAErvC,CAAE,CAAC,ED6wEP,CAACooB,MAAM,CAAEC,IAAK,CAAC,CAAC9S,IAAI;IC5wE1D,IAAM9Q,ED8wEJ,EC9wEQ,GAAG+hE,IAAI,CAAC/hE,IAAI;IAEtB,ID8wEC,AC9wEG4qI,YAAY,GAAG,CAAC;IACpB,ID+wEC,AC/wEI7oE,ID+wEC,AC/wEG,CAACtlE,GD+wEA,CAACquC,AC/wEG,KAAKlsB,EAAE,CAACykI,GD+wEA,IAAI,GC/wEM,CD+wEF,CAACv4G,AC/wEI8/F,WD+wEO,CAACvlH,AC/wEI,GAAG,CAAC,KD+wEC,IAAI,IAAI,CAACylB,WAAW,CAAC3kB,qBAAqB,KAAK,IAAI,EAAG;IC9wE1G,IAAK47C,EDgxEHttC,EChxEO,CAACh4B,GDgxEF,CAACquC,AChxEK,KAAKlsB,EAAE,CAAC0kI,GDgxEF,GAAG,IAAI,AChxEK,CDgxEJx4G,CChxEO8/F,UDgxEI,CAACjnH,CChxEO,GAAG,CAAC,CDgxEL,CAAEC,IAAK,CAAC,CAAC9S,IAAI;IC/wE3D,IDixEC,ACjxEIixD,IAAI,CAACtlE,IAAI,KAAKmiB,EAAE,CAAC2kI,UAAU,EAAG3Y,YAAY,GAAG,CAAC;MDmxEnD,CAAC,MAAM,IAAK,IAAI,CAACn1G,MAAM,IAAI,IAAI,CAACsV,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAG;ICjxE1D,IDmxECvW,MAAM,CAACY,QAAQ,GAAGmV,SAAS,CAAE5mB,IAAI,CAACikB,UAAU,EAAE,IAAI,CAACxS,QAAS,CAAC;QAE7D,IAAM4V,UAAU,GAAG,IAAI,CAAC5V,QAAQ,CAAC4V,UAAU;ICnxE5CyS,IDqxEC,IAAKzS,ECrxEI,CAAEjrC,IAAI,CAAE,EDqxEF,CCrxEK,IDqxEAsP,SAAS,IAAI27B,UAAU,CAAClD,MAAM,KAAKz4B,SAAS,EAAG;MCpxEnE7S,IDsxEC,ACtxEG,EAAEslE,EDsxECh6B,ECtxEG,CAACtrC,GDsxEE,CCtxEE,EDsxECwuC,UAAU,CAAClD,MAAM;MCrxEjC+hG,IDuxEC,IAAK7lH,ACvxEE,EAAErF,EAAE,CDuxED,ACvxEE4kI,CDuxEDt/H,OAAO,CAAE6jB,MAAO,CAAC,CCvxEC,CDuxEE,ACvxEAugG,OAAO,EAAEtoI,IAAK,CAAC;MAC/C4qI,MDwxEE,KAAM,CCxxEI,EAAEA,CDwxEFrvI,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGkrC,MAAM,CAACnoC,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;ICvxErD,CAAC,SDyxEG,IAAM2vC,KAAK,GAAGnD,MAAM,CAAExsC,CAAC,CAAE;ECvxE9B,YDyxEKivC,SAAS,CAAE5mB,IAAI,CAACmkB,MAAM,EAAEmD,KAAM,CAAC;ECvxEpC,OAAOwS,GDyxEH,OCzxEa;AAElB,UDyxEI,CAAC,MAAM;ACvxEX,SAASslG,GDyxEJx4G,SAAS,CAAE5mB,ECzxEQo/H,CAAEzzG,CDyxEN,CAACxH,ICzxEW,EDyxEL,ACzxEQ,EDyxENA,MAAO,CAAC;ECvxEpC,OAAOwH,CDyxEJ,KCzxEU,KAAK,EAAE;AAErB,QDyxEG;ACvxEH,MDyxEE,GCzxEOk0G,gBAAgBA,CAAEl0G,MAAM,EAAEtE,UAAU,EAAG;EAE/C,IDyxEC,ACzxEKy4G,IDyxEA,IAAI,CAACv4G,SCzxEa,GAAGF,CDyxEH,EAAG,OCzxEU,CAAC04G,mBAAmB,GAAG14G,UAAU,CAAC24G,gBAAgB,GAAG34G,UAAU,CAAC44G,2BAA2B;EAEhI,MDyxEEpvH,CCzxEK8a,KDyxEC,CAACnE,ACzxEI,CACX05D,ODwxEe,ACxxER,CAAE,EDwxES,IAAI,CAAC15D,QAAQ,ECxxEL,EAAEH,UAAU,CAAC64G,YAAa,CAAC,CACrDh/C,OAAO,CAAE,kBAAkB,EAAE75D,UAAU,CAAC84G,aAAc,CAAC,CACvDj/C,OAAO,CAAE,sBAAsB,EAAE75D,UAAU,CAAC24G,gBAAiB,CAAC,CAC9D9+C,OAAO,CAAE,wBAAwB,EAAE4+C,kBAAmB,CAAC,CACvD5+C,OAAO,CAAE,uBAAuB,EAAE75D,UAAU,CAAC+4G,iBAAkB,CAAC,CAChEl/C,OAAO,CAAE,mBAAmB,EAAE75D,UAAU,CAACg5G,cAAe,CAAC,CACzDn/C,OAAO,CAAE,kBAAkB,EAAE75D,UAAU,CAACi5G,aAAc,CAAC,CACvDp/C,OAAO,CAAE,wBAAwB,EAAE75D,UAAU,CAACk5G,kBAAmB,CAAC,CAClEr/C,OAAO,CAAE,mCAAmC,EAAE75D,UAAU,CAAC44G,2BAA4B,CAAC,CACtF/+C,OAAO,CAAE,yBAAyB,EAAE75D,UAAU,CAAC04G,mBAAoB,CAAC,CACpE7+C,OAAO,CAAE,0BAA0B,EAAE75D,UAAU,CAACm5G,oBAAqB,CAAC;AAEzE,QD6wEG3vH,MAAM,CAAC4W,UAAU,GAAG,IAAI,CAACA,UAAU,CAACxyB,OAAO,CAAC,CAAC;AC3wEhD,QD6wEG,CC7wEMwrI,GD6wED,IAAI,CAAC/4G,QAAQ,KAAKh8B,GC7wEO+0I,CAAE90G,KD6wEA,CC7wEM,CD6wEH,CC7wEKtE,UAAU,EAAG;EAEvD,OAAOsE,CD6wEJ/E,KC7wEU,CACXs6D,GD4wEU,CAAElhF,GC5wEL,CD4wES,AC5wEP,CD4wEQokB,SAAS,EAAE,IAAI,CAACsD,KC5wEF,EAAEL,CD4wES,CAAC,QC5wEA,CAACq5G,iBAAkB,CAAC,CAC/Dx/C,OAAO,CAAE,wBAAwB,EAAI75D,UAAU,CAACq5G,iBAAiB,GAAGr5G,UAAU,CAACs5G,mBAAsB,CAAC;AAEzG,UD2wEI9vH,MAAM,CAAC6W,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACx6B,IAAI;QAErC;AC3wEH,MD6wEE;MAEA,IAAK,IAAI,CAACy6B,QAAQ,KAAKj8B,SAAS,EAAG;AC7wErC,IAAMk1I,ID+wEH,IAAKvgI,KAAK,CAACC,AC/wEM,GAAG,ID+wEF,CAAE,IAAI,CAACqnB,QAAS,CAAC,EAAG,aC/wEgB;AAEzD,SAASk5G,CD+wEL,IAAMj5G,KAAK,GAAG,EAAE,AC/wEIi5G,CAAEl1G,MAAM,EAAG;EAElC,OAAOA,CD+wEJ,KAAM,AC/wEI,CAACu1D,GD+wEDvpG,GAAC,CC/wEO,CAAEipJ,CD+wEN,CAAC,EAAE3nJ,GAAC,GAAG,IAAI,AC/wES,CD+wER0uC,CC/wEUm5G,OD+wEF,CAAC9kJ,MAAM,CC/wEW,CD+wETrE,AC/wEU,GD+wET,GAAGsB,GAAC,EAAEtB,GAAC,EAAG,EAAG;AC7wE7D,YD+wEKiwC,KAAK,CAACjsC,IAAI,CAAEirC,SAAS,CAAE5mB,IAAI,CAACkkB,SAAS,EAAE,IAAI,CAACyD,QAAQ,CAAEhwC,GAAC,CAAG,CAAE,CAAC;AC7wElE,IAAMopJ,MD+wEF,QC/wEgB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEhC,SAASF,CD+wELjwH,MAAM,CAAC8W,OC/wEam5G,CD+wEL,AC/wEOzuD,GD+wEJzqD,EC/wES,EAAEq5G,CD+wEN,MC/wEa,EAAG;EAE1C,IAAIt1G,ED+wEF,CAAC,GC/wEO,GD+wED,AC/wEIouF,WAAW,CAAEknB,OAAO,CAAE;EAEnC,IAAKt1G,ID+wEF9a,EC/wEQ,ID+wEF,CAAC8W,AC/wEMj8B,QD+wEE,CC/wEO,ED+wEJk7B,AC/wEO,SD+wEE,CAAE5mB,IAAI,CAACkkB,SAAS,EAAE,IAAI,CAACyD,QAAS,CAAC;IC7wE9D,ID+wEC,AC/wEKu5G,UAAU,GAAGH,cAAc,CAACnvI,GAAG,CAAEqvI,OAAQ,CAAC;IAEhD,ED+wEA,EC/wEKC,UAAU,KAAKx1I,SAAS,EAAG;MAE/BigC,MAAM,GAAGouF,WAAW,CAAEmnB,UAAU,CAAE;MD+wEnC,AC9wECrwI,OAAO,CAACC,IAAI,CAAE,+EAA+E,EAAEmwI,OAAO,EAAEC,UAAW,CAAC;IAErH,CAAC,MAAM;MD8wEP,AC5wEC,ID4wEI,EC5wEE,ED4wEE,CAAC/uH,CC5wEC53B,KAAK,CAAE,CD4wEA,CAACyB,MAAM,GAAG,CAAC,EAAG,cC5wEc,GAAGilJ,OAAO,GAAG,GAAI,CAAC;IAEhE,ID4wECpwH,MAAM,CAACsB,QAAQ,GAAG,EAAE;EC1wEtB,MD4wEE,KAAM,IAAIx6B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACw6B,QAAQ,CAACn2B,MAAM,EAAErE,GAAC,EAAG,EAAG;EC1wEpD,OAAOkpJ,CD4wEJhwH,MAAM,CAACsB,OC5wEY,CD4wEJ,AC5wEMwZ,CD4wELhwC,IAAI,CAAE,AC5wEM,CAAC,GD4wEH,CAACw2B,QAAQ,CAAEx6B,GAAC,CAAE,CAACooB,MAAM,CAAEC,IAAK,CAAC,CAAC6Q,MAAO,CAAC;AC1wEpE,QD4wEG;MAED;AC5wEF;MD8wEE;AC5wEF,IAAMswH,iBAAiB,GAAG,8IAA8I;AAExK,MD4wEE,GC5wEOC,CD4wEF,IAAI,CAAClgH,KC5wEQkgH,CAAEz1G,ID4wEA,CAAC3vC,CC5wEK,EAAG,GD4wEF,GAAG,CAAC,EAAG;EC1wEnC,MD4wEE60B,CC5wEK8a,KD4wEC,CAACzK,AC5wEI,CAACggE,OAAO,CAAEigD,CD4wEJ,GAAG,EAAE,WC5wEgB,EAAEE,YAAa,CAAC;AAEzD,QD4wEG,KAAM,IAAI1pJ,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACupC,UAAU,CAACllC,MAAM,EAAErE,GAAC,EAAG,EAAG;AC1wEvD,SAAS0pJ,CD4wEL,IAAMx5G,OC5wEWw5G,CAAEhvD,CD4wEJ,GAAG,CC5wEM,EAAEl7C,CD4wEJ,CAACjW,GC5wEQ,EAAEwe,GAAG,ED4wEH,AC5wEK4hG,CD4wEH3pJ,GAAC,CAAE,EC5wEO,EAAG;EAEnD,IAAIg0C,ID4wED9a,EC5wEO,GAAG,CD4wEJ,CAACqQ,AC5wEK,UD4wEK,CAACvlC,IAAI,CAAEirC,SAAS,CAAE5mB,IAAI,CAACkhB,UAAU,EAAE2G,SAAU,CAAE,CAAC;EC1wEpE,KAAM,CD4wEJ,GC5wEQlwC,CAAC,GAAGo0C,QAAQ,CAAEoL,KAAM,CAAC,EAAEx/C,CAAC,GAAGo0C,QAAQ,CAAE2T,GAAI,CAAC,EAAE/nD,CAAC,EAAG,EAAG;IAE5Dg0C,ED4wEA,IC5wEM,IAAI21G,OAAO,CACfpgD,OAAO,CAAE,cAAc,EAAE,IAAI,GAAGvpG,CAAC,GAAG,IAAK,CAAC,CAC1CupG,OAAO,CAAE,sBAAsB,EAAEvpG,CAAE,CAAC;EAEvC,ID0wEC,IAAKsoB,YAAY,EAAG;ECxwErB,MD0wEE,CC1wEK0rB,GD0wEC1H,GC1wEK,OD0wEK,GAAG6D,gBAAgB,CAAE9nB,IAAI,CAACikB,UAAW,CAAC;ACxwEzD,QDywEG,IAAMC,SAAS,GAAG4D,gBAAgB,CAAE9nB,IAAI,CAACkkB,SAAU,CAAC;QACpD,IAAMnhB,QAAQ,GAAG+kB,gBAAgB,CAAE9nB,IAAI,CAAC+C,QAAS,CAAC;ACxwErD,QDywEG,IAAM7C,MAAM,GAAG4nB,gBAAgB,CAAE9nB,IAAI,CAACE,MAAO,CAAC;QAC9C,IAAMikB,OAAM,GAAG2D,gBAAgB,CAAE9nB,IAAI,CAACmkB,MAAO,CAAC;ACxwEjD,QDywEG,CCzwEMo9G,GDywEAn9G,SAAS,GAAG0D,ECzwEKy5G,CAAEl6G,UAAU,EAAG,CDywEJ,CAAErnB,IAAI,CAACokB,SAAU,CAAC;ECvwEtD,IAAIo9G,EDwwEF,IAAMtgH,SCxwEW,CDwwED,GAAG4G,YCxwEFiF,IDwwEkB,CAAE/sB,CCxwEpB,CAAgBqnB,EDwwEQ,CAACnG,OCxwEC,CAAC0O,EDwwES,CAAC,MCxwED,2BAAA7C,MAAA,CAC3C1F,UAAU,CAACuI,SAAS,yBAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,+BAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,iCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,+BAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,oCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,qCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,uCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,0CAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,gCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,gCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,kCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,qCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,gCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,gCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,kCAAA7C,MAAA,CACpB1F,UAAU,CAACuI,SAAS,0BAC/B;EAED,IAAKvI,EDsvEH,IAAMhD,ICtvEO,CDsvEF,ACtvEGuL,GDsvEA9H,MCtvES,KAAK,KDsvEE,CAAE9nB,CCtvEG,EAAG,CDsvEF,CAACqkB,KAAM,CAAC;ICpvE7Cm9G,IDsvEC,IAAKv9G,OCtvES,GDsvEC,CAACjoC,ACtvEE,MDsvEI,GAAG,CAAC,EAAGmkB,MAAM,CAAC8jB,OCtvEQ,GDsvEE,GAAGA,UAAU;ECpvE7D,CAAC,KDqvEC,CCrvEK,GDqvEAC,CCrvEKmD,QDqvEI,CAACrrC,CCrvEK,CAAC4zC,IDqvEA,GAAG,CAAC,CCrvEK,CDqvEFzvB,ICrvEO,EDqvED,CAAC+jB,MCrvES,EAAG,CDqvEH,GAAGA,SAAS;ICnvEzDs9G,IDovEC,IAAKz+H,OCpvES,CDovED,CAAC/mB,ECpvEI,IDovEE,GAAG,CAAC,EAAGmkB,MAAM,CAAC4C,QAAQ,GAAGA,ACpvEC,QDovEO;EClvEvD,CAAC,KDmvEC,CCnvEK,GDmvEA7C,CCnvEKmnB,KDmvEC,CAACrrC,ICnvEQ,CAAC4zC,CDmvEH,GAAG,CAAC,EAAGzvB,ECnvEK,IDmvEC,CAACD,ACnvEG,MDmvEG,ACnvEG,EAAG,CDmvEHA,MAAM;ICjvEhDshI,IDkvEC,IAAKr9G,OAAM,AClvEG,CDkvEFnoC,GClvEM,GDkvEA,GAAG,CAAC,EAAGmkB,MAAM,CAACgkB,MAAM,GAAGA,AClvEE,ODkvEI;EChvEjD,MDivEE,IAAKC,SAAS,CAACpoC,MAAM,GAAG,CAAC,EAAGmkB,MAAM,CAACikB,SAAS,GAAGA,SAAS;EC/uE1D,MDgvEE,CChvEKo9G,GDgvEAtgH,UAAU,CAACllC,CChvEI,KDgvEE,GAAG,CAAC,EAAGmkB,MAAM,CAAC+gB,UAAU,GAAGA,UAAU;AC9uE9D,QD+uEG,IAAKmD,KAAK,CAACroC,MAAM,GAAG,CAAC,EAAGmkB,MAAM,CAACkkB,KAAK,GAAGA,KAAK;AC7uE/C,MD+uEE,GC/uEOo9G,2BAA2BA,CAAEp6G,UAAU,EAAG;EAElD,ID+uEClnB,AC/uEGuhI,MD+uEG,CAAC7wH,MAAM,GAAGA,GC/uEM,GD+uEA,AC/uEG,sBAAsB;EAEhD,ID+uEC,AC/uEIwW,OD+uEGlnB,GC/uEO,CAACwhI,ED+uEF,WC/uEe,KAAKviJ,uBAAY,EAAG;IAEhDsiJ,mBAAmB,GAAG,oBAAoB;EAE3C,CAAC,GD6uEA,GC7uEM,IAAKr6G,UAAU,CAACs6G,aAAa,KAAKtiJ,2BAAgB,EAAG;IAE3DqiJ,ED4uEA,iBC5uEmB,GAAG,yBAAyB;EAEhD,CAAC,GD2uEA,GC3uEM,IAAKr6G,UAAU,CAACs6G,aAAa,KAAKriJ,uBAAY,EAAG;IAEvDoiJ,ED0uEA,SAAS55G,QC1uEU,GAAG,KD0uEGA,CAAEC,KAAK,EAAG,OC1uEO;EAE3C,MD0uEE,IAAMpuC,MAAM,GAAG,EAAE;ECxuEnB,MDyuEE,CCzuEK+nJ,IDyuEC,IAAM7jJ,GAAG,IAAIkqC,ICzuEK,CDyuEA,EAAG;ACvuE9B,UDyuEI,IAAMtoB,IAAI,GAAGsoB,KAAK,CAAElqC,GAAG,CAAE;ACvuE7B,SAAS+jJ,CDwuEL,OAAOniI,IAAI,CAACuD,QAAQ,GCxuES4+H,CAAEv6G,UAAU,EAAG;EAE/C,IAAIw6G,IDuuEDloJ,MAAM,CAACgC,IAAI,CAAE8jB,ACvuEI,GAAG,CDuuEF,CAAC,gBCvuEmB;EAEzC,IAAK4nB,EDuuEH,QCvuEa,CAACmM,MAAM,EAAG;IAExB,IDuuEC,ICvuEQnM,GDuuED1tC,MAAM,CCvuEK,CAACmoJ,UAAU;MDyuE9B,ACvuEC,KAAKp/I,gCAAqB;IDyuE5B,ECxuEE,KAAKC,gCAAqB;EDwuE3B,MCvuEEk/I,gBAAgB,GAAG,kBAAkB;IDuuEvChkJ,GAAA,CCtuEE;IDsuEFnG,ECpuEC,GDouED,EAED,ACtuEOoL,SDsuEPqP,KAAKA,CAAE61B,SAAS,EAAG,QCtuEW;MDwuE7B,ECvuEE65G,KDuuEK,IAAI,IAAI,CAAC1lJ,ECvuEE,GAAG,MDuuEM,CAAC,CAAC,CAACiW,IAAI,CAAE,IAAI,EAAE41B,CCvuEA,QDuuEU,CAAC;IAEtD,ICxuEG;EDwuEF,ECtuEA;EAED,EDouECnqC,GAAA;ECluED,EDkuECnG,KAAA,ACluEMmqJ,EDouEP,SAAAzvI,IAAIA,CAAEsP,ACpuEiB,MDouEX,EAAqB;ACluElC,MDkuEkC,IAAnBsmB,SAAS,GAAA15B,SAAA,CAAAtS,MAAA,QAAAsS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI;AChuE/B,MDkuEE,GCluEOyzI,CDkuEH,CAAC3lJ,IAAI,GAAGslB,MAAM,CAACtlB,IAAI,ICluEQ2lJ,CAAE16G,UAAU,EAAG;EAE/C,IDkuEC,ACluEG26G,IDkuEC,CAACxnH,EAAE,CAACpoB,IAAI,CAAEsP,GCluEK,GDkuEC,ACluEE,CDkuED8Y,EAAG,CAAC,oBCluEqB;EAE/C,IDkuEC,ACluEI6M,IDkuEA,CAACjL,KCluES,CAACoX,EDkuEF,CAACphC,GCluEO,CDkuEH,CAAEsP,ACluEI,MDkuEE,CAAC0a,QAAS,CAAC;IChuErC,EDiuEA,IAAI,CAAC/iB,CCjuEIguB,ODiuEI,CAACp3B,ECjuEK,CAAC6xI,EDiuED,GAAGpgI,KCjuEQ,CDiuEF,CAACrI,QAAQ,CAACpJ,KAAK;MAC3C,AChuEC,IDguEG,CAACyY,AChuEC/lB,UDguES,CAACyP,IAAI,CAAEsP,MAAM,CAACgH,SChuEF,CDguEa,CAAC;MACzC,EC/tEEs5H,ED+tEE,CAACxoI,KAAK,CAACpH,IAAI,CAAEsP,EC/tEC,GAAG,CD+tEE,CAAClI,KAAM,CAAC,gBC/tEc;MDiuE7C,EChuEE,EDguEE,CAACO,MAAM,CAAC3H,IAAI,CAAEsP,MAAM,CAAC3H,MAAO,CAAC;IC9tEjC,ED+tEA,IAAI,CAACmU,WAAW,CAAC9b,IAAI,CAAEsP,MAAM,CAACwM,WAAY,CAAC;EC7tE5C,ID+tEC,IAAI,CAACnM,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;EC7tEhD,ID+tEC,GC/tEMigI,CD+tEF,CAACthH,cC/tEiB,OD+tEI,GAAGhf,MAAM,CAACgf,qBAAqB;AC7tE3D,MD8tEE,IAAI,CAACE,sBAAsB,GAAGlf,MAAM,CAACkf,sBAAsB;AC5tE7D,MD8tEE,GC9tEOqhH,CD8tEH,CAACrjH,MAAM,CAACN,IAAI,GAAG5c,MAAM,CAACkd,KC9tESqjH,CD8tEH,AC9tEK56G,CD8tEJ/I,IAAI,KC9tEU,EAAG;EAEnD,ID6tEC,AC7tEG4jH,ID6tEC,CAACrhH,OAAO,GAAGnf,KC7tEQ,CD6tEF,CAACmf,CC7tEI,MD6tEG,gBC7tEmB;EAEjD,ID6tEC,AC7tEIwG,ID6tEA,CAACvG,KC7tES,CAAC0S,ID6tEA,EC7tEM,CD6tEH9xB,CC7tEM,KD6tEA,CAACof,UAAU;IC3tEnC,ED4tEA,IAAI,CAACC,CC5tEIsG,UAAU,CAACoM,CD4tEF,GAAG/xB,GC5tEM,GD4tEA,CAACqf,aAAa;MAEzC,AC5tEC,ID4tEG,CAACC,AC5tECp/B,aD4tEY,GAAG8f,MAAM,CAACsf,KC5tEL,QD4tEkB;MACzC,EC5tEEkhH,ED4tEE,CAACjhH,WAAW,GAAGvf,GC5tEG,GD4tEG,AC5tEA,CD4tECuf,WAAW,cC5tEc;MD8tEnD,EC7tEE,ED6tEE,CAACC,UAAU,GAAGxf,MAAM,CAACwf,UAAU,CAAClkC,KAAK,CAAC,CAAC;MAE3C,AC7tEC,ID6tEG,CAAColB,AC7tECvgB,QD6tEO,GAAG8gB,IAAI,CAACC,KAAK,CAAED,CC7tEV,GD6tEc,CAACE,SAAS,CAAEnB,MAAM,CAACU,QAAS,CAAE,CAAC;MAE/D,EC9tEE8/H,ED8tEGl6G,SAAS,KAAK,IAAI,AC9tED,ED8tEI,CC9tED,qBAAqB;QDguE7C,AC/tEC,KD+tEK,IAAIrwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+pB,MAAM,CAACyQ,QAAQ,CAACn2B,MAAM,EAAErE,CAAC,EAAG,EAAG;MC7tEpD,ID+tEC,CC/tEImK,GD+tEE89B,KAAK,GAAGle,MAAM,CAACyQ,KC/tEL,GD+tEa,CAAEx6B,CAAC,CAAE;QC9tElCuqJ,ED+tEA,IAAI,CAAC7vI,GAAG,CAAEutB,KAAK,CAACztB,GC/tEI,ED+tEC,CAAC,AC/tEC,CD+tEC,CAAC,mBC/tEmB;QDiuE7C,AChuEC;IAEF,EDguEA;EC9tED,IDguEC,OAAO,IAAI;EC9tEZ,EDguEA,KChuEO+vI,oBAAoB;AAE5B,ED8tEE;AAAA,AC5tEF,EDmwCuB52I,OCnwCd62I,QDmwC6B,UCnwCXA,CAAE96G,UAAU,EAAG;ADguE1CvH,EC9tEC,IAAMsiH,ED8tEC,CAACjiH,QC9tES,ED8tEC,CC9tEEkH,ED8tEC,QC9tES,CAACg7G,ID8tEI,IAAIx1H,OAAO,CAAE,CAAC,CC9tEA,CD8tEE,CAAC,EAAE,CAAE,CAAC;AAC1DiT,EC7tEC,IAAKsiH,ED6tEE,CAAC3hH,QC7tEQ,KAAK,IAAI,EAAG,OD6tEM,AC7tEC,GD6tEE,CC7tEE,GD6tEE;AAC1CX,EC5tEC,IAAMwiH,ED4tEC,CAAC3hH,GC5tEI,GAAGl0B,IAAI,CAAC+iI,IAAI,CAAE4S,WAAY,CAAC,GAAG,CD4tEF,AC5tEG,GD4tEA,IAAI;AAEhD,EC5tEC,ED4tEKn6G,EC5tECs6G,GD4tEI,GAAG,KC5tEI,GAAG,GAAG,ED4tEI,CC5tEDH,GD4tEKv1H,OAAO,CAAC,AC5tEF,CD4tEG;AACzC,EC3tEC,ED2tEKqb,EC3tECs6G,GD2tEI,GAAG,IC3tEG,GAAG,GAAG,GD2tEK,CC3tEA,CAAC,ED2tEG31H,CC3tEApgB,IAAI,CAACa,CD2tEE,CAAC,CAAC,AC3tED,CAAEb,IAAI,CAACgD,GAAG,CAAE,CAAC,EAAE6yI,MAAO,CAAC,EAAE,CAAC,GAAG,EAAG,CAAC,CAAE;AD4tE3E,EC1tEC,ED0tEKn6G,KAAK,AC1tEH,GD0tEM,aAAc,IAAItb,OAAO,CAAC,CAAC;AACzC,IAAMub,AC3tEIo6G,KD2tEC,GAAG,EC3tEM,EAAVA,SD2tEkB,CC3tER,GD2tEY31H,OAAO,CAAC,CAAC;AAEzC,IAAMwb,AC7tEgBk6G,ID6tEZ,GAAG,IC7tEoB,EAAXA,OD6tEK,IAAI11H,AC7tEE,OD6tEK,CAAC,CAAC;AACxC,IAAMyb,AC9tE6Bg6G,ID8tEzB,EC9tE+B,CD8tE5B,CC9tEsBA,YD8tER,IAAIz1H,OAAO,CAAC,CAAC;AACxC,EC/tE0C,CAAC,CD+tErC0b,IAAI,GAAG,aAAc,IAAI1b,OAAO,CAAC,CAAC;AACxC,AC9tEA,ID8tEM2b,IAAI,GAAG,aAAc,IAAI3b,OAAO,CAAC,CAAC;AACxC,AC7tEA,ID6tEM4b,IAAI,CC7tEDg6G,ED6tEI,UC7tEQA,CAAEvgG,ED6tEI,IAAIr1B,EC7tEA,EAAE61H,GD6tEK,CAAC,CAAC,GC7tEC,EAAEr7G,UAAU,EAAE+8F,aAAa,EAAG;AD8tEvE,EC5tEC,ED4tEK17F,IAAI,GAAG,aAAc,IAAI7b,OAAO,CAAC,CAAC;AAExC,EC7tEC,ED6tEK8b,IAAI,GAAG,aAAc,IAAItlB,OAAO,CAAC,CAAC;AACxC,IAAMulB,IAAI,GAAG,aAAc,IAAIvlB,OAAO,CAAC,CAAC;AACxC,EC7tEC,ED6tEKwlB,EC7tEC7tB,ED6tEG,AC7tED,GD6tEI,AC7tEDknC,QAAQ,CAACnjC,ID6tEM,IAAIsE,EC7tEA,CAAC,CAAC,GD6tEK,CAAC,CAAC;AAAC,EC3tExC,ED6tEKylB,EC7tECia,MD6tEO,CC7tEA,ED6tEA3kD,CC7tEGipC,MD6tEH,CAAAyB,GC7tEa,CAACia,ID6tEd,GC7tEqB;ED+tElC,AC7tEA,IAAIE,KD6tEJna,OC7tEgB,ED6tEhB,CC7tEmBzB,CD6tEoD,SC7tE1C,CAAC4b,YAAY;EAC1C,ED4tEuE,EC5tEnEC,ED4tESrrD,CAAC,GAAAyW,QC5tEI,CD4tEJ,CAAAtS,CC5tEOqrC,KD4tEP,KC5tEiB,CAAC6b,ED4tElB50C,SAAA,GC5tEgC,KD4tEhC5C,SAAA,GAAA4C,SAAA,MAAG,IAAIue,OAAO,CAAC,CAAC;EC1tE9B,ED0tE8B,EC1tExB60H,ED0tE0B1xI,CAAC,GAAA1B,SAAA,CAAAtS,GC1tER,GD0tEQ,AC1tELylJ,QD0tEKnzI,SAAA,QAAA5C,EC1tEsB,CAAE27B,MD0tExB,GAAA/4B,CC1tEmC,CAAC,OD0tEpC,MAAG,IAAIue,OAAO,CAAC,CAAC;ECztEjD,EDytEiD,ECztE3Cg1H,EDytE6C9pJ,CAAC,GAAAuW,SAAA,CAAAtS,ACztE9B,GAAG4lJ,GDytE2B,QAAAtzI,SAAA,ICztEH,CAAE+4B,GDytEC37B,OCztEU,CAAC,CDytEX,GAAA4C,SAAA,MAAG,IAAIue,OAAO,CAAC,CAAC;ECxtEpE,EDwtEoEnvB,ECxtE9DskJ,aDwtE8D,GCxtE9C,GAAGD,CDwtE2Cj5G,QAAA,eCxtEnB,CAAEzB,UAAW,CAAC;EAC/D,EDytEC,ECztEK66G,EDytED,CAACrqJ,CAAC,GAAGA,CAAC,YCztEe,GAAGoqJ,4BAA4B,CAAE56G,UAAW,CAAC;EACvE,EDytEC,ECztEKs7G,EDytED,CAAC3yI,CAAC,GAAGA,CAAC,QCztEW,GAAGmyI,kBAAkB,CAAE96G,UAAW,CAAC;EAEzD,EDwtEC,ECxtEKu7G,EDwtED,CAAC7qJ,CAAC,GAAGA,CAAC,cCxtEiB,GAAGinJ,wBAAwB,CAAE33G,UAAW,CAAC;ED0tErE,ACxtEA,IAAMw7G,aAAa,GAAGxD,eAAe,CAAEt8F,OAAQ,CAAC;EDwtE/C,ACttED,IAAM2hF,GDstEL5mI,ICttEY,GAAGkd,EAAE,CAAC8nI,EDstElB,CAAAh6G,QAAA,ECttE+B,CAAC,CAAC;EAElC,EDotECjrC,ECptEGklJ,CDotEH,WCptEe,EAAEC,cAAc;EAChC,EDmtECtrJ,ECntEGurJ,GDmtEH,EAmHD,QCt0EiB,CDs0EjBryI,ECt0EoBy2B,CDs0EjBz2B,CAAE/Y,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,CCt0EkB,CDs0Ef,ACt0EgB4rD,WAAW,GAAG,WAAW,GAAGtc,UAAU,CAACsc,WAAW,GAAG,IAAI,GAAG,EAAE;EAE7F,IDs0EC,ACt0EItc,IDs0EA,CAACxvC,CAAC,CAACua,GCt0EO,CDs0EH,ACt0EImyE,CDs0EF1sF,CAAE,CAAC,gBCt0EkB,EAAG;IAErCkrJ,EDq0EA,IAAI,CAAC/yI,CAAC,CAACoC,GCr0EK,CDq0ED,CAAEpC,CAAE,ACr0EA,CDq0EC,ACn0Ef,sBAAsB,GAAGq3B,UAAU,CAAC67G,UAAU,EAC9C,sBAAsB,GAAG77G,UAAU,CAAC87G,UAAU,EAE9CN,aAAa,CAEb,CAAC3kF,MAAM,CAAEkhF,eAAgB,CAAC,CAACrB,IAAI,CAAE,IAAK,CAAC;IAExC,ED6zEA,EC7zEKgF,ED6zED,CAAChrJ,CAAC,CAACqa,IAAI,CAAEra,CAAE,CAAC,AC7zEC,CAACiE,MAAM,GAAG,CAAC,EAAG;MD+zE/B,AC7zEC+mJ,OD6zEM,IAAI,CC7zEE,IAAI,IAAI;ID+zEtB,AC7zEC;ED6zEA,EC3zEAC,cAAc,GAAG,CAEhB,sBAAsB,GAAG37G,UAAU,CAAC67G,UAAU,EAC9C,sBAAsB,GAAG77G,UAAU,CAAC87G,UAAU,EAE9CN,aAAa,CAEb,CAAC3kF,MAAM,CAAEkhF,eAAgB,CAAC,CAACrB,IAAI,CAAE,IAAK,CAAC;IDozExClgJ,AClzEA,GDkzEA,CClzEKmlJ,cAAc,CAAChnJ,MAAM,GAAG,CAAC,EAAG;IDkzEjCtE,EChzECsrJ,GDgzED,EAED,SAAAj6G,AClzEgB,IAAI,IAAI,eDkzEDA,CAAEvY,MAAM,EAAEwY,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;IChzE7C,EDkzEA,IAAI,CAACrxC,CAAC,CAACua,IAAI,CAAEoe,MAAM,CAAEwY,EAAE,CAAG,CAAC;EChzE5B,CAAC,GDizEA,GCjzEM,CDizEF,CAACh5B,CAAC,CAACoC,IAAI,CAAEoe,MAAM,CAAEyY,EAAE,CAAG,CAAC;IC/yE3B85G,EDgzEA,IAAI,CAAChrJ,CAAC,CAACqa,GChzEK,CDgzED,CAAEoe,CChzEE,CAEd+wH,ID8yEkB,CAAEr4G,EAAE,CAAG,CAAC,QC9yET,CAAE7B,UAAW,CAAC,EAE/B,sBAAsB,GAAGA,UAAU,CAAC67G,UAAU,EAC9C,sBAAsB,GAAG77G,UAAU,CAAC87G,UAAU,EAE9CN,aAAa,EAEbx7G,UAAU,CAAC63G,yBAAyB,GAAG,2BAA2B,GAAG,EAAE,EACvE73G,UAAU,CAAC+7G,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjD/7G,UAAU,CAACg8G,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5Dh8G,UAAU,CAACi8G,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrDj8G,UAAU,CAACk8G,eAAe,GAAG,8BAA8B,GAAG,EAAE,EAChEl8G,UAAU,CAACm8G,eAAe,GAAG,8BAA8B,GAAG,EAAE,EAEhEn8G,UAAU,CAACo8G,MAAM,IAAIp8G,UAAU,CAAC0N,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5D1N,UAAU,CAACo8G,MAAM,IAAIp8G,UAAU,CAACq8G,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjEr8G,UAAU,CAAChC,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvCgC,UAAU,CAACmM,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7CnM,UAAU,CAACmM,MAAM,GAAG,UAAU,GAAGwuG,gBAAgB,GAAG,EAAE,EACtD36G,UAAU,CAACiL,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDjL,UAAU,CAACmL,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3CnL,UAAU,CAACqL,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/CrL,UAAU,CAACuL,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDvL,UAAU,CAACs8G,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1Et8G,UAAU,CAACu8G,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5Ev8G,UAAU,CAAC0L,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/D1L,UAAU,CAAC+L,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvD/L,UAAU,CAAC/lB,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrD+lB,UAAU,CAAC8K,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAE3D9K,UAAU,CAACmK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDnK,UAAU,CAACoK,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5EpK,UAAU,CAACqK,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtErK,UAAU,CAAC2K,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7D3K,UAAU,CAAC4K,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhF5K,UAAU,CAACgM,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDhM,UAAU,CAACkM,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClElM,UAAU,CAACiM,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1EjM,UAAU,CAAC6L,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD7L,UAAU,CAAC8L,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD9L,UAAU,CAACgL,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDhL,UAAU,CAAC8G,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnD9G,UAAU,CAAC0M,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD1M,UAAU,CAAC2M,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/D3M,UAAU,CAAC6M,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzD7M,UAAU,CAAC49C,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5D59C,UAAU,CAAC69C,iBAAiB,GAAG,gCAAgC,GAAG,EAAE;IAEpE,EDyvED,OAAO,IAAI;IAEZ;EAAC,ECzvEC79C,UAAU,CAACw8G,KAAK,GAAG,iBAAiB,GAAGx8G,UAAU,CAACw8G,KAAK,GAAG,EAAE,EAC5Dx8G,UAAU,CAACy8G,UAAU,GAAG,sBAAsB,GAAGz8G,UAAU,CAACy8G,UAAU,GAAG,EAAE,EAC3Ez8G,UAAU,CAAC08G,UAAU,GAAG,sBAAsB,GAAG18G,UAAU,CAAC08G,UAAU,GAAG,EAAE,EAC3E18G,UAAU,CAAC28G,OAAO,GAAG,mBAAmB,GAAG38G,UAAU,CAAC28G,OAAO,GAAG,EAAE,EAClE38G,UAAU,CAAC48G,aAAa,GAAG,yBAAyB,GAAG58G,UAAU,CAAC48G,aAAa,GAAG,EAAE,EACpF58G,UAAU,CAAC68G,SAAS,GAAG,qBAAqB,GAAG78G,UAAU,CAAC68G,SAAS,GAAG,EAAE,EACxE78G,UAAU,CAAC88G,WAAW,GAAG,uBAAuB,GAAG98G,UAAU,CAAC88G,WAAW,GAAG,EAAE,EAC9E98G,UAAU,CAAC+8G,iBAAiB,GAAG,6BAA6B,GAAG/8G,UAAU,CAAC+8G,iBAAiB,GAAG,EAAE,EAEhG/8G,UAAU,CAACg9G,cAAc,GAAG,0BAA0B,GAAGh9G,UAAU,CAACg9G,cAAc,GAAG,EAAE,EACvFh9G,UAAU,CAACi9G,cAAc,GAAG,0BAA0B,GAAGj9G,UAAU,CAACi9G,cAAc,GAAG,EAAE,EAEvFj9G,UAAU,CAACk9G,eAAe,GAAG,2BAA2B,GAAGl9G,UAAU,CAACk9G,eAAe,GAAG,EAAE,EAE1Fl9G,UAAU,CAACm9G,cAAc,GAAG,0BAA0B,GAAGn9G,UAAU,CAACm9G,cAAc,GAAG,EAAE,EACvFn9G,UAAU,CAACo9G,oBAAoB,GAAG,iCAAiC,GAAGp9G,UAAU,CAACo9G,oBAAoB,GAAG,EAAE,EAC1Gp9G,UAAU,CAACq9G,uBAAuB,GAAG,oCAAoC,GAAGr9G,UAAU,CAACq9G,uBAAuB,GAAG,EAAE,EAEnHr9G,UAAU,CAACs9G,gBAAgB,GAAG,4BAA4B,GAAGt9G,UAAU,CAACs9G,gBAAgB,GAAG,EAAE,EAC7Ft9G,UAAU,CAACu9G,yBAAyB,GAAG,sCAAsC,GAAGv9G,UAAU,CAACu9G,yBAAyB,GAAG,EAAE,EAEzHv9G,UAAU,CAACw9G,eAAe,GAAG,4BAA4B,GAAGx9G,UAAU,CAACw9G,eAAe,GAAG,EAAE,EAC3Fx9G,UAAU,CAACy9G,mBAAmB,GAAG,gCAAgC,GAAGz9G,UAAU,CAACy9G,mBAAmB,GAAG,EAAE,EAEvGz9G,UAAU,CAAC09G,aAAa,GAAG,yBAAyB,GAAG19G,UAAU,CAAC09G,aAAa,GAAG,EAAE,EACpF19G,UAAU,CAAC29G,kBAAkB,GAAG,+BAA+B,GAAG39G,UAAU,CAAC29G,kBAAkB,GAAG,EAAE,EACpG39G,UAAU,CAAC49G,sBAAsB,GAAG,mCAAmC,GAAG59G,UAAU,CAAC49G,sBAAsB,GAAG,EAAE,EAEhH59G,UAAU,CAAC69G,iBAAiB,GAAG,6BAA6B,GAAG79G,UAAU,CAAC69G,iBAAiB,GAAG,EAAE,EAChG79G,UAAU,CAAC89G,cAAc,GAAG,0BAA0B,GAAG99G,UAAU,CAAC89G,cAAc,GAAG,EAAE;ID4tExFtnJ,AC1tEC,GD0tED;IAAAnG,KAAA,EAED,SAAAyxC,0BAA0BA,CAAEh0B,SAAS,EAAE6zB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;IC1tElD7B,ED4tED,IAAI,CAACxvC,CAAC,CAACqd,CC5tEI,CAACkwI,cAAc,GD4tEA,CAAEjwI,AC5tEEkyB,SD4tEO,CC5tEG,CD4tED2B,AC5tEE8L,ED4tEC,CAAC,QC5tES,KAAK,KAAK,GAAG,qBAAqB,GAAG,EAAE,EAC1FzN,UAAU,CAAC2G,YAAY,GAAG,mBAAmB,GAAG,EAAE,EAClD3G,UAAU,CAACg+G,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDh+G,UAAU,CAACi+G,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cj+G,UAAU,CAACk+G,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cl+G,UAAU,CAACm+G,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cn+G,UAAU,CAACo+G,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDp+G,UAAU,CAACyN,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnDzN,UAAU,CAACq+G,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAEjDr+G,UAAU,CAAC2qD,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD3qD,UAAU,CAACguG,YAAY,IAAIhuG,UAAU,CAACyN,WAAW,KAAK,KAAK,GAAG,0BAA0B,GAAG,EAAE,EAC3FzN,UAAU,CAACiuG,WAAW,GAAK,yBAAyB,GAAG,EAAE,EACzDjuG,UAAU,CAAC2tG,iBAAiB,GAAG,CAAC,GAAK,sCAAsC,GAAG3tG,UAAU,CAACs+G,kBAAkB,GAAG,EAAE,EAChHt+G,UAAU,CAAC2tG,iBAAiB,GAAG,CAAC,GAAK,6BAA6B,GAAG3tG,UAAU,CAAC2tG,iBAAiB,GAAG,EAAE,EACxG3tG,UAAU,CAACu+G,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpDv+G,UAAU,CAACw+G,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhDx+G,UAAU,CAACy+G,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1Dz+G,UAAU,CAACy+G,gBAAgB,GAAG,UAAU,GAAGpE,mBAAmB,GAAG,EAAE,EAEnEr6G,UAAU,CAACgN,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAE/DhN,UAAU,CAAC0+G,cAAc,GAAG,CAAC,GAAG,0BAA0B,GAAG,EAAE,EAE/D1+G,UAAU,CAACuiG,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAClEviG,UAAU,CAACwiG,kBAAkB,GAAG,6BAA6B,GAAG,EAAE,EAElE,2BAA2B,EAC3B,+BAA+B,EAC/B,gCAAgC,EAChC,0BAA0B,EAC1B,4BAA4B,EAC5B,8BAA8B,EAC9B,8BAA8B,EAE9B,uBAAuB,EAEvB,iCAAiC,EAEjC,QAAQ,EAER,6BAA6B,EAE7B,gCAAgC,EAEhC,QAAQ,EAER,6BAA6B,EAE7B,kCAAkC,EAElC,QAAQ,EAER,0BAA0B,EAC1B,wBAAwB,EACxB,oBAAoB,EAEpB,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,oBAAoB,EAEpB,0BAA0B,EAE1B,QAAQ,EAER,gCAAgC,EAEhC,wBAAwB,EAExB,4BAA4B,EAE5B,wBAAwB,EAExB,QAAQ,EAER,qBAAqB,EAErB,4BAA4B,EAC5B,6BAA6B,EAE7B,QAAQ,EAER,IAAI,CAEJ,CAAC3rE,MAAM,CAAEkhF,eAAgB,CAAC,CAACrB,IAAI,CAAE,IAAK,CAAC;IAExCiF,EDmnEA,IAAI,CAAChzI,CAAC,CAACkF,KCnnEO,GAAG,CAEhBqsI,UDinEyB,CAAEpsI,MCjnEV,CAAEkyB,EDinEiB,EAAE4B,EAAG,CAAC,GCjnEZ,CAAC,EAE/B,sBAAsB,GAAG5B,UAAU,CAAC67G,UAAU,EAC9C,sBAAsB,GAAG77G,UAAU,CAAC87G,UAAU,EAE9CN,aAAa,EAEbx7G,UAAU,CAACo8G,MAAM,IAAIp8G,UAAU,CAAC0N,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5D1N,UAAU,CAACo8G,MAAM,IAAIp8G,UAAU,CAACq8G,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjEr8G,UAAU,CAAC4I,eAAe,GAAG,2BAA2B,GAAG,EAAE,EAC7D5I,UAAU,CAAChC,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvCgC,UAAU,CAAC+K,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7C/K,UAAU,CAACmM,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7CnM,UAAU,CAACmM,MAAM,GAAG,UAAU,GAAGquG,gBAAgB,GAAG,EAAE,EACtDx6G,UAAU,CAACmM,MAAM,GAAG,UAAU,GAAGwuG,gBAAgB,GAAG,EAAE,EACtD36G,UAAU,CAACmM,MAAM,GAAG,UAAU,GAAG0uG,oBAAoB,GAAG,EAAE,EAC1DS,gBAAgB,GAAG,6BAA6B,GAAGA,gBAAgB,CAACH,UAAU,GAAG,EAAE,EACnFG,gBAAgB,GAAG,8BAA8B,GAAGA,gBAAgB,CAACJ,WAAW,GAAG,EAAE,EACrFI,gBAAgB,GAAG,yBAAyB,GAAGA,gBAAgB,CAACL,MAAM,GAAG,IAAI,GAAG,EAAE,EAClFj7G,UAAU,CAACiL,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDjL,UAAU,CAACmL,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3CnL,UAAU,CAACqL,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/CrL,UAAU,CAACuL,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDvL,UAAU,CAACs8G,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1Et8G,UAAU,CAACu8G,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5Ev8G,UAAU,CAAC+L,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvD/L,UAAU,CAAC/lB,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrD+lB,UAAU,CAAC8K,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAE3D9K,UAAU,CAACiK,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDjK,UAAU,CAACmK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDnK,UAAU,CAACoK,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5EpK,UAAU,CAACqK,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtErK,UAAU,CAACuK,UAAU,GAAG,wBAAwB,GAAG,EAAE,EAErDvK,UAAU,CAACwK,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDxK,UAAU,CAAC2K,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7D3K,UAAU,CAAC4K,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhF5K,UAAU,CAACgM,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDhM,UAAU,CAACkM,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClElM,UAAU,CAACiM,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1EjM,UAAU,CAAC6L,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD7L,UAAU,CAAC8L,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzD9L,UAAU,CAACgL,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDhL,UAAU,CAACoN,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDpN,UAAU,CAAC8G,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnD9G,UAAU,CAACwJ,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3CxJ,UAAU,CAAC49C,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5D59C,UAAU,CAAC69C,iBAAiB,GAAG,gCAAgC,GAAG,EAAE,EAEpE79C,UAAU,CAAC0M,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD1M,UAAU,CAAC2M,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/D3M,UAAU,CAAC6M,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzD7M,UAAU,CAAC+9G,cAAc,IAAI/9G,UAAU,CAACyN,WAAW,KAAK,KAAK,GAAG,qBAAqB,GAAG,EAAE,EAC1FzN,UAAU,CAAC2G,YAAY,IAAI3G,UAAU,CAACk8G,eAAe,IAAIl8G,UAAU,CAACg8G,aAAa,GAAG,mBAAmB,GAAG,EAAE,EAC5Gh8G,UAAU,CAACg+G,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDh+G,UAAU,CAACi+G,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cj+G,UAAU,CAACk+G,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cl+G,UAAU,CAACm+G,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cn+G,UAAU,CAACo+G,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDp+G,UAAU,CAACyM,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDzM,UAAU,CAACyN,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnDzN,UAAU,CAACu+G,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpDv+G,UAAU,CAACw+G,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhDx+G,UAAU,CAACy+G,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1Dz+G,UAAU,CAACy+G,gBAAgB,GAAG,UAAU,GAAGpE,mBAAmB,GAAG,EAAE,EAEnEr6G,UAAU,CAAC6I,kBAAkB,GAAG,6BAA6B,GAAG,EAAE,EAElE7I,UAAU,CAAC0+G,cAAc,GAAG,CAAC,GAAG,0BAA0B,GAAG,EAAE,EAE/D1+G,UAAU,CAAC2+G,kBAAkB,GAAG,8BAA8B,GAAG,EAAE,EACnE3+G,UAAU,CAAC4+G,0BAA0B,GAAG,uCAAuC,GAAG,EAAE,EAEpF5+G,UAAU,CAACuiG,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAClEviG,UAAU,CAACwiG,kBAAkB,GAAG,6BAA6B,GAAG,EAAE,EAElE,0BAA0B,EAC1B,8BAA8B,EAC9B,8BAA8B,EAE5BxiG,UAAU,CAACs8F,WAAW,KAAK5hI,wBAAa,GAAK,sBAAsB,GAAG,EAAE,EACxEslC,UAAU,CAACs8F,WAAW,KAAK5hI,wBAAa,GAAKg4H,WAAW,CAAE,2BAA2B,CAAE,GAAG,EAAE;IAAE,EDmhEjG,IAAI,CAAChiI,CAAC,CAACmd,mBAAmB,CAAEC,SAAS,EAAE+zB,EAAG,CAAC;IClhExC7B,EDohEH,OAAO,CCphEM,CAACs8F,EDohEH,SCphEc,KAAK5hI,wBAAa,GAAK88I,sBAAsB,CAAE,aAAa,EAAEx3G,UAAU,CAACs8F,WAAY,CAAC,GAAG,EAAE,EAEnHt8F,UAAU,CAAC2I,SAAS,GAAG,mBAAmB,GAAG,EAAE,EAC/C3I,UAAU,CAAC6+G,MAAM,GAAG,gBAAgB,GAAG,EAAE,EAEzCnsB,WAAW,CAAE,0BAA0B,CAAE;IDihE3C,ACjhE6C;EDihE5C,EChhEC4kB,wBAAwB,CAAE,qBAAqB,EAAEt3G,UAAU,CAACgb,gBAAiB,CAAC,EAC9E08F,oBAAoB,CAAC,CAAC,EAEtB13G,UAAU,CAAC8+G,eAAe,GAAG,wBAAwB,GAAG9+G,UAAU,CAACw/C,YAAY,GAAG,EAAE,EAEpF,IAAI,CAEJ,CAAC3oB,MAAM,CAAEkhF,eAAgB,CAAC,CAACrB,IAAI,CAAE,IAAK,CAAC;EAEzC,EDugEClgJ,GAAA;ECrgEDolD,EDqgECvrD,KAAA,EAED,GCvgEY,GAAGmpJ,GDugEf1uI,KAAKA,CAAA,EAAG,ICvgEsB,CAAE8wC,YAAa,CAAC;EAC9CA,IDwgEC,OAAO,CCxgEI,GDwgEA,ACxgEG48F,IDwgEC,CAAC1jJ,WAAW,ACxgEG,CDwgEF,ACxgEI8mD,CDwgEH,CAAC7wC,IAAI,CAAE,IAAK,CAAC,ACxgEE,EAAEi1B,UAAW,CAAC;EAC3D4b,EDygEA,UCzgEY,GAAGw9F,wBAAwB,CAAEx9F,YAAY,EAAE5b,UAAW,CAAC;EDygElE,ACvgED6b,cAAc,GAAG29F,eAAe,CAAE39F,cAAe,CAAC;EAClDA,EDsgECrlD,GAAA,SCtgEa,GAAGgiJ,gBAAgB,CAAE38F,cAAc,EAAE7b,UAAW,CAAC;EAC/D6b,EDqgECxrD,KAAA,EAED,KCvgEc,GAAG+oJ,CDugEjBruI,IAAIA,CAAE2gB,QAAQ,EAAG,QCvgEwB,CAAEmwB,cAAc,EAAE7b,UAAW,CAAC;EAEvE4b,IDugEC,IAAI,CAACprD,CAAC,CAACua,CCvgEI,GDugEA,ACvgEGgvI,CDugEDruH,QAAQ,CAACl7B,CAAE,ACvgEC,CDugEA,ACvgEEorD,YAAa,CAAC;EAC1CC,IDugEC,IAAI,CAAClzC,CAAC,CAACoC,GCvgEM,CDugEF,CAAE2gB,CCvgEGquH,ODugEK,CAACpxI,CAAE,CAAC,CCvgEE,CAAEkzC,cAAe,CAAC;EAE9C,IDsgEC,ACtgEI7b,IDsgEA,CAACtvC,CAAC,CAACqa,GCtgEO,CDsgEH,ACtgEImyE,CDsgEFxxD,QAAQ,CAACh7B,CAAE,CAAC,OCtgES,KAAK,IAAI,EAAG;IAE9C,EDsgEA,OAAO,IAAI;IAEZ;EAAC,ECtgEAkrJ,aAAa,GAAG,mBAAmB;IDsgEnCplJ,ACpgEAklJ,GDogEA,SCpgEY,GAAG,CACdH,sBAAsB,EACtB,sBAAsB,EACtB,qBAAqB,EACrB,2BAA2B,CAC3B,CAAC7E,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,GAAGgF,YAAY;ID+/DpCrrJ,AC7/DAsrJ,KD6/DA,EAED,OC//De,ED+/Df55G,CC//DkB,CAChB,KD8/DKA,CAAA,EAAG,YC9/DY,EAClB/B,UAAU,CAACsc,WAAW,KAAK34C,gBAAK,GAAK,EAAE,GAAG,mDAAmD,EAC7Fq8B,UAAU,CAACsc,WAAW,KAAK34C,gBAAK,GAAK,EAAE,GAAG,mCAAmC,EAC/E,sCAAsC,EACtC,2BAA2B,EAC3B,6BAA6B,EAC7B,mCAAmC,EACnC,oCAAoC,EACpC,4CAA4C,EAC5C,sCAAsC,EACtC,sCAAsC,EACtC,8CAA8C,EAC9C,wCAAwC,CACxC,CAAC+yI,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,GAAGiF,cAAc;EAEvC,IDi/DC/6G,KAAK,CAACt1B,UAAU,CAAE,IAAI,CAAC5a,CAAC,EAAE,IAAI,CAACiY,CAAE,CAAC;EC/+DnC,IDg/DCk4B,ACh/DKk+G,KDg/DA,CAACzzI,ICh/DS,GAAGswI,GDg/DF,CAAE,IAAI,CAACprJ,CAAC,EAAE,CCh/DK,GDg/DD,ACh/DIkrJ,CDg/DH/yI,CAAE,CAAC,SCh/DY,GAAGizC,YAAY;EAC9D,IDi/DC,ACj/DKojG,ODi/DEp+G,KAAK,ACj/DK,CDi/DJv0B,ECj/DOuvI,GDi/DF,CAAE/6G,KAAM,CAAC,CAAClsC,ECj/DK,GAAGgnJ,CDi/DF,CAAC,CAAC,GAAG,GAAG,KCj/DQ,GAAG9/F,cAAc;IDm/DpE;EAAC,ACj/DD;EACA,EDg/DCrlD,GAAA;IAAAnG,KAAA,EAED,SAAA2xC,WAAWA,CAAEj9B,MAAM,EAAG;ECh/DtB,IDk/DC,ACl/DKk6I,ODk/DEl6I,MAAM,CAACmG,ACl/DK,GAAG8qI,ODk/DE,CAAE,GCl/DO,CDk/DH,ACl/DKriI,CDk/DJnjB,CAAC,ACl/DK,EDk/DH,ACl/DKmjB,EAAE,CAACuuH,CDk/DJ,CAACv5H,CAAE,CAAC,CAACqC,GAAG,CAAE,IAAI,ACl/DG,CDk/DFta,CAAE,ACl/DEquJ,CDk/DD,CAACvzI,QCl/DW,CAAC,KDk/DE,CAAE,CAAC,GAAG,CAAE,CAAC;ECj/DjF,EDm/DA,ECn/DM0zI,gBAAgB,GAAGlJ,WAAW,CAAEriI,EAAE,EAAEA,EAAE,CAACyuH,eAAe,EAAE4c,YAAa,CAAC;EDm/D3E,ACj/DDrrI,EAAE,CAACwrI,YAAY,CAAE9hB,OAAO,EAAE4hB,cAAe,CAAC;EAC1CtrI,EDg/DCnd,ACh/DC,CAAC2oJ,EDg/DF,UCh/Dc,CAAE9hB,OAAO,EAAE6hB,gBAAiB,CAAC;IDg/D3C7uJ,KAAA,EAED,SAAA4xC,SAASA,CAAEl9B,MAAM,EAAG;ECh/DpB,IDk/DC,OAAO08B,QAAQ,CAACQ,SAAS,CAAE,IAAI,CAACzxC,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAEqU,MAAO,CAAC;IAE5D;EAAC,ACl/DD,IAAKi7B,UAAU,CAACoc,mBAAmB,KAAK/3C,SAAS,EAAG;IDk/DnD7N,ACh/DAmd,EAAE,CDg/DF,ACh/DGyrI,kBAAkB,CAAE/hB,OAAO,EAAE,CAAC,EAAEr9F,UAAU,CAACoc,mBAAoB,CAAC;EAEpE,CAAC,CD8+DA/rD,KAAA,AC9+DM,EDg/DP,ECh/DY2vC,ODg/DZkC,GCh/DsB,CAACyoD,IDg/DfzoD,CAAEn9B,MAAM,CCh/DmB,CDg/DhB,ICh/DqB,IAAI,EAAG;IAE9C,EDg/DA,OAAOA,MAAM,CAACo9B,qBAAqB,CAAE,IAAI,CAAC3xC,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAE,CAAC;IAE9D,ACj/DCijB,EAAE,CAACyrI,kBAAkB,CAAE/hB,OAAO,EAAE,CAAC,EAAE,UAAW,CAAC;EDi/D/C,AC/+DD;EAEA1pH,ED6+DCnd,AC7+DC,CAAC6oJ,ED6+DF,SC7+Da,CAAEhiB,OAAQ,CAAC;EAEzB,ED2+DChtI,KAAA,EAED,AC7+DSivJ,SD6+DTl9G,CC7+DmBk9G,CAAEC,IAAI,EAAG,ID6+DhBn9G,CAAErY,KAAK,EAAEhlB,MAAM,EAAG;IC3+D7B,ED6+DA,OAAO08B,QAAQ,CAACW,YAAY,CAAErY,KAAK,EAAE,IAAI,CAACv5B,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAEqU,MAAO,CAAC;IAEtE,AC9+DC,IAAK81C,QAAQ,CAAC2kG,KAAK,CAACC,iBAAiB,EAAG;ED8+DxC,IC5+DC,IAAMC,UAAU,GAAG/rI,EAAE,CAACgsI,iBAAiB,CAAEtiB,OAAQ,CAAC,CAACz1C,IAAI,CAAC,CAAC;ID4+D1DpxF,EC3+DC,CD2+DD,GC3+DOopJ,SAAS,GAAGjsI,EAAE,CAACujI,gBAAgB,CAAE+H,cAAe,CAAC,CAACr3D,IAAI,CAAC,CAAC;ID2+D/Dv3F,EC1+DC,GD0+DD,CC1+DOwvJ,CD4+DR,SAAAx9G,CC5+DmB,GAAG1uB,EAAE,CAACujI,SD4+DT70G,CAAEtY,KAAK,CC5+DkB,CD4+DhBxc,AC5+DkB2xI,ED4+DhB,EAAE1xI,EAAE,EAAE80B,EAAE,EAAEv9B,IC5+DuB,CAAC,CD4+DlB,AC5+DmB6iF,ED4+DhB,EC5+DoB,CAAC,CAAC;MD8+DnE,AC5+DC,IAAIk4D,GD4+DEr+G,KC5+DM,GD4+DE,AC5+DC,CD4+DAY,GC5+DI,aD4+DY,CAAEtY,KAAK,EAAE,IAAI,CAACv5B,CAAC,EAAE,IAAI,CAACmY,CAAC,EAAE,IAAI,CAACjY,CAAC,EAAE6c,EAAE,EAAEC,EAAE,EAAE80B,EAAE,EAAEv9B,MAAO,CAAC;IAEtF,EC7+DE,IAAIg7I,eAAe,GAAG,IAAI;ED6+D3B,IC3+DC,IAAKpsI,EAAE,CAAC8hI,mBAAmB,CAAEpY,OAAO,EAAE1pH,EAAE,CAACqsI,WAAY,CAAC,KAAK,KAAK,EAAG;ID2+DpExpJ,GAAA,CCz+DEspJ,QAAQ,GAAG,KAAK;IDy+DlBzvJ,ICv+DE,CDu+DF,EAED,CCz+DQ,OAAOwqD,CDy+Df9vB,OCz+DuB,CAACy0H,KDy+DXz0H,ACz+DgB,CDy+DdhB,ACz+Dek2H,KDy+DV,EAAG,MCz+DoB,KAAK,UAAU,EAAG;MD2+D5D,ICz+DGplG,GDy+DIpZ,KCz+DI,CAAC+9G,EDy+DG,CAACz0H,ECz+DC,CAACk1H,UDy+DW,CAAEl2H,ECz+DA,CAAEpW,EDy+DG,ACz+DD,EDy+DG,ACz+DD0pH,IDy+DK,CAAC7sI,CAAC,CCz+DA,CDy+DE,CCz+DAyuJ,GDy+DI,CAACt2I,CAAC,EAAE,IAAI,CAACjY,CAAE,CAAC,ACz+DF,EAAEwuJ,gBAAiB,CAAC;ID2+DjF,ICz+DG,CAAC,MAAM;EDy+DT,QCv+DG;IDu+DH1oJ,GAAA;IAAAnG,KAAA,CCr+DG,CDu+DJ,GCv+DU6vJ,MDu+DV39G,MCv+DsB,GAAGu0G,IDu+DZv0G,CAAEjU,SAAS,CCv+DgB,CDu+Db,ACv+De3a,EAAE,EAAEsrI,cAAc,EAAE,QAAS,CAAC;MDy+DvE,ICx+DG,GDw+DIx9G,CCx+DE0+G,ODw+DM,CAAC59G,MCx+DO,GAAGu0G,IDw+DG,CAAE,IAAI,CAACtmJ,CAAC,EAAE,ECx+DE,CAAEmjB,CDw+DA,CAAChL,ACx+DC,CDw+DA,CCx+DEu2I,CDw+DA,IAAI,CAACxuJ,CAAC,EAAE49B,OCx+DQ,EDw+DE,ACx+DA,CDw+DC,SCx+DU,CAAC;ID0+D9E,MCx+DI9kB,OAAO,CAAC4xB,KAAK,CACZ,mCAAmC,GAAGznB,EAAE,CAACysI,QAAQ,CAAC,CAAC,GAAG,KAAK,GAC3D,kBAAkB,GAAGzsI,EAAE,CAAC8hI,mBAAmB,CAAEpY,OAAO,EAAE1pH,EAAE,CAAC0sI,eAAgB,CAAC,GAAG,MAAM,GACnF,iBAAiB,GAAGd,IAAI,CAACxqJ,IAAI,GAAG,IAAI,GACpC,iBAAiB,GAAGwqJ,IAAI,CAAC/tJ,IAAI,GAAG,MAAM,GACtC,oBAAoB,GAAGkuJ,UAAU,GAAG,IAAI,GACxCQ,YAAY,GAAG,IAAI,GACnBC,cACD,CAAC;EDg+DJ,MC99DE;ID89DF3pJ,EC59DC,CD49DD,AC59DE,MAAM,IAAKkpJ,UAAU,KAAK,EAAE,EAAG;ID49DjCrvJ,IC19DEmZ,CD09DF,EAED,IC59DU,CAACC,ID49DXyhB,AC59De,CAAE,YD49DJA,CAAEvB,GAAG,EAAG,qBC59DmC,EAAE+1H,UAAW,CAAC;MD89DrE,AC59DC,CAAC,MD49DK/1H,AC59DC,GD49DE,CAAC8B,AC59DEm0H,SAAS,KAAK,EAAE,ED49DA,CAAE,CC59DEC,GD49DG,CAAC,OC59DO,KAAK,EAAE,EAAG;ID89DvD,IC59DGE,eAAe,GAAG,KAAK;ED49DzB,IC19DC;ID09DDvpJ,ECx9DC,CDw9DD,GCx9DMupJ,eAAe,EAAG;IDw9DxB1vJ,ICt9DEkvJ,CDs9DF,EAED,CCx9DO,CAACe,ODw9DR3xH,ICx9DmB,GAAG,YDw9DHA,CAAEz8B,CAAC,EAAE6S,MAAM,EAAG;MAEhC,IAAMvU,ACx9DHsvJ,CDw9DI,GAAG,IAAI,ACx9DH,CDw9DItvJ,CAAC,ACx9DHsvJ,QAAQ;QDw9DHn3I,CAAC,CCt9DhB+2I,EDs9DmB,IAAI,CAAC/2I,CAAC,ECt9Df,EAAE+2I,UAAU;QDs9DKhvJ,CAAC,CCp9D5BkrD,EDo9D+B,IAAI,CAAClrD,CAAC,ICp9DzB,EAAE;MDq9DjB,IAAI2B,CAAC,CCn9DDiW,CDm9DG4T,CAAC,CCn9DD,EAAE0jI,SAAS;YACdW,MAAM,EAAE7E;MDo9DZ,ICl9DG,CAAC;MDm9DJ,ICj9DG7/F,cAAc,EAAE;MDk9DnB,MCh9DIvzC,GAAG,EAAEu3I,WAAW;MDi9DpB,MCh9DIU,MAAM,EAAE5E;MDi9DZ,IC/8DG;QAED,CAAC;MD+8DH36G,AC78DC,ID68DG,CAAC11B,UAAU,CAAE3C,CAAC,EAAEnY,CAAE,CAAC;IC38DvB,ED48DAywC,IAAI,CAAC31B,UAAU,CAAE5a,CAAC,EAAEF,CAAE,CAAC;MACvB2wC,IAAI,CAAC71B,UAAU,CAAEpZ,CAAC,EAAE1B,CAAE,CAAC;IC38DvB,ED48DA,IAAMkV,EAAE,GAAGs7B,IAAI,CAAC50B,GAAG,CAAE+0B,IAAK,CAAC;MAC3B,IAAMx7B,EAAE,GAAGs7B,IAAI,CAAC70B,GAAG,CAAE+0B,IAAK,CAAC;IC38D3B,ED48DA,IAAKz7B,EAAE,IAAI,CAAC,IAAIC,EAAE,IAAI,CAAC,EAAG;IC38D1B,ID68DC;IC58DD,ID68DC,OAAOZ,MAAM,CAACgG,IAAI,CAAEva,CAAE,CAAC;MAExB;IC78DAmjB,ED+8DAytB,AC/8DE,CAACo/G,GD+8DC,CAACl1I,QC/8DU,CAAE2zI,CD+8DF,CAAE/sJ,CAAC,EAAEyW,CAAE,CAAC,OC/8DS,CAAC;IACjCgL,ED+8DA,AC/8DE,CAAC6sI,GD+8DG56I,EAAE,GAAGo7B,IAAI,AC/8DA,CD+8DC50B,AC/8DC8yI,GD+8DE,CAAE99G,IAAK,CAAC,OC/8DO,CAAC;IAEnCq/G,ED88DA,IAAMj+G,EAAE,GAAGvB,GC98DG,CD88DC,CAAC70B,CC98DC,ED88DE,CAAEg1B,CC98DAo0G,GD88DK,CAAC,SC98DO,CAAE7hI,EAAE,EAAE0pH,OAAQ,CAAC;IACjDkB,ED88DA,IAAK34H,EAAE,IAAI,CAAC,GC98DI,CD88DA48B,EAAE,AC98DCy1G,ID88DGryI,EAAE,EAAG,eC98De,CAAE+N,EAAE,EAAE0pH,OAAQ,CAAC;EAE1D,MD88DE;QACA,OAAOt4H,MAAM,CAACgG,IAAI,CAAEpC,CAAE,CAAC;EC78DzB,ID+8DC;MAEA,IAAM85B,EAAE,GAAG/8B,EAAE,GAAG88B,EAAE,GAAG58B,EAAE,GAAGD,EAAE;EC/8D7B,IDg9DC,ACh9DG86I,IDg9DEh+G,EAAE,IAAI,CAAC,GCh9DK,CDg9DD/8B,EAAE,IAAI,CAAC,IAAIE,EAAE,IAAI,CAAC,EAAG;EC98DtC,IAAI,CAAC2oI,CDg9DHl8I,CAAC,GAAGqT,EAAE,IAAKA,ACh9DG,EDg9DD,CCh9DI,EDg9DDE,EAAE,CAAE,OCh9DS;IAE9B,ID+8DC,AC/8DI66I,cAAc,KAAKp8I,SAAS,EAAG;MAEnC,ED88DA,OAAOU,MAAM,CAACgG,IAAI,CAAEva,CAAE,CAAC,CAAC2a,eAAe,CAAE61B,IAAI,EAAE3uC,CAAE,CAAC;MAEnD,AC/8DCitJ,UAAU,CAAE,IAAK,CAAC;IAEnB,ED+8DAj+G,IAAI,CAAC/1B,UAAU,CAAEpZ,CAAC,EAAExB,CAAE,CAAC;IC78DvB,ED88DA,IAAMgyC,CC98DC+9G,CD88DC,GAAGz/G,IAAI,CAAC50B,GAAG,CAAEi1B,CC98DA,GD88DK,CAAC;EC58D5B,CAAC,GD68DA,IAAMsB,EAAE,GAAG1B,IAAI,CAAC70B,GAAG,CAAEi1B,IAAK,CAAC;MAC3B,IAAKsB,EAAE,IAAI,CAAC,IAAID,EAAE,IAAIC,EAAE,EAAG;EC58D5B,MD88DE;QACA,OAAO59B,MAAM,CAACgG,IAAI,CAAEra,CAAE,CAAC;EC78DzB,ID+8DC,AC/8DG6tI,gBAAgB;EAEpB,ID+8DC,AC/8DG,CAACI,GD+8DE/7F,EAAE,GAAGF,EAAE,GAAG/8B,AC/8DC,ED+8DC,CC/8DE,ED+8DCD,EAAE,GAAGi9B,EAAE,GC/8DI;IAEhC,ED88DA,EC98DK47F,ED88DA37F,EAAE,IAAI,CAAC,IAAIj9B,EAAE,CC98DG,GD88DC,CAAC,CC98DGtB,GD88DCs+B,EAAE,IAAI,AC98DE,CD88DD,CC98DI,CD88DD;MC58DpC,ED88DAzmB,CAAC,GAAGvW,EAAE,IAAKA,EAAE,GAAGg9B,EAAE,CAAE;MC78DpB28G,ED88DA,QC98DU,CAAE,IAAK,CAAC;IAEnB,ID68DC,OAAOv6I,MAAM,CAACgG,IAAI,CAAEva,CAAE,CAAC,CAAC2a,eAAe,CAAE81B,IAAI,EAAE/kB,CAAE,CAAC;IC38DnD,ED68DA,KC78DOqiH,gBAAgB;EAExB,CAAC,GD68DA,IAAM17F,EAAE,GAAGj9B,EAAE,GAAG+8B,EAAE,GAAGD,EAAE,GAAGF,EAAE;MAC5B,IAAKK,EAAE,IAAI,CAAC,IAAML,EAAE,GAAG58B,EAAE,IAAM,CAAC,IAAM88B,EAAE,GAAGC,EAAE,IAAM,CAAC,EAAG;EC58DxD,MD88DEzB,IAAI,CAAC51B,UAAU,CAAE5a,CAAC,EAAEiY,CAAE,CAAC;EC78DzB,MD88DEuT,CAAC,GAAG,CAAEsmB,EAAE,GAAG58B,EAAE,KAAS48B,EAAE,GAAG58B,EAAE,IAAO88B,EAAE,GAAGC,EAAE,CAAE,CAAE;QAC/C;EC78DF,IAAI+9G,ED88DF,OAAO37I,GC98DO,GD88DD,AC98DMi7B,CD88DLj1B,IAAI,CAAEpC,CAAE,CAAC,CAACwC,CC98DK,CAACw1I,aD88DS,CAAEz/G,IAAI,EAAEhlB,CAAE,CAAC,CAAC,CAAC,cC98DgB,KAAK,KAAO;EAElF,ID88DC,AC98DG,CAAC0kI,OAAO,GAAG,YAAY;IAE1B,IAAKF,YAAY,KAAK,KAAK,EAAG;MD88D9B,AC58DCA,YAAY,GAAG/sI,EAAE,CAAC8hI,mBAAmB,CAAEpY,OAAO,EAAE+Y,qBAAsB,CAAC;IAExE,ED28DA,IAAMtzG,KAAK,GAAG,CAAC,IAAKD,EAAE,GAAGD,EAAE,GAAGH,EAAE,CAAE;ICz8DlC,ED08DA,KC18DOi+G,YAAY;EAEpB,CAAC,GDy8DAruJ,CAAC,GAAGuwC,EAAE,GAAGE,KAAK;MACd5mB,CAAC,GAAGumB,EAAE,GAAGK,KAAK;ECx8Df,ID08DC,OAAO/9B,MAAM,CAACgG,IAAI,CAAEva,CAAE,CAAC,CAAC2a,eAAe,CAAE61B,IAAI,EAAE3uC,CAAE,CAAC,CAAC8Y,eAAe,CAAE81B,IAAI,EAAE/kB,CAAE,CAAC;IAE9E;EAAC,AC18DD,IAAI,CAAC2kI,OAAO,GAAG,YAAY;ID08D1BrqJ,ACx8DAumI,GDw8DA,UCx8Da,CAACoD,sBAAsB,CAAE,IAAK,CAAC;IDw8D5C9vI,ACt8DAsjB,EAAE,CAACmtI,EDs8DH,EAED,SAAArzI,ACx8DiB,CAAE4vH,KDw8Db5vH,CAAEie,CCx8DmB,CAAC,MDw8DZ,EAAG;ICv8DlB,EDy8DA,ECz8DI,CAAC2xG,IDy8DE3xG,GCz8DK,GAAGrnB,EDy8DA,CAAC7T,CAAC,CAACid,ICz8DM,EDy8DA,CAAE,IAAI,CAACjd,CAAE,CAAC,IAAIk7B,QAAQ,CAAC/iB,CAAC,CAAC8E,MAAM,CAAE,IAAI,CAAC9E,CAAE,CAAC,IAAI+iB,QAAQ,CAACh7B,CAAC,CAAC+c,MAAM,CAAE,IAAI,CAAC/c,CAAE,CAAC;ECv8DjG,CAAC,CDy8DD;EAAC;ECv8DD,EDu8DC8F,GAAA;IAAAnG,KAAA,EA7SD,SAAO4xC,SAASA,CAAEzxC,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEqU,MAAM,EAAG;ECxpDpC,ID0pDCA,AC1pDG,CAACvT,IAAI,CD0pDF,CAAC8Z,CC1pDI00B,SD0pDM,CAAEtvC,AC1pDE,CD0pDD,AC1pDEmrJ,ED0pDAlzI,CAAE,CAAC,MC1pDO;EACjC,ID0pDCi4B,AC1pDG,CAAC7rC,ID0pDC,AC1pDG,CD0pDFuW,EC1pDK00B,QD0pDK,CAAExvC,CAAC,AC1pDE,CAACsrJ,CD0pDDnzI,CAAE,CAAC,OC1pDQ;EACjC,ID0pDC5D,AC1pDG,CAAC42B,EAAE,GD0pDA,AC1pDG06G,CD0pDFhqI,KAAK,CAAEu0B,KAAM,CAAC,CC1pDE,EAAG;EAC3B,ID2pDC,AC3pDG,CAACy6G,GD2pDEt4G,KC3pDM,GAAGs4G,MD2pDK,EC3pDG,CD2pDAt2I,MAAM,CAACuH,QAAQ,CAAC,CAAC;EC1pDzC,ID2pDC,AC3pDG,CAACy0I,GD2pDCh+G,MC3pDQ,GAAG,CAAC,ID2pDE,GAAG,CAAC,EAAG;EC1pD3B,IAAI,CAACs6F,CD4pDH,MC5pDU,CD4pDHt4H,EC5pDMs4H,ID4pDA,CAAC7xH,EC5pDM,YD4pDQ,CAAE,CAAC,GAAGpG,IAAI,CAACmH,IAAI,CAAEw2B,cAAe,CAAE,CAAC;EC3pDjE,ID6pDC,AC7pDG,CAAC6Y,YAAY,GAAGqjG,cAAc;EAClC,ID8pDC,AC9pDG,CAACpjG,MD8pDG92C,MAAM,CAACwE,CC9pDI,ED8pDD,CAAE,AC9pDE21I,CD8pDD,EAAE,CAAC,EAAE,CAAE,CAAC,QC9pDS;EAEtC,ED8pDA,KC9pDO,IAAI;AAEZ;AAEA,ID4pDC,AC5pDG5jC,GAAG,GAAG,CAAC;AAAC,ID6pDX,AC3pDK0lC,gBAAgB;ED2pDrB,ACzpDA,SAAAA,iBAAA,EAAc;IDypDdxqJ,ACzpDcH,GDypDd,YCzpDc,OAAA2qJ,gBAAA;IDypDd3wJ,ACvpDC,IAAI,CDupDL,ACvpDM4wJ,EDwpDN,SAAO7+G,ACxpDU,GAAG,IAAIu3G,GAAG,CAAC,CDwpDTv3G,ACxpDU,CDwpDRrY,KAAK,EAAEv5B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEqU,MAAM,EAAG;ICvpD7C,EDypDA67B,ECzpDI,CAACsgH,EDypDA,CAAC51I,UAAU,ACzpDE,CDypDA5a,CAAC,CCzpDE,CDypDAF,CAAE,CAAC,CCzpDCmpJ,GAAG,CAAC,CAAC;EAE/B,IDwpDC94G,KAAK,CAACv1B,UAAU,CAAE3C,CAAC,EAAEnY,CAAE,CAAC;ECxpDxB,IDypDAswC,GCzpDArqC,EDypDK,CAAC6U,SCzpDN,CDypDgB,ACzpDhB01I,CDypDkBj3H,KAAK,EAAEv5B,CAAE,CAAC,MCzpD5B;IAAAgG,ED2pDA,CC3pDA,GD2pDMwsC,KAAK,GAAGpC,KAAK,CAACx0B,GAAG,CAAEw0B,KAAM,CAAC;IC3pDhCvwC,ED4pDA,GC5pDA,CD4pDM4yC,CC1pDP,ID0pDY,GAAGrC,EC1pDfpf,GD0pDoB,CAACpV,EC1pDfoV,CD0pDkB,AC1pDhB8e,CD0pDkBO,KAAM,CAAC,CC1pDjB,EAAG;MD2pDlB,ACzpDA,IDypDMqC,ACzpDA0Y,KDypDK,GAAGhb,ICzpDI,CDypDC,CAACx0B,CCzpDCk0B,EDypDE,CAAEQ,KAAM,ACzpDF,CDypDG,ACzpDF8a,YAAY;MD0pD1C,ACzpDA,IDypDMzY,ACzpDA0Y,KDypDK,GAAGhb,KAAK,CAACz0B,ACzpDA,GDypDG,ACzpDAk0B,CDypDEO,KAAM,CAAC,CCzpDD,CAACgb,cAAc;MD0pD9C,ACxpDA,IDwpDMzY,ACxpDA+9G,KDwpDK,GAAGtgH,KAAK,CAACz0B,GAAG,ACxpDA,CDwpDE00B,ECxpDC,GDwpDK,CAAC,ACxpDF,CAACsgH,eAAe,CAAExlG,YAAa,CAAC;MD0pD9D,ACzpDA,IDypDM9Y,ACzpDAu+G,KDypDK,GAAKr+G,KAAK,GAAGG,GCzpDC,EDypDI,CCzpDD,EDypDIF,ECzpDA,CAACm+G,EDypDI,GAAGn+G,KAAO,KCzpDC,CAAE4Y,cAAe,CAAC;MAElE,IAAMylG,eAAe,GAAG,IAAI,CAACC,0BAA0B,CAAEjhH,QAAS,CAAC;MDypDnE,ACvpDA,IAAKghH,eAAe,CAAC7kE,GAAG,CAAE0kE,iBAAkB,CAAC,KAAK,KAAK,EAAG;MDwpD1D,ECtpDCG,EDspDIx+G,KAAK,KAAK,CAAC,EAAG,ACtpDH,CAAC93B,GAAG,CAAEm2I,iBAAkB,CAAC;QDwpDxCp8I,ACvpDAo8I,MDupDM,CAAC53I,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,ACvpDD,CDupDG,ACvpDFw3I,CDupDG,QCvpDM,EAAG;MAE/B,EDspDC,OAAO,IAAI;MAEZ,ACtpDA,IAAKO,eAAe,CAAC7kE,GAAG,CAAE4kE,mBAAoB,CAAC,KAAK,KAAK,EAAG;MDwpD5D,ECtpDCC,EDspDKj+G,QAAQ,GAAG,CAAC,CCtpDF,CAACr4B,CDspDI83B,ECtpDD,CAAEu+G,EDspDI,iBCtpDgB,CAAC;MDupD3C,ECtpDCA,EDspDKzwJ,CAAC,GAAG,CAAEuyC,KAAK,GAAGD,ICtpDA,CDspDK,ACtpDJ69G,GDspDO99G,KAAK,CCtpDH,EDspDMG,ACtpDH,KDspDQ,IAAKC,QAAQ;MACtD,ACrpDA,IDqpDMhxC,CAAC,GAAG,CAAE2wC,KAAK,GAAGI,KAAK,GAAGH,KAAK,GAAGC,KAAK,IAAKG,QAAQ;MCnpDtD,OAAO,IAAI;IAEZ,EDmpDC;ECnpDA,IDopDA,OAAOt+B,MAAM,CAACwE,GAAG,CAAE,CAAC,GAAG3Y,CAAC,GAAGyB,CAAC,EAAEA,CAAC,EAAEzB,CAAE,CAAC;IAErC,ACtpDC4F,GAAA;EDspDA,ECtpDAnG,KAAA,EAED,SAAAirC,MAAMA,CAAEgF,QAAQ,EAAG;IDopDlB9pC,EClpDA,CDkpDA,GClpDM8qJ,eAAe,GAAG,IAAI,CAACJ,aAAa,CAAC32I,GAAG,CAAE+1B,QAAS,CAAC;IDkpD1DjwC,EClpD2D,GDkpD3D,CClpD2DuvD,CDopD5D,QCppD4D,CDopDrD70B,ECppDqD80B,WDopDxC90B,CAAEhB,KAAK,EAAEv5B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,ACppDwB,CAEhC4wJ,CDkpDW,cClpDI;MDopD1C,ECppD0CxhG,KAAA;MDqpD1C,ACrpD0C,IDqpDrC,IAAI,CAAC1d,YAAY,CAAErY,KAAK,EAAEv5B,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAEqwC,KAAM,CAAC,KAAK,IAAI,EAAG;QAE1D,ACvpDD,KAAA6e,EDupDQ,KAAK,ECvpDb,CAAA9tD,CAAA,MAAAguD,KAAA,GAAAF,SAAA,CAAA3vD,CAAA,IAAAkD,IAAA,GAA6C;MDypD7C,ICzpD6C,IAAjCquJ,WAAW,GAAA1hG,KAAA,CAAAzvD,KAAA;MD2pDvB,ICzpDCmxJ,GDypDQzgH,KAAK,CAAC16B,CAAC,CCzpDJ,CAAC06I,EDypDO,CAAC,IAAQhgH,ECzpDP,EAAG,CDypDS,CAAChvC,CAAC,IAAI,CAAG,IAAQgvC,KAAK,CAAC16B,CAAC,GAAG06B,KAAK,CAAChvC,CAAC,IAAM,CAAG;IAE9E,MCzpDE,IAAKyvJ,WAAW,CAACT,SAAS,KAAK,CAAC,EAAG,IAAI,CAACE,WAAW,CAACr3B,MAAM,CAAE43B,WAAW,CAACC,IAAK,CAAC;EDypD/E,MCvpDA;IDupDAjrJ,ECvpDC,CDupDD,QCvpDCupD,GAAA;IDupDD1vD,ICvpDCuvD,CDupDD,EAED,MCzpDE,CAAAhwD,CAAA,CDypDKyyC,ACzpDL0d,GAAA,aDypDqB1d,CAAEtY,KAAK,EAAEgD,EAAE,EAAEC,EAAE,EAAEsW,EAAE,EAAE/1B,EAAE,EAAEC,EAAE,EAAE80B,EAAE,EAAEv9B,MAAM,EAAG;MAEhE,AC3pDC,ID2pDI,IAAI,CAACq9B,YAAY,CAAErY,KAAK,EAAEgD,EAAE,EAAEC,EAAE,EAAEsW,EAAE,EAAEvC,KAAM,CAAC,KAAK,IAAI,EAAG;QAE7Dh8B,AC7pDA66C,MD6pDM,CAACv5C,CAAC,CC7pDR,CAAAxU,CD6pDW,AC7pDX,CD6pDY;MC7pDZ,ED8pDAkT,MAAM,CAAChT,CAAC,GAAG,CAAC;MC5pDb,ED6pDC,EC7pDG,CAACmvJ,CD6pDC,GAAG,IAAIn8I,KC7pDK,CD6pDC,AC7pDA6kH,ED6pDG7kH,IC7pDG,CAAEu7B,CD6pDC,CAACrkB,CAAC,GAAG,CAAC,CC7pDE,CAAC;MAErC,ED4pDC,IAAK,CC5pDC,ED4pDE,EC5pDE,ED4pDElX,MAAM,EAAGA,MAAM,CAACmX,CAAC,GAAG,CAAC;IC1pDnC,ID2pDE,OAAO,IAAI;EC3pDZ,ID6pDA;IC7pDA1lB,ED+pDAuO,CC/pDA,KD+pDM,CAACyF,SAAS,CAAE,CAAE,CAAC;IC/pDrBna,EDgqDA0U,GChqDA,EAED,CD8pDO,CAACoG,OC9pDRu2I,QD8pDuB,CAAEn0I,EAAE,EAAEwzB,IC9pDZ2gH,CD8pDiB,AC9pDfphH,CD8pDgBj6B,CAAE,CAAC,KC9pDX,EAAG;MD+pD7BtB,AC7pDA,MD6pDM,CAACoG,AC7pDA,IAAI,CAACi2I,UD6pDU,CAAE5zI,EAAE,EAAEuzB,AC7pDD,CAAET,ID6pDI,CAACvuC,CAAE,CAAC,CC7pDA,CAAC6pD,YAAa,CAAC,CAACjgB,EAAE;IAExD,ED4pDC52B,MAAM,CAACoG,eAAe,CAAEm3B,EAAE,EAAEvB,KAAK,CAAC9kB,CAAE,CAAC;EC5pDrC,ID8pDA,OAAOlX,MAAM;IAEd,AChqDCvO,GAAA;EDgqDA,EChqDAnG,KAAA,EAED,SAAAsxJ,mBAAmBA,CAAErhH,QAAQ,EAAG;ID8pD/B9pC,EC5pDA,CD4pDA,MC5pDO,IAAI,CAAC4qJ,eAAe,CAAE9gH,QAAQ,CAACub,cAAe,CAAC,CAAClgB,EAAE;ID4pDzDtrC,AC1pDD,KD0pDC,EAED,SAAOkzC,wBAAwBA,CAAEC,IAAI,EAAE5B,EAAE,EAAEC,EAAE,EAAE4B,EAAE,EAAEC,SAAS,EAAE3+B,MAAM,EAAG;EC5pDtE,ID8pDAu8B,IAAI,CAAC92B,SAAS,CAAE,CAAE,CAAC;IC9pDnBhU,ED+pDA+qC,CC/pDA,GD+pDI,CAAC/2B,SAAS,CAAE,CAAE,CAAC;IC/pDnBna,EDgqDAmxC,GChqDA,CDgqDI,CAACh3B,AC9pDN,SD8pDe,AC9pDfqR,CD8pDiB,CAAE,CAAC,IC9pDbA,CAAA,EAAG;MDgqDTylB,AC9pDA,ID8pDI,AC9pDA,CD8pDCzzB,AC9pDAozI,WAAW,CAAChhI,KAAK,CAAC,CD8pDC,AC9pDA,CD8pDEujB,IAAI,EAAE5B,EAAG,CAAC;MACpCL,AC9pDA,ID8pDI,AC9pDA,CD8pDC1zB,AC9pDAqzI,aAAa,CAACjhI,KD8pDK,AC9pDA,CD8pDEujB,AC9pDD,CAAC,GD8pDI,EAAE3B,EAAG,CAAC;IC5pDrC,ED6pDCL,IAAI,CAAC3zB,mBAAmB,CAAE21B,IAAI,EAAEC,EAAG,CAAC;EC7pDpC,ID+pDA1+B,MAAM,CAACyF,SAAS,CAAE,CAAE,CAAC;IC/pDrBhU,EDgqDAuO,CChqDA,KDgqDM,CAACoG,eAAe,CAAEm2B,IAAI,EAAEoC,SAAS,CAACr9B,CAAE,CAAC;IChqD3ChW,EDiqDA0U,GCjqDA,EAED,CD+pDO,CAACoG,OC/pDRo2I,QD+pDuB,CAAEhgH,IAAI,EAAEmC,SAAS,CAAC3xC,CAAE,AC/pDjBwvJ,CD+pDkB,AC/pDhBjhH,QAAQ,EAAG;MDgqDtCv7B,AC9pDA,IAAM27B,ED8pDA,CAACv1B,EC9pDI,GAAG,IAAI,CAAC+1I,KD8pDG,CAAE1/G,IAAI,EAAEkC,CC9pDE,QD8pDO,CAACznB,CAAE,CAAC;MAE3C,AC/pDA,IAAI1S,GD+pDGxE,AC/pDA,GAAG27B,GD+pDG,EC/pDE,CAACn2B,GAAG,CAAE+1B,QAAS,CAAC;IDiqDhC,EC/pDC,IAAK/2B,GAAG,KAAKlF,SAAS,EAAG;ED+pDzB,MC7pDCkF,GAAG,GAAG,IAAIsW,GAAG,CAAC,CAAC;ID6pDhBrpB,GAAA,CC5pDCkqC,KAAK,CAACn3B,GAAG,CAAE+2B,QAAQ,EAAE/2B,GAAI,CAAC;ID4pD3BlZ,EC1pDA,GD0pDA,EAED,SAAOkyC,aAAaA,CAAE/xC,CAAC,EAAEmY,CAAC,EAAEjY,CAAC,EAAE49B,SAAS,EAAG;MAE1CsS,AC5pDA,KD4pDK,CAACt1B,CC5pDC/B,GAAG,MD4pDM,CAAE7Y,CAAC,EAAEiY,CAAE,CAAC;IC1pDzB,ED2pDCk4B,KAAK,CAACv1B,UAAU,CAAE9a,CAAC,EAAEmY,CAAE,CAAC;EC3pDxB;IAAAnS,ED6pDA,CC7pDA;IAAAnG,ED8pDA,GC9pDA,EAED,ED4pDUuwC,KAAK,CAACv0B,CC5pDhB+0I,ID4pDqB,CAAEvgH,KAAM,CAAC,CAACz0B,GAAG,AC5pDnBg1I,CD4pDqB9yH,AC5pDnBmzH,IAAI,EAAG,GD4pDsB,CAAC,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;IAEpE,EC5pDC,IAAM/gH,KAAK,GAAG,IAAI,CAACugH,WAAW;ED4pD9B,IC3pDA,IAAIW,KAAK,GAAGlhH,KAAK,CAACn2B,GAAG,CAAEk3I,IAAK,CAAC;AD2pD7B,MCzpDA,IAAKG,KAAK,KAAKv9I,SAAS,EAAG;AD21D7B,IAAMs/B,ICz1DHi+G,KAAK,GAAG,EDy1DS,ECz1DLC,CDy1DQ,eCz1DQ,CAAEJ,IAAK,CAAC;EDy1Dd,MCx1DtB/gH,KDw1DiC,ACx1D5B,CAACn3B,CDw1D6B,ECx1D1B,CAAEk4I,IAAI,CDw1D4B,CCx1D1BG,KAAM,CAAC;EDw1DqB,ICt1D9C,UDs1D4D,EAAE,QAAQ;EAAE,ICp1DxE,EDo1D8E,EAAE,GCp1DzEA,KDo1DiF,ACp1D5E;EDo1D8E,ECl1D3F,UDk1DuG,EAAE,QAAQ;EAAE,ACl1DlH,ODk1DyH,EAAE,QAAQ;ACl1DnI,EDm1DD,OAAO,EAAE,QAAQ;ACn1DhB,EDm1DkB,EC/0DdC,MD+0DsB,EAAE,QAAQ,AC/0DhB,gBAAAprJ,YAAA,CAErB,SAAAorJ,iBAAaJ,IAAI,EAAG;ED60DmB,AC70DnBprJ,OD60D0B,EAAE,MC70D5B,ED60DoC,KC70DpCwrJ,gBAAA;ED60DsC,AC30DzD,IAAI,CAAClmH,EAAE,GAAG2/E,GAAG,EAAG,CD20DyD,EAAE,QAAQ;EAAE,ACz0DrF,IAAI,CAACmmC,CDy0DsF,EAAE,CCz0DpF,GAAGA,IDy0DyF,ACz0DrF;EDy0DuF,ACx0DvG,IAAI,CAACV,ODw0D8G,EAAE,ACx0DvG,GAAG,CAAC,IDw0D2G;ACt0D9H,CAAC,CDu0DD,OAAO,EAAE,QAAQ;ACn0DlB,EDm0DoB,OCn0DXe,IDm0DsB,EAAE,OCn0DXA,CDm0DmB,ACn0DjBjnG,QAAQ,EAAEkgF,QAAQ,EAAEC,UAAU,EAAEh/E,UAAU,EAAEwxF,YAAY,EAAEzQ,aAAa,EAAEhhF,QAAQ,EAAG;EDm0DjE,ACj0D1C,IAAMgmG,ODi0D+C,EAAE,KCj0DnC,GDi0D2C,ACj0DxC,IAAI/qH,iBAAM,CAAC,CAAC;EDi0D8B,ACh0DjE,IAAMgrH,QDg0DuE,EAAE,ICh0D3D,GAAG,CDg0DgE,GCh0D5DhB,gBAAgB,CAAC,CAAC;EDg0D4C,AC/zDzF,IAAMiB,OD+zD8F,EAAE,MC/zDjF,ED+zDyF,CC/zDtF,IAAIpiI,GAAG,CAAC,CAAC;ED+zD+E,AC9zDhH,IAAMwtH,GD8zDiH,EAAE,GC9zD3G,GAAG,ED8zDgH,AC9zD9G;ED+zDnB,AC7zDA,IAAM9K,YD6zDU,EAAE,QAAQ,AC7zDE,GAAGiL,YAAY,CAACjL,sBAAsB;ED6zDtC,AC5zD5B,IAAM2f,MD4zDgC,EAAE,QAAQ,QC5zDlB,GAAG1U,YAAY,CAAChK,cAAc;ED4zDV,AC1zDlD,IAAIj7F,KD0zDuD,EAAE,EC1zDhD,GAAGilG,GD0zDqD,SC1zDzC,CAACjlG,SAAS;ED0zDiC,ACxzDvE,IAAM45G,EDwzDuE,EAAE,KCxzDhE,GDwzDwE,ACxzDrE;EDwzDuE,ECvzDxF/iE,QDuzDkG,EAAE,OCvzDnF,CDuzD2F,CCvzDzF,OAAO;EDuzDoF,ECtzD9GK,QDszDwH,EAAE,QAAQ,ECtzD9G,EAAE,cAAc;EDuzDrC,ECtzDCb,aDszDc,EAAE,GCtzDE,EAAE,GDszDI,KCtzDI;EDszDF,ECrzD1B9wC,QDqzDoC,EAAE,OCrzDrB,CDqzD6B,CCrzD3B,OAAO;EDqzDsB,ECpzDhDkxC,SDozD2D,EAAE,QAAQ,ACpzDlD,EAAE,SAAS;EDozDyC,ECnzDvEZ,QDmzDiF,EAAE,OCnzDlE,CDmzD0E,CCnzDxE,OAAO;EDmzDmE,EClzD7FI,SDkzDwG,EAAE,KClzD1F,EAAE,CDkzDgG,KClzD1F;EDkzD4F,ECjzDpHrB,WDizDiI,EAAE,OCjzD/G,CDizDuH,CCjzDrH,UAAU;EDkzDjC,ECjzDCI,cDizDe,EAAE,ICjzDG,EAAE,EDizDG,QCjzDO;EDizDL,EChzD3BsC,UDgzDuC,EAAE,MChzDvB,EDgzD+B,AChzD7B,QAAQ;EDgzDuB,EC/yDnDnoB,UD+yD+D,EAAE,KC/yDhD,EAAE,CD+yDsD,MC/yD/C;ED+yDiD,EC9yD3EuoB,OD8yDoF,EAAE,QAAQ,CC9yD5E,EAAE,QAAQ;ED8yDoE,EC7yDhGrmB,UD6yD4G,EAAE,EC7yDhG,EAAE,ID6yDsG,IC7yD9F;ED6yDgG,EC5yDxH+iB,YD4yDsI,EAAE,AC5yD1H,EAAE,MD4yDgI,EC5yDxH;ED6yDzB,EC5yDCl2B,aD4yDc,CC5yDA,CD4yDE,CC5yDA,OD4yDQ;EAAE,AC3yD3B,CAAC,cD2yDyC,EAAE,QAAQ;EAAE,ACzyDtD,SAAS27F,MDyyD4D,EAAE,ECzyDpDA,CAAE/xJ,KDyyD0D,ACzyDrD,EAAG;EDyyDoD,ECvyDhF4xJ,aDuyD+F,EAAE,ACvyDlF,CAACj3I,GAAG,CAAE3a,GDuyDoF,ECvyD9E,CAAC;EDuyD+E,ECryD3G,IAAKA,KAAK,CDqyD6G,EAAE,ECryD1G,CAAC,EAAG,GDqyD8G,ICryDvG,IAAI;EDsyD/B,ECpyDC,QDoyDS,EAAE,ECpyDXq1C,MDoyDmB,ACpyDnB,CAAar1C,KAAK;EDoyDG,AClyDtB,aDkyDmC,EAAE,QAAQ;EAAE,AChyD/C,SDgyDwD,AChyD/CgyJ,EDgyDiD,QAAQ,GChyD5CA,CAAE/hH,QAAQ,EAAEwb,MAAM,EAAEwmG,OAAO,EAAEpiG,KAAK,EAAE12B,MAAM,EAAG;EDgyDC,EC9xDnE,IAAMkkB,GD8xDsE,AC9xDnE,ED8xDqE,CC9xD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O;EClhD/B,EDmhDCxgH,ECnhDKuV,IDmhDL,CAAK9U,CCnhDM,GAAG,CAAC,CAAC,EDmhDH,GAAG3tC,sBAAsB;ECjhDvC,EDkhDCktC,KClhDM,CDkhDN,CAAKU,aAAa,GAAGtuC,WAAW;IAChC4tC,ACjhDAh8B,GAAG,EAAE,CDihDL,CAAK28B,OCjhDL38B,GAAGA,CAAawqF,EDihDE,GAAG,ACjhDA,EAAG,EDihDC;IACzBxuD,EChhDC,IDghDD,AChhDMuV,CDghDD3U,KChhDO,CAAE4tD,KAAK,CAACp5D,CDghDF,CChhDI,CAAE,CDghDH,IAAI,AChhDIt3B,SAAS,EAAG;IDihDzCkiC,IC/gDE,ED+gDF,CAAKa,IC/gDI0U,MAAM,CAAEi5C,KAAK,CAACp5D,CD+gDA,CC/gDE,CAAE,CD+gDD,IAAI;IAC9B4K,EC9gDC,ID8gDD,CAAKc,UAAU,GAAG,IAAItD,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACtCwC,EC7gDC,ID6gDD,AC7gDKkU,CD6gDAnT,OC7gDQ,GD6gDE,GAAG,CAAC;IAEnBf,EC7gDC,ID6gDD,CAAKgB,GC7gDKwtD,KAAK,CD6gDD,AC7gDEvjG,GD6gDC0I,CC7gDG,aD6gDW;IAC/BqsC,IC5gDE,ED4gDF,CAAKiB,EC5gDE,OD4gDO,GAAG,IAAI,IC5gDI;ID6gDzBjB,MAAA,AC5gDGkU,CD4gDEhT,OC5gDM,GD4gDI,AC5gDD,GD4gDI,IAAI;IAEtBlB,MAAA,CAAKmB,CC7gDDpZ,SAAS,EAAE,ID6gDM,AC7gDF9I,GD6gDK,IAAI,WC7gDF,CAAC,CAAC;ID8gD5B+gB,MAAA,CAAKoB,CC7gDD1yB,KAAK,EAAE,GD6gDK,CC7gDD8uB,ED6gDIvhC,cC7gDC,CAAC,ED6gDe;IACpC+jC,MAAA,AC7gDG,CD6gDEqB,AC7gDD,UD6gDW,GAAG,CAAC;IACnBrB,MAAA,AC7gDG,CD6gDEsB,eAAe,GAAG,IAAI;IAC3BtB,IC5gDE,ED4gDF,CAAKuB,EC5gDE,SD4gDS,EC5gDE,CD4gDCpmC,aAAa;IAChC6kC,MAAA,AC5gDGkU,CD4gDE1S,OC5gDM,GAAG,ED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E,ECjhDEuN,EDihDG,IAAI,CAACtN,GCjhDA,CAACl4B,GDihDM,ECjhDD,CAAClK,EDihDK1G,ECjhDD,CAAE4Q,KAAM,CDihDE,ACjhDD,CAACzJ,CDihDG4M,IAAI,CAAC+0B,OAAO,CCjhDD,CAAEmmD,CDihDE,IAAI,CAACnmD,GCjhDG,CAAC,GDihDG;MAC7D,EChhDEsN,EDghDG,IAAI,CAACtoC,GChhDA,CAAC60I,CDghDI,KAAK3iJ,GChhDA,CAACkF,GAAG,CAAEwrF,CDghDG,EAAG38E,EChhDD,CAACb,CDghDI,CAACpF,GChhDA,EDghDK,CChhDF,EDghDK,CChhDF,EAAE,CDghDI,CAACA,CChhDF,EAAE,EDghDK,CChhDD,CAAC;MDkhDvD,ECjhDEsoC,EDihDG,IAAI,CAAC9R,GCjhDA,CAACkgC,KDihDQ,KAAK,ACjhDH,CAACt/D,GDihDM,ACjhDH,CAAE,CDihDI6O,ECjhDD,EDihDK,ACjhDH28E,CDihDIpsD,ICjhDC,CAACnxB,IDihDO,ECjhDD,CDihDI,ECjhDD,EDihDK,CCjhDF,EAAE,GAAI,CAAC;MDmhDzD,ECjhDEwuG,EDihDG,GCjhDE,CDihDE,ACjhDDm/B,CDihDE/3G,OCjhDM,CAAEu6G,CDihDC,GAAG,CAAC,EAAGvvI,IAAI,CAACg1B,ECjhDC,CAAE,GAAGqN,GDihDG,GAAG,IAAI,ACjhDF,CDihDGrN,SAAS;MACzD,EChhDEu6G,EDghDG,IAAI,CAAC7gH,OChhDM,EDghDG,AChhDA,KDghDK,IAAI,EAAG1uB,IAAI,CAAC0uB,SAAS,GAAG,IAAI;MACpD,AC/gDC,CAAC,GD+gDG,GC/gDG,CD+gDC,CAAC8B,EC/gDGmsD,KAAK,CAAC0B,OD+gDM,KAAK,AC/gDC,EAAG,ED+gDA,EAAGr+E,IAAI,CAACwwB,eAAe,GAAG,IAAI;MAChE,EC9gDE,ED8gDG,EC9gDG6R,ED8gDC,CAAC5R,OC9gDM,GAAGnI,KAAK,CAACn2B,ED8gDG,CC9gDA,CAAEwqF,GD8gDG,EC9gDG,CAAC,CD8gDA,EAAG38E,IAAI,CAACywB,kBAAkB,GAAG,IAAI;MACtE,EC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AACq+G,MD8/CK,GAAG5qI,EC9/CG,CAAC1lB,GD8/CE,CAACiyC,EC9/CG,GAAG4gH,ED8/CC,eC9/CgB;MD+/C7C,AC9/CCxhC,ID8/CG,CAACn/E,AC9/CC,CAACq+G,IAAI,CAACvwJ,KD8/CI,CC9/CE,ED8/CC0lB,CC9/CEqtI,KD8/CI,CAAC7gH,IC9/CK,OD8/CM;MAErC,AC//CCm/E,ID+/CG,CAACj/E,AC//CC,CAACo+G,OD+/CM,CC//CE,CAACxwJ,CD+/CA0lB,KC//CM,CD+/CA,CAAC0sB,CC//CE4gH,OD+/CM,OC//CQ;MDggDvC,AC//CC3hC,ID+/CG,CAACh/E,AC//CC,CAACjd,KAAK,CAACp1B,CD+/CA,GAAG0lB,EC//CG,GAAGotI,CD+/CA,CAACzgH,QAAQ,CC//CE;MDggDjC,AC//CCg/E,ID+/CG,CAAC/+E,AC//CC,CAACm+G,IAAI,CAACzwJ,MAAM,CD+/CA,EC//CGizJ,CD+/CAvtI,MAAM,CAAC4sB,EC//CG,WD+/CU;MACzC,AC9/CC++E,ID8/CG,CAAC9+E,AC9/CC,CAACghH,YD8/CW,GAAG7tI,EC9/CG,CAAC1lB,GD8/CE,CAACuyC,EC9/CG,GAAG2gH,QD8/CO,aC9/Cc;MD+/CvD,AC9/CC7hC,ID8/CG,CAAC7+E,AC9/CC,CAACiwF,YD8/CW,GAAG/8G,KC9/CM,CD8/CA,AC9/CC1lB,CD8/CAwyC,KC9/CM,GAAG0gH,KD8/CI,gBC9/CiB;MD+/C1D,AC9/CC7hC,ID8/CG,CAAC5+E,AC9/CC,CAACkhH,WAAW,CAAC3zJ,KD8/CI,CC9/CE,ED8/CC0lB,CC9/CEytI,KD8/CI,CAAC1gH,SC9/CU,SD8/CQ;MACnD,AC9/CC4+E,ID8/CG,CAAC3+E,AC9/CC,CAAC4wF,SD8/CQ,CAACltH,IAAI,AC9/CC,CD8/CCsP,AC9/CA1lB,MD8/CM,AC9/CA,CD8/CC0yC,EC9/CEygH,QD8/CS,CAAC,MC9/CK;MD+/C9C,AC9/CC9hC,ID8/CG,CAAC1+E,AC9/CC,CAAC6gH,SD8/CQ,CC9/CE,CAACxzJ,CD8/CA0lB,KC9/CM,CD8/CA,CAACitB,CC9/CEygH,SD8/CQ,KC9/CM;MDggDzC,AC//CC/hC,ID+/CG,CAACz+E,AC//CC,CAACowF,QD+/CO,GAAGt9G,EC//CG,CAAC1lB,GD+/CE,CAAC4yC,EC//CG,GAAGwgH,ID+/CG,UC//CW;MDggD5C,AC//CC/hC,ID+/CG,CAACx+E,AC//CC,CAAC6vF,QD+/CO,GAAGh9G,MAAM,CAACmtB,KC//CM,CAAC7yC,GD+/CE,GC//CI,GAAGkzJ,qBAAqB;MDggD7D,AC//CC7hC,ID+/CG,CAACv+E,AC//CC,CAACywF,SD+/CQ,GAAG79G,KC//CM,CD+/CA,AC//CC1lB,CD+/CA8yC,KC//CM,GAAGqgH,ED+/CC,aC//Cc;MDigDjD,AChgDC9hC,IDggDG,CAACt+E,AChgDC,CAACkwF,eDggDc,AChgDC,CAACjjI,EDggDC0lB,IChgDK,EDggDC,CAACqtB,AChgDCqgH,cAAc,EDggDC,CChgDEC,WAAW,GAAGS,sBAAsB;MDigDrF,AChgDCziC,IDggDG,CAACr+E,AChgDC,CAAC+vF,UDggDS,EChgDG,CDggDAr9G,AChgDC1lB,MDggDK,AChgDC,CDggDAgzC,EChgDGqgH,SDggDQ,EChgDG;MDigDxC,AChgDChiC,IDggDG,CAACp+E,AChgDC,CAACgxG,SDggDQ,GAAGv+H,MAAM,CAACutB,QChgDS,EDggDC,CChgDE6gH,sBAAsB;MDigD3D,AChgDCziC,IDggDG,CAACn+E,AChgDC,CAAC62G,cDggDa,AChgDC,GDggDErkI,AChgDCqkI,MDggDK,CAAC72G,OChgDQ,QDggDO;MAC7C,AC//CCykC,ID+/CG,AC//CC,CD+/CAxkC,AC//CC0/G,WD+/CU,GAAGntI,GC//CI,GD+/CE,AC//CCmtI,CD+/CA1/G,WAAW,KC//CM;MDggD3C,AC//CCwkC,ID+/CG,AC//CC,CD+/CAvkC,AC//CC0/G,WAAW,CD+/CA,EC//CGA,CD+/CAptI,MAAM,CAAC0tB,GC//CI,SD+/CQ;MACvC,AC//CCukC,ID+/CG,AC//CC,CD+/CAtkC,AC//CC0/G,UAAU,ED+/CC,CC//CEA,ED+/CCrtI,MAAM,CAAC2tB,CC//CE,WD+/CU;MACvC,AC//CCskC,ID+/CG,AC//CC,CD+/CArkC,AC//CC0/G,YD+/CW,EC//CG,CD+/CAttI,EC//CGstI,ID+/CG,CAAC1/G,SC//CU,GD+/CE;MAEvC,AChgDCqkC,IDggDK3+B,AChgDD,CAACi6G,QDggDS,EChgDC,CDggDEvtI,EChgDCutI,IDggDK,CAAC1/G,KChgDI,SDggDU;MACvC,AC//CCokC,ID+/CG1+B,AC//CC,CAACi6G,QD+/CO,GAAG,IAAI,MC//CO,GAAGA,qBAAqB;MDigDnD,AChgDCv7E,IDggDI3+B,AChgDA,CAACm6G,QDggDQ,KAAK,EChgDE,EDggDE,CChgDCA,CDggDE,cChgDa;MACtCx7E,EDigDA,ECjgDI,CAACy7E,CDigDC93J,CAAC,GAAG09C,SAAS,ACjgDA,CDigDCh5C,ECjgDEozJ,IDigDI,UCjgDU;MACpCz7E,EDigDA1+B,ECjgDI,CAACo6G,MDigDI,GAAG,ECjgDI,EDigDAhvI,CCjgDGgvI,IDigDE,CAAE/3J,CAAE,CAAC,ICjgDI;MAE9Bq8E,EDigDA,ECjgDI,CAACoyE,EDigDC,IAAIpuJ,CAAC,GAAG,CAAC,EAAEA,CAAC,ACjgDC,GAAGouJ,EDigDCzuJ,CAAC,EAAE,EAAGK,CAAC,EAAG,ICjgDG;MAEpC01H,IDigDCp4E,CCjgDI,CAACn1B,ODigDI,ACjgDG,CDigDDnoB,CAAC,CAAE,ACjgDC42J,GDigDEv5G,QCjgDS,CDigDA,CAAEr9C,ACjgDC,CDigDA,CAAE,CAACwa,KAAK,CAAC,CAAC;IC//CzC,IDigDC;EC//CF,IDigDC;EC//CD,IDigDC,IAAI,CAACo9B,ACjgDG6gH,SAASA,CAAEjtG,IDigDA,ECjgDM,CDigDHlO,CCjgDKnnB,MAAM,EDigDF,ACjgDK;IAEpC,EDggDA,EChgDI+gI,EDggDA,CAACr/G,cChgDgB,EDggDA,CChgDG,CAAC,CDggDD9tB,MAAM,CAAC8tB,gBAAgB;IC//C/C,EDggDA,EChgDIs/G,EDggDA,CAACr/G,QChgDU,GDggDC,AChgDE,CAAC,EDggDA/tB,MAAM,CAAC+tB,WAAW;IC//CrC,EDigDA,ECjgDIs/G,EDigDA,CAACr/G,OCjgDS,GDigDC,ACjgDE,CAAC,EDigDAhuB,MAAM,CAACguB,UAAU;IChgDnC,EDkgDA,EClgDIs/G,EDkgDA,CAACr/G,UAAU,CClgDG,EDkgDAjuB,CClgDG,CAAC,IDkgDE,CAACiuB,UAAU;ICjgDnC,EDmgDA,ECngDIs/G,EDmgDA,CAACr/G,OCngDS,EDmgDA,CCngDG,CAAC,CDmgDDluB,MAAM,CAACkuB,SAAS;ICjgDjC,EDmgDA,ECngDM48F,EDmgDF,CAAC38F,OCngDW,GAAG/hB,GDmgDD,GAAGpM,ACngDI,CAACqM,KDmgDC,CAAC8hB,YCngDgB,CDmgDH;ICjgDzC,EDkgDA,GClgDM,CDkgDF,CAACC,EClgDKn4C,IAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGkqD,GDkgDG,GAAGzhC,AClgDA,CAAC1lB,KDkgDK,CAAC8zC,AClgDA,EAAEn4C,IAAC,GAAGsB,CAAC,EAAEtB,IAAC,EAAG,CDkgDM,CClgDH;MDmgDlD,ACjgDC,IDigDG,ACjgDGykG,CDigDFrsD,ICjgDO,GAAGoT,MAAM,CAAExrD,IDigDA,ACjgDC,CAAE,EDigDA+pB,MAAM,CAACquB,kBAAkB;MAEnD,ACjgDC,IDigDG,ACjgDEqsD,CDigDDpsD,ICjgDM,CAAC4uD,IDigDE,GAAGl9E,MAAM,CAACsuB,ICjgDM,EAAG,GDigDA;MAEjC,ECjgDE,EDigDE,CAACyE,CCjgDGqN,QDigDM,ACjgDE,GDigDCpgC,ACjgDE2rG,KAAK,CDigDD,ACjgDEi/B,CDigDD73G,SAAS,CCjgDG,CAAEo6G,iBAAiB,CAAE;MDkgDzD,EChgDE/sG,EDggDE,CAAC3T,KChgDK,CAACxY,GDggDG,GAAGjU,GChgDG,CAACqD,EDggDE,CAACopB,SAAS,SChgDS,CAAEiuD,KAAK,CAACluE,WAAY,CAAC;MDigD/D,EChgDE0hI,EDggDE,CAAC3/G,IChgDI,CAAClrB,UDggDU,GAAGrD,MAAM,CAACuuB,CChgDC,CAAEmsD,KAAK,CAAChwF,MAAM,CDggDA,AChgDC8hB,WAAY,CAAC;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msCD,SCnsCY,EAAG;MDosCpChiJ,AClsCC,IDksCG,AClsCEwgJ,CDksCDpnK,IAAI,CClsCG,EDksCA,GClsCK8lK,CDksCD,CAAC9lK,CClsCG,CAAC83H,EDksCA,WClsCa,EAAG9uG,cAAc,GAAG88I,GAAG,CAAC+C,MAAM;MDmsChE,AClsCC,IDksCI,AClsCCzB,IDksCG,CAAC7jK,CClsCE,GDksCE,EClsCGuiK,GDksCE,AClsCC,CAACruC,CDksCA,EAAG7wG,IAAI,CAACrjB,IAAI,EClsCE,CDksCC,CClsCEylB,GDksCE,CAACzlB,IAAI,MClsCO,GAAGuiK,GAAG,CAACgD,OAAO;MDmsClE,AClsCC,IDksCIvqK,AClsCC6oK,MDksCK,AClsCC,CDksCAtjK,IAAI,AClsCCgiK,CDksCC,EClsCE,CAACnuC,CDksCC,CAACpuG,QAAS,CAAC,CAACpmB,AClsCD,EAAG6lB,IDksCI,GAAG,CAAC,EAAGpC,IAAI,AClsCD,CDksCE2C,EClsCCu8I,GAAG,CAACiD,EDksCG,GAAG,EClsCC,EDksCG,CAACx/I,QAAQ;MAE5E,ACnsCC,IDmsCI,ACnsCC69I,IDmsCG,CAAC54H,CCnsCE,KAAKs3H,GAAG,CDmsCA,ACnsCCjuC,IAAI,CDmsCAhlH,CCnsCGmW,QDmsCM,EAAG,ICnsCK,GAAG88I,GAAG,CAACkD,KAAK;MACrD,EDosCA,ECpsCK5B,EDosCC54H,ICpsCK,KAAKs3H,CDosCA,ECpsCG,CDosCA,ACpsCCpuC,IDosCG,CAAClpF,ACpsCC,EAAGxlB,QDosCM,MCpsCQ,GAAG88I,GAAG,CAACmD,MAAM;MACvD,EDqsCA,ECrsCK7B,GDqsCC,GCrsCK,CDqsCCpiK,GAAG,CCrsCC8gK,GDqsCGt3H,ACrsCA,CAACopF,GAAG,EAAG5uG,IDqsCG,EAAG,QCrsCQ,GAAG88I,GAAG,CAACoD,MAAM;IAEtD,MDqsCE,IAAK16H,UAAU,CAAExpC,GAAG,CAAE,KAAK6N,SAAS,EAAG+T,IAAI,CAAE5hB,GAAG,CAAE,GAAGwpC,UAAU,CAAExpC,GAAG,CAAE;ICnsCxE,IDqsCC,ACrs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AAI;ECv0BlE,IDw0BC,IAAI5lC,CCx0BI6rJ,KDw0BE,GAAG,CAAC,GAAGvtI,GAAG,SCx0BYutI,CAAEpoJ,YAAY,EAAG;IAEjD,EDu0BA,ECv0BMS,EDu0BFnE,KAAK,CCv0BK,EDu0BF,CCv0BK0D,GDu0BD,CAACiiC,MAAM,ECv0BM,CDu0BH1lC,ACv0BIkE,MDu0BE,ECv0BM;IAEtC,EDs0BA,GCt0BM,CDs0BFka,GCt0BMtlC,CDs0BF,ACt0BG,GDs0BA,ACt0BG,CDs0BD,ACt0BE,EAAE4uB,CDs0BD,CCt0BG,EDs0BA3H,CCt0BGmE,IDs0BE,ICt0BM,CAAC/mB,MAAM,EAAErE,CAAC,GAAG4uB,EAAE,EAAE5uB,CAAC,EAAG,EAAG;MDu0BtD,ACr0BC,IDq0BKgtD,ACr0BCx+B,IDq0BG,GAAG,ACr0BC,GAAGpD,CDq0BA,CAAC4hC,IAAI,ECr0BG,CAAEhtD,CAAC,CAAE;MDu0B9B,ACr0BC,IDq0BI,ACr0BCgoK,IDq0BG,CAACh7G,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,ACr0BC,CAAEx+B,GDq0BC,CAACjK,GCr0BM,CAAC,EAAG,CDq0BH,EAAG;QAE9C,ACr0BC,IDq0BK2pC,ACr0BC8kH,SDq0BQ,CCr0BE,EDq0BChmH,CCr0BEk7G,GDq0BE,CAACh6G,SAAS,ACr0BC,CAAEvjC,YAAa,CAAC;QAChD,EDq0BAwjC,ECr0BMy3G,QDq0BI,GAAG54G,CCr0BK,GDq0BD,ACr0BIu5E,CDq0BHp4E,SCr0Ba,CDq0BH,ACr0BIl0C,GAAG,CAAEuU,OAAQ,CAAC,CAACi+I,cAAc;QDu0B9DnnI,ACr0BCowF,IDq0BG,CCr0BE,CAAC6rC,EDq0BCv0G,IAAI,CAACoB,ICr0BK,CAAE4kH,EDq0BA,GAAG/rJ,KAAK,ACr0BE,EAAE2+I,CDq0BD13G,SAAS,ECr0BK,CAAC;QDs0B9C1oB,ACr0BCyiI,GDq0BE,IAAIj7G,IAAI,CAACqB,ECr0BG,CAAE2kH,IDq0BE,GAAG9rJ,GCr0BM,CAAC,EDq0BD,GAAGinC,UAAU;QACzClnC,ACr0BCyuG,KDq0BI,ACr0BC,CAACowC,GDq0BE94G,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KDknBD,GAAAxhC,MClnBe,GAAG,CDknBlB,GClnBsBq2J,IDknBtB9jH,aAAA,EClnByC,CDknBlCtiC,AClnBoCktI,GAAG,EAAExgG,GDknBjC,CClnBqC,CDknBnCx2B,CClnBqCktG,ODknB7B,KClnByC,EAAExnB,KAAM,CAAC;IDonB3Ep5D,EClnBCqpH,KDknBD,CAAK1rJ,QClnBU,GAAG,IDknBE,AClnBE81G,GDknBC,IAAI,YClnBc,CAAEi3B,GAAG,EAAEt7G,UAAU,EAAE8a,IAAK,CAAC;IDonBlElK,ECnnBCspH,KDmnBD,CAAKj5I,cAAc,CCnnBG,EDmnBA,CCnnBG,GDmnBC6uB,CCnnBG0gF,uBDmnBqB,CAAE,ECnnBG,CAAE8qB,CDmnBD3tJ,ECnnBI,EAAEqyC,QDmnBM,CAAEn9B,CCnnBE,EAAEi4C,EDmnBC,ECnnBI,CDmnBD,ACnnBE,EDmnBC,CAAC,EAAE,EAAG,CAAC;IACxFlK,EClnBCkK,IAAI,CDknBL,AClnBMu2E,CDknBDnwG,OClnBS,GAAG44I,GDknBC,GAAG,IAAI,EClnBI,CAACzoC,QAAQ;IDmnBtCzgF,ECjnBCpzC,KDinBD,ACjnBM,CDinBDqzC,ACjnBE2gF,YDinBU,ACjnBE,GDinBC,ACjnBEA,IDinBE,QCjnBU;IDmnBlC5gF,EClnBCpzC,KDknBD,AClnBM,CDknBDqF,AClnBEm9B,KDknBG,GAAGn9B,EClnBI,GDknBC,AClnBEm9B,UAAU;IDonB9B4Q,ECnnBCpzC,KDmnBD,ACnnBM,CDmnBDkR,ACnnBEmsG,UAAU,CDmnBD,ECnnBIA,CDmnBD,IAAI,KCnnBO;IDonB9BjqE,ECnnBCpzC,KDmnBD,ACnnBM,CDmnBD8lB,ACnnBEy2I,WAAW,GDmnBC,ACnnBEA,GDmnBC,IAAI,ICnnBM;IDqnBhC,ECpnBCv8J,GDonBK,ECpnBA,CAAC6rI,CDonBG/0J,CAAC,GAAG,CAAC,EAAEA,CAAC,ACpnBF,GDonBKuuB,ACpnBFwmI,KDonBO,EAAE/0J,CAAC,CCpnBD,CDonBI,EAAG;MAElCs8D,ACrnBApzC,KAAK,CAACwsG,CDqnBN,CAAKl5D,GCrn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5S,CC9mBG6S,ID8mBE,EC9mBI,CD8mBD,CAAE,AC9mBCo4J,CD8mBA,SC9mBU,EAAG;IDgnBpE,EC9mBE8E,MAAM,GAAGn9J,KAAK;ED8mBf,IC7mBCo9J,OAAO,GAAGn9J,MAAM;ID6mBjBhhB,EC3mBCo+K,CD2mBD,UC3mBY,GAAGhF,UAAU;ID2mBzBv/K,ECzmBC+iB,GDymBD,EAED,CC3mBQ,CAACmE,KAAK,ED2mBdw1C,CC3mBiB3nD,IAAI,CAACoC,KD2mBXulD,AC3mBgB,CD2mBdpoD,AC3mBgB4S,KD2mBX,AC3mBgB,ED2mBd7E,CC3mBiBk9J,KD2mBX,EAAG,GC3mBmB,CAAC;MD6mBhDl9J,AC5mBCU,MD4mBK,AC5mBC,CD4mBA1F,AC5mBC8J,MAAM,GD4mBE,AC5mBCpS,CD4mBC,GC5mBG,CD4mBC,AC5mBAoC,CD4mBCy1B,IC5mBI,CAAEzlB,MAAM,GD4mBE,AC5mBCo4J,CD4mBA5qK,KAAK,EAAEL,EC5mBI,CAAC,ED4mBA,GAAG,EAAG,CAAC;IAE1D,EC5mBE,IAAI,CAAC8xK,WAAW,CAAE,CAAC,EAAE,CAAC,EAAEl/J,KAAK,EAAEC,MAAO,CAAC;ED4mBxC,EC1mBA,CAAC;ID0mBDhhB,ACxmBA,GDwmBA,CCxmBI,CAACogL,kBAAkB,GAAG,UAAW7xK,MAAM,EAAG;IDwmB9C1U,ECtmBC,GDsmBD,EAED,ECxmBS0U,MAAM,CDwmBfkoD,ACxmBgBliD,IAAI,CAAEspK,KDwmBZpnH,CAAEtoD,KAAK,EAAE6kB,GCxmBoB,CAAC,EDwmBf,EAAG;ICtmB3B,CAAC,CDwmBD,IAAM0jC,gBAAgB,GAAG1jC,MAAM,CAACguB,qBAAqB;ICtmBrD,EDwmBA,ECxmBI,CAACy9C,CDwmBCjwF,KAAK,GAAG,ECxmBE,EDwmBE,CAAC6nD,ACxmBA,UAAW9nD,EDwmBC,CAACsV,GCxmBI,EAAG,CDwmBD,CAACjC,IAAI,CAACA,IAAI;MAEhD,ACxmBC,IDwmBKiN,GAAG,ACxmBDtgB,GDwmBImoD,GCxmBE,CAACniD,IAAI,CAAEk/I,ODwmBO,CAACt1J,CCxmBE,CAAC,IDwmBG,GAAG,CAAC,CA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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2025 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '173';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\nconst TimestampQuery = {\n\tCOMPUTE: 'compute',\n\tRENDER: 'render'\n};\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return false;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return;\n\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return;\n\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\treturn canvas.toDataURL( 'image/png' );\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.renderTarget = null; // assign texture to a render target\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.renderTarget = source.renderTarget;\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis._depthTexture = null;\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tset depthTexture( current ) {\n\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\n\t\tif ( current !== null ) current.renderTarget = this;\n\n\t\tthis._depthTexture = current;\n\n\t}\n\n\tget depthTexture() {\n\n\t\treturn this._depthTexture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in Data3DTexture directly.\n\t\t//\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nlet _id$2 = 0;\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t *\n\t * @returns {number}\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} minTarget\n\t * @param {Vector2} maxTarget\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\n\t * @returns {Vector2}\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t *\n\t * @param {number} fullWidth\n\t * @param {number} fullHeight\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active && instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, i );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, end - 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1, i );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start, end - 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b, i ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: i,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass VideoFrameTexture extends VideoTexture {\n\n\tconstructor( mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( {}, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoFrameTexture = true;\n\n\t}\n\n\tupdate() {\n\n\t\t// overwrites `VideoTexture.update()` with an empty method since\n\t\t// this type of texture is updated via `setFrame()`.\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this ); // restoring Texture.clone()\n\n\t}\n\n\tsetFrame( frame ) {\n\n\t\tthis.image = frame;\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.isMaterial === true ) {\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.isObject3D === true ) {\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass RenderTarget3D extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTarget3D = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass RenderTargetArray extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTargetArray = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Number} format\n * @param {Number} type\n * @return {Number} The number of bytes required to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TimestampQuery, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoFrameTexture, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WebXRController, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n","/**\n * @license\n * Copyright 2010-2025 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nimport { Color, Matrix3, Vector2, mergeUniforms, Vector3, CubeUVReflectionMapping, Mesh, BoxGeometry, ShaderMaterial, cloneUniforms, BackSide, ColorManagement, SRGBTransfer, PlaneGeometry, FrontSide, getUnlitUniformColorSpace, Euler, Matrix4, IntType, RGBAFormat, HalfFloatType, UnsignedByteType, FloatType, Plane, EquirectangularReflectionMapping, EquirectangularRefractionMapping, WebGLCubeRenderTarget, CubeReflectionMapping, CubeRefractionMapping, PerspectiveCamera, NoToneMapping, MeshBasicMaterial, BufferGeometry, BufferAttribute, WebGLRenderTarget, NoBlending, OrthographicCamera, LinearFilter, LinearSRGBColorSpace, warnOnce, arrayNeedsUint32, Uint32BufferAttribute, Uint16BufferAttribute, Vector4, DataArrayTexture, LessEqualCompare, Texture, DepthTexture, Data3DTexture, CubeTexture, GLSL3, CustomToneMapping, NeutralToneMapping, AgXToneMapping, ACESFilmicToneMapping, CineonToneMapping, ReinhardToneMapping, LinearToneMapping, PCFShadowMap, PCFSoftShadowMap, VSMShadowMap, LinearTransfer, AddOperation, MixOperation, MultiplyOperation, ObjectSpaceNormalMap, TangentSpaceNormalMap, NormalBlending, DoubleSide, UniformsUtils, Layers, Frustum, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, NearestFilter, LessEqualDepth, AddEquation, SubtractEquation, ReverseSubtractEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor, ConstantColorFactor, OneMinusConstantColorFactor, ConstantAlphaFactor, OneMinusConstantAlphaFactor, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, CullFaceNone, CullFaceBack, CullFaceFront, NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessDepth, AlwaysDepth, NeverDepth, MinEquation, MaxEquation, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestMipmapNearestFilter, NearestMipmapLinearFilter, LinearMipmapNearestFilter, LinearMipmapLinearFilter, NeverCompare, AlwaysCompare, LessCompare, EqualCompare, GreaterEqualCompare, GreaterCompare, NotEqualCompare, NoColorSpace, DepthStencilFormat, getByteLength, UnsignedIntType, UnsignedInt248Type, UnsignedShortType, DepthFormat, createElementNS, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedInt5999Type, ByteType, ShortType, AlphaFormat, RGBFormat, LuminanceFormat, LuminanceAlphaFormat, RedFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, EventDispatcher, ArrayCamera, WebXRController, RAD2DEG, createCanvasElement, SRGBColorSpace, REVISION, toNormalizedProjectionMatrix, toReversedProjectionMatrix, probeAsync, WebGLCoordinateSystem } from './three.core.js';\nexport { AdditiveAnimationBlendMode, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxHelper, BufferGeometryLoader, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CircleGeometry, Clock, ColorKeyframeTrack, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, Controls, CubeCamera, CubeTextureLoader, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceFrontBack, Curve, CurvePath, CylinderGeometry, Cylindrical, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualStencilFunc, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Fog, FogExp2, FramebufferTexture, GLBufferAttribute, GLSL1, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverStencilFunc, NormalAnimationBlendMode, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, OctahedronGeometry, Path, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RGBDepthPacking, RGBIntegerFormat, RGDepthPacking, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RenderTarget, RenderTarget3D, RenderTargetArray, ReplaceStencilOp, RingGeometry, Scene, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, TOUCH, TetrahedronGeometry, TextureLoader, TextureUtils, TimestampQuery, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, VectorKeyframeTrack, VideoFrameTexture, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroSlopeEnding, ZeroStencilOp } from './three.core.js';\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\n\t\t\t// ranges to reduce load on `gl.bufferSubData`. Empirically, this has led\n\t\t\t// to performance improvements for applications which make heavy use of\n\t\t\t// update ranges. Likely due to GPU command overhead.\n\t\t\t//\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\n\t\t\t// update ranges in-place. This is safe because this method will clear the\n\t\t\t// update ranges once updated.\n\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\n\t\t\t// array which is smaller than the original. This index tracks the last\n\t\t\t// index representing a merged range, any data after this index can be\n\t\t\t// trimmed once the merge algorithm is completed.\n\t\t\tlet mergeIndex = 0;\n\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\n\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\n\t\t\t\t// operate over positive integers.\n\t\t\t\tif ( range.start <= previousRange.start + previousRange.count + 1 ) {\n\n\t\t\t\t\tpreviousRange.count = Math.max(\n\t\t\t\t\t\tpreviousRange.count,\n\t\t\t\t\t\trange.start + range.count - previousRange.start\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t++ mergeIndex;\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Trim the array to only contain the merged ranges.\n\t\t\tupdateRanges.length = mergeIndex + 1;\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\\n\\t\\temissiveColor = sRGBTransferEOTF( emissiveColor );\\n\\t#endif\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferEOTF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\\nconst float Inv255 = 1. / 255.;\\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec4( 0., 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec4( 1., 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat af = modf( v * PackFactors.a, vuf );\\n\\tfloat bf = modf( vuf * ShiftRight8, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\\n}\\nvec3 packDepthToRGB( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec3( 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec3( 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat bf = modf( v * PackFactors.b, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\\n}\\nvec2 packDepthToRG( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec2( 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec2( 1., 1. );\\n\\tfloat vuf;\\n\\tfloat gf = modf( v * 256., vuf );\\n\\treturn vec2( vuf * Inv255, gf );\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors4 );\\n}\\nfloat unpackRGBToDepth( const in vec3 v ) {\\n\\treturn dot( v, UnpackFactors3 );\\n}\\nfloat unpackRGToDepth( const in vec2 v ) {\\n\\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\\n}\\nvec4 pack2HalfToRGBA( const in vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( const in vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 CineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t#else\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#elif DEPTH_PACKING == 3202\\n\\t\\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\\n\\t#elif DEPTH_PACKING == 3203\\n\\t\\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix[ 3 ];\\n\\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\tfunction dispose() {\n\n\t\tif ( boxMesh !== undefined ) {\n\n\t\t\tboxMesh.geometry.dispose();\n\t\t\tboxMesh.material.dispose();\n\n\t\t\tboxMesh = undefined;\n\n\t\t}\n\n\t\tif ( planeMesh !== undefined ) {\n\n\t\t\tplaneMesh.geometry.dispose();\n\t\t\tplaneMesh.material.dispose();\n\n\t\t\tplaneMesh = undefined;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\tconst reverseDepthBuffer = parameters.reverseDepthBuffer === true && extensions.has( 'EXT_clip_control' );\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t *\n\t * @param {Scene} scene\n\t * @param {number} sigma\n\t * @param {number} near\n\t * @param {number} far\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t *\n\t * @param {Texture} equirectangular\n\t * @param {WebGLRenderTarget} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t *\n\t * @param {Texture} cubemap\n\t * @param {null} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t *\n\t * @param {WebGLRenderTarget} cubeUVRenderTarget\n\t * @param {number} lodIn\n\t * @param {number} lodOut\n\t * @param {number} sigma\n\t * @param {Vector3} [poleAxis]\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nconst _m0 = /*@__PURE__*/ new Matrix3();\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tColorManagement._getMatrix( _m0, ColorManagement.workingColorSpace, colorSpace );\n\n\tconst encodingMatrix = `mat3( ${ _m0.elements.map( ( v ) => v.toFixed( 4 ) ) } )`;\n\n\tswitch ( ColorManagement.getTransfer( colorSpace ) ) {\n\n\t\tcase LinearTransfer:\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t\tcase SRGBTransfer:\n\t\t\treturn [ encodingMatrix, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space: ', colorSpace );\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\n\treturn [\n\n\t\t`vec4 ${functionName}( vec4 value ) {`,\n\n\t\t`\treturn ${components[ 1 ]}( vec4( value.rgb * ${components[ 0 ]}, value.a ) );`,\n\n\t\t'}',\n\n\t].join( '\\n' );\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'Cineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\n\nfunction getLuminanceFunction() {\n\n\tColorManagement.getLuminanceCoefficients( _v0 );\n\n\tconst r = _v0.x.toFixed( 4 );\n\tconst g = _v0.y.toFixed( 4 );\n\tconst b = _v0.z.toFixed( 4 );\n\n\treturn [\n\n\t\t'float luminance( const in vec3 rgb ) {',\n\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\n\n\t\t'\treturn dot( weights, rgb );',\n\n\t\t'}'\n\n\t].join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\t\t\tparameters.decodeVideoTextureEmissive ? '#define DECODE_VIDEO_TEXTURE_EMISSIVE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\t\t\tgetLuminanceFunction(),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst reverseDepthBuffer = renderer.state.buffers.depth.getReversed();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\t\t\tdecodeVideoTextureEmissive: HAS_EMISSIVEMAP && ( material.emissiveMap.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.emissiveMap.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.reverseDepthBuffer )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.decodeVideoTextureEmissive )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction has( object ) {\n\n\t\treturn properties.has( object );\n\n\t}\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\thas: has,\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst reversedFuncs = {\n\t[ NeverDepth ]: AlwaysDepth,\n\t[ LessDepth ]: GreaterDepth,\n\t[ EqualDepth ]: NotEqualDepth,\n\t[ LessEqualDepth ]: GreaterEqualDepth,\n\n\t[ AlwaysDepth ]: NeverDepth,\n\t[ GreaterDepth ]: LessDepth,\n\t[ NotEqualDepth ]: EqualDepth,\n\t[ GreaterEqualDepth ]: LessEqualDepth,\n};\n\nfunction WebGLState( gl, extensions ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\t\tlet reversed = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetReversed: function ( value ) {\n\n\t\t\t\tif ( reversed !== value ) {\n\n\t\t\t\t\tconst ext = extensions.get( 'EXT_clip_control' );\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.NEGATIVE_ONE_TO_ONE_EXT );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst oldDepth = currentDepthClear;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t\tthis.setClear( oldDepth );\n\n\t\t\t\t}\n\n\t\t\t\treversed = value;\n\n\t\t\t},\n\n\t\t\tgetReversed: function () {\n\n\t\t\t\treturn reversed;\n\n\t\t\t},\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( reversed ) depthFunc = reversedFuncs[ depthFunc ];\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\tdepth = 1 - depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\t\t\t\treversed = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\n\t\tdepthBuffer.setReversed( false );\n\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getTargetType( texture ) {\n\n\t\tif ( texture.isWebGLCubeRenderTarget ) return _gl.TEXTURE_CUBE_MAP;\n\t\tif ( texture.isWebGL3DRenderTarget ) return _gl.TEXTURE_3D;\n\t\tif ( texture.isWebGLArrayRenderTarget || texture.isCompressedArrayTexture ) return _gl.TEXTURE_2D_ARRAY;\n\t\treturn _gl.TEXTURE_2D;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGB16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGB32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGB8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGB16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGB32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGBA16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGBA32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGBA8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGBA16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGBA32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\tproperties.remove( renderTarget.depthTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\tconst textureProperties = properties.get( renderTarget.depthTexture );\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! textureProperties.__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = textureProperties.__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t// if the bound depth texture has changed\n\t\tif ( renderTargetProperties.__boundDepthTexture !== renderTarget.depthTexture ) {\n\n\t\t\t// fire the dispose event to get rid of stored state associated with the previously bound depth buffer\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tif ( renderTargetProperties.__depthDisposeCallback ) {\n\n\t\t\t\trenderTargetProperties.__depthDisposeCallback();\n\n\t\t\t}\n\n\t\t\t// set up dispose listeners to track when the currently attached buffer is implicitly unbound\n\t\t\tif ( depthTexture ) {\n\n\t\t\t\tconst disposeEvent = () => {\n\n\t\t\t\t\tdelete renderTargetProperties.__boundDepthTexture;\n\t\t\t\t\tdelete renderTargetProperties.__depthDisposeCallback;\n\t\t\t\t\tdepthTexture.removeEventListener( 'dispose', disposeEvent );\n\n\t\t\t\t};\n\n\t\t\t\tdepthTexture.addEventListener( 'dispose', disposeEvent );\n\t\t\t\trenderTargetProperties.__depthDisposeCallback = disposeEvent;\n\n\t\t\t}\n\n\t\t\trenderTargetProperties.__boundDepthTexture = depthTexture;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer[ i ] === undefined ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer[ i ];\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer === undefined ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer;\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst targetType = getTargetType( renderTarget );\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( targetType, webglTexture );\n\t\t\t\tgenerateMipmap( targetType );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear !== renderState.depthNear ) || ( depthData.depthFar !== renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\t// Check that the browser implements the necessary APIs to use an\n\t\t\t\t// XRProjectionLayer rather than an XRWebGLLayer\n\t\t\t\tconst useLayers = typeof XRWebGLBinding !== 'undefined' && 'createProjectionLayer' in XRWebGLBinding.prototype;\n\n\t\t\t\tif ( ! useLayers ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t *\n\t\t * @param {ArrayCamera} camera - The camera to update.\n\t\t * @param {PerspectiveCamera} cameraL - The left camera.\n\t\t * @param {PerspectiveCamera} cameraR - The right camera.\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Check if the projection uses an infinite far plane.\n\t\t\tif ( projL[ 10 ] === - 1.0 ) {\n\n\t\t\t\t// Use the projection matrix from the left eye.\n\t\t\t\t// The camera offset is sufficient to include the view volumes\n\t\t\t\t// of both eyes (assuming symmetric projections).\n\t\t\t\tcamera.projectionMatrix.copy( cameraL.projectionMatrix );\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraL.projectionMatrixInverse );\n\n\t\t\t} else {\n\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tlet depthNear = camera.near;\n\t\t\tlet depthFar = camera.far;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tif ( depthSensing.depthNear > 0 ) depthNear = depthSensing.depthNear;\n\t\t\t\tif ( depthSensing.depthFar > 0 ) depthFar = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = depthNear;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = depthFar;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tcameraL.layers.mask = camera.layers.mask | 0b010;\n\t\t\tcameraR.layers.mask = camera.layers.mask | 0b100;\n\t\t\tcameraXR.layers.mask = cameraL.layers.mask | cameraR.layers.mask;\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\t\t\t\tconst gpuDepthSensingEnabled = enabledFeatures &&\n\t\t\t\t\tenabledFeatures.includes( 'depth-sensing' ) &&\n\t\t\t\t\tsession.depthUsage == 'gpu-optimized';\n\n\t\t\t\tif ( gpuDepthSensingEnabled && glBinding ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tconst chunkOffset = offset % chunkSize; // offset in the current chunk\n\t\t\t\t\tconst chunkPadding = chunkOffset % info.boundary; // required padding to match boundary\n\t\t\t\t\tconst chunkStart = chunkOffset + chunkPadding; // the start position in the current chunk for the data\n\n\t\t\t\t\toffset += chunkPadding;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkStart !== 0 && ( chunkSize - chunkStart ) < info.storage ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t\treverseDepthBuffer = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission render target scale\n\t\tthis.transmissionResolutionScale = 1.0;\n\n\t\t// camera matrices cache\n\n\t\tconst _currentProjectionMatrix = new Matrix4();\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl, extensions );\n\n\t\t\tif ( capabilities.reverseDepthBuffer && reverseDepthBuffer ) {\n\n\t\t\t\tstate.buffers.depth.setReversed( true );\n\n\t\t\t}\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) {\n\n\t\t\t\tbits |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t}\n\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tbackground.dispose();\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( ! ( object.isMesh || object.isPoints || object.isLine || object.isSprite ) ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null && _currentActiveMipmapLevel === 0 ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z * _this.transmissionResolutionScale, activeViewport.w * _this.transmissionResolutionScale );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tconst reverseDepthBuffer = state.buffers.depth.getReversed();\n\n\t\t\t\tif ( reverseDepthBuffer ) {\n\n\t\t\t\t\t_currentProjectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t\ttoNormalizedProjectionMatrix( _currentProjectionMatrix );\n\t\t\t\t\ttoReversedProjectionMatrix( _currentProjectionMatrix );\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', _currentProjectionMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tconst _scratchFrameBuffer = _gl.createFramebuffer();\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t} else if ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t// check if the depth texture is already bound to the frame buffer and that it's been initialized\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\t\t\tif ( renderTargetProperties.__boundDepthTexture !== depthTexture ) {\n\n\t\t\t\t\t\t// check if the depth texture is compatible\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdepthTexture !== null &&\n\t\t\t\t\t\t\tproperties.has( depthTexture ) &&\n\t\t\t\t\t\t\t( renderTarget.width !== depthTexture.image.width || renderTarget.height !== depthTexture.image.height )\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\tthrow new Error( 'WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Swap the depth buffer to the currently attached one\n\t\t\t\t\t\ttextures.setupDepthRenderbuffer( renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\t// Use a scratch frame buffer if rendering to a mip level to avoid depth buffers\n\t\t\t// being bound that are different sizes.\n\t\t\tif ( activeMipmapLevel !== 0 ) {\n\n\t\t\t\tframebuffer = _scratchFrameBuffer;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel, layer );\n\n\t\t\t} else if ( renderTarget !== null && activeMipmapLevel !== 0 ) {\n\n\t\t\t\t// Only bind the frame buffer if we are using a scratch frame buffer to render to a mipmap.\n\t\t\t\t// If we rebind the texture when using a multi sample buffer then an error about inconsistent samples will be thrown.\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t// set the active frame buffer to the one we want to read\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\n\t\t\t\t\t// reset the frame buffer to the currently set buffer before waiting\n\t\t\t\t\tconst currFramebuffer = _currentRenderTarget !== null ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, currFramebuffer );\n\n\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\n\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t// read the data and delete the buffer\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\treturn buffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tconst _srcFramebuffer = _gl.createFramebuffer();\n\t\tconst _dstFramebuffer = _gl.createFramebuffer();\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, srcLevel = 0, dstLevel = null ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tdstLevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\t// support the previous signature with just a single dst mipmap level\n\t\t\tif ( dstLevel === null ) {\n\n\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t// @deprecated, r171\n\t\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels.' );\n\t\t\t\t\tdstLevel = srcLevel;\n\t\t\t\t\tsrcLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdstLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// gather the necessary dimensions to copy\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ dstLevel ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.isBox3 ? srcRegion.max.z - srcRegion.min.z : 1;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.isBox3 ? srcRegion.min.z : 0;\n\n\t\t\t} else {\n\n\t\t\t\tconst levelScale = Math.pow( 2, - srcLevel );\n\t\t\t\twidth = Math.floor( image.width * levelScale );\n\t\t\t\theight = Math.floor( image.height * levelScale );\n\t\t\t\tif ( srcTexture.isDataArrayTexture ) {\n\n\t\t\t\t\tdepth = image.depth;\n\n\t\t\t\t} else if ( srcTexture.isData3DTexture ) {\n\n\t\t\t\t\tdepth = Math.floor( image.depth * levelScale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdepth = 1;\n\n\t\t\t\t}\n\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\t// Set up the destination target\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\t// used for copying data from cpu\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\t// set up the src texture\n\t\t\tconst isSrc3D = srcTexture.isDataArrayTexture || srcTexture.isData3DTexture;\n\t\t\tconst isDst3D = dstTexture.isDataArrayTexture || dstTexture.isData3DTexture;\n\t\t\tif ( srcTexture.isDepthTexture ) {\n\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\t\t\t\tconst srcRenderTargetProperties = properties.get( srcTextureProperties.__renderTarget );\n\t\t\t\tconst dstRenderTargetProperties = properties.get( dstTextureProperties.__renderTarget );\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, srcRenderTargetProperties.__webglFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, dstRenderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// if the source or destination are a 3d target then a layer needs to be bound\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( srcTexture ).__webglTexture, srcLevel, minZ + i );\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( dstTexture ).__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.DEPTH_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else if ( srcLevel !== 0 || srcTexture.isRenderTargetTexture || properties.has( srcTexture ) ) {\n\n\t\t\t\t// get the appropriate frame buffers\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\n\t\t\t\t// bind the frame buffer targets\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, _srcFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, _dstFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// assign the correct layers and mip maps to the frame buffers\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, srcTextureProperties.__webglTexture, srcLevel, minZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, srcTextureProperties.__webglTexture, srcLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, dstTextureProperties.__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, dstTextureProperties.__webglTexture, dstLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// copy the data using the fastest function that can achieve the copy\n\t\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.COLOR_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t\t} else if ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.copyTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ + i, minX, minY, width, height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.copyTexSubImage2D( glTarget, dstLevel, dstX, dstY, minX, minY, width, height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// unbind read, draw buffers\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t// copy data into the 3d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// copy data into the 2d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// reset values\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( dstLevel === 0 && dstTexture.generateMipmaps ) {\n\n\t\t\t\t_gl.generateMipmap( glTarget );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\t// @deprecated, r170\n\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use \"copyTextureToTexture\" instead.' );\n\n\t\t\treturn this.copyTextureToTexture( srcTexture, dstTexture, srcRegion, dstPosition, level );\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorspace = ColorManagement._getDrawingBufferColorSpace( colorSpace );\n\t\tgl.unpackColorSpace = ColorManagement._getUnpackColorSpace();\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, ArrayCamera, BackSide, BoxGeometry, BufferAttribute, BufferGeometry, ByteType, CineonToneMapping, ClampToEdgeWrapping, Color, ColorManagement, ConstantAlphaFactor, ConstantColorFactor, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeUVReflectionMapping, CullFaceBack, CullFaceFront, CullFaceNone, CustomBlending, CustomToneMapping, Data3DTexture, DataArrayTexture, DepthFormat, DepthStencilFormat, DepthTexture, DoubleSide, DstAlphaFactor, DstColorFactor, EqualCompare, EqualDepth, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, FloatType, FrontSide, Frustum, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, HalfFloatType, IntType, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, LuminanceAlphaFormat, LuminanceFormat, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NoBlending, NoColorSpace, NoToneMapping, NormalBlending, NotEqualCompare, NotEqualDepth, ObjectSpaceNormalMap, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, PerspectiveCamera, Plane, PlaneGeometry, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReverseSubtractEquation, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, ShaderChunk, ShaderLib, ShaderMaterial, ShortType, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, Texture, Uint16BufferAttribute, Uint32BufferAttribute, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebXRController, ZeroFactor, createCanvasElement };\n","import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","// Import Three.js and OrbitControls from node_modules\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\n\r\nconsole.log(\"app.js loaded\");\r\n\r\n// ===== Scene Setup =====\r\nconst scene = new THREE.Scene();\r\nscene.background = new THREE.Color(0x000000);\r\n\r\nconst camera = new THREE.PerspectiveCamera(\r\n  45,\r\n  window.innerWidth / window.innerHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(0, 30, 80);\r\n\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nconst controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true;\r\n\r\n// ===== Lighting =====\r\nconst ambientLight = new THREE.AmbientLight(0x404040, 2);\r\nscene.add(ambientLight);\r\n\r\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 2);\r\ndirectionalLight.position.set(50, 50, 50);\r\nscene.add(directionalLight);\r\n\r\n// ===== Raycaster & Mouse for Tooltip/Clicks =====\r\nconst raycaster = new THREE.Raycaster();\r\nconst mouse = new THREE.Vector2();\r\n\r\n// Create a tooltip element (for hover)\r\nconst tooltip = document.createElement(\"div\");\r\ntooltip.className = \"tooltip\";\r\ndocument.body.appendChild(tooltip);\r\n\r\n// ===== Helper: Create an Orbit Group =====\r\nfunction createPlanetOrbit(orbitRadius, planetMesh) {\r\n  const orbitGroup = new THREE.Object3D();\r\n  // Place the planet along the X-axis at the orbit radius.\r\n  planetMesh.position.set(orbitRadius, 0, 0);\r\n  orbitGroup.add(planetMesh);\r\n  scene.add(orbitGroup);\r\n  return orbitGroup;\r\n}\r\n\r\n// ===== The Sun =====\r\nconst sunGeometry = new THREE.SphereGeometry(4, 32, 32);\r\nconst sunMaterial = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\nconst sun = new THREE.Mesh(sunGeometry, sunMaterial);\r\nscene.add(sun);\r\n\r\n// ===== Planetary Data =====\r\nconst planetsData = [\r\n  {\r\n    name: \"Mercury\",\r\n    orbitRadius: 8,\r\n    planetRadius: 0.5,\r\n    color: 0xaaaaaa,\r\n    rotationSpeed: 0.02,\r\n    funFact: \"Mercury is the smallest planet and closest to the Sun.\"\r\n  },\r\n  {\r\n    name: \"Venus\",\r\n    orbitRadius: 11,\r\n    planetRadius: 0.7,\r\n    color: 0xeed5b7,\r\n    rotationSpeed: 0.015,\r\n    funFact: \"Venus has a thick atmosphere and is the hottest planet.\"\r\n  },\r\n  {\r\n    name: \"Earth\",\r\n    orbitRadius: 14,\r\n    planetRadius: 1,\r\n    color: null,\r\n    rotationSpeed: 0.01,\r\n    texture: \"https://threejs.org/examples/textures/land_ocean_ice_cloud_2048.jpg\",\r\n    funFact: \"Earth is our home and the only planet known to support life.\",\r\n    hasMoon: true\r\n  },\r\n  {\r\n    name: \"Mars\",\r\n    orbitRadius: 17,\r\n    planetRadius: 0.53,\r\n    color: 0xff4500,\r\n    rotationSpeed: 0.008,\r\n    funFact: \"Mars is known as the Red Planet, home to the tallest volcano.\"\r\n  },\r\n  {\r\n    name: \"Jupiter\",\r\n    orbitRadius: 22,\r\n    planetRadius: 2,\r\n    color: 0xffa500,\r\n    rotationSpeed: 0.005,\r\n    funFact: \"Jupiter is the largest planet and features the Great Red Spot.\"\r\n  },\r\n  {\r\n    name: \"Saturn\",\r\n    orbitRadius: 28,\r\n    planetRadius: 1.7,\r\n    color: 0xffd27f,\r\n    rotationSpeed: 0.003,\r\n    funFact: \"Saturn is famous for its spectacular rings.\",\r\n    hasRings: true\r\n  },\r\n  {\r\n    name: \"Uranus\",\r\n    orbitRadius: 34,\r\n    planetRadius: 1.2,\r\n    color: 0x66ccff,\r\n    rotationSpeed: 0.002,\r\n    funFact: \"Uranus rotates on its side, giving it extreme seasons.\"\r\n  },\r\n  {\r\n    name: \"Neptune\",\r\n    orbitRadius: 40,\r\n    planetRadius: 1.2,\r\n    color: 0x3366ff,\r\n    rotationSpeed: 0.001,\r\n    funFact: \"Neptune has supersonic winds and a deep blue color.\"\r\n  }\r\n];\r\n\r\nconst textureLoader = new THREE.TextureLoader();\r\nconst planetOrbits = [];      // For rotation animations\r\nconst hoverablePlanets = [];  // For raycasting (hover & click)\r\n\r\nplanetsData.forEach(planetData => {\r\n  // Create planet geometry and material.\r\n  const geometry = new THREE.SphereGeometry(planetData.planetRadius, 32, 32);\r\n  let material;\r\n  if (planetData.texture) {\r\n    const texture = textureLoader.load(planetData.texture);\r\n    material = new THREE.MeshStandardMaterial({ map: texture });\r\n  } else {\r\n    material = new THREE.MeshStandardMaterial({ color: planetData.color });\r\n  }\r\n  const planetMesh = new THREE.Mesh(geometry, material);\r\n  \r\n  // Save tooltip data on the mesh.\r\n  planetMesh.userData = { name: planetData.name, funFact: planetData.funFact };\r\n  hoverablePlanets.push(planetMesh);\r\n  \r\n  // Create an orbit group for the planet.\r\n  const orbitGroup = createPlanetOrbit(planetData.orbitRadius, planetMesh);\r\n  planetOrbits.push({ group: orbitGroup, speed: planetData.rotationSpeed });\r\n  \r\n  // If the planet has a moon (like Earth), add one.\r\n  if (planetData.hasMoon) {\r\n    const moonGeometry = new THREE.SphereGeometry(0.27, 32, 32);\r\n    const moonTexture = textureLoader.load(\"https://threejs.org/examples/textures/moon_1024.jpg\");\r\n    const moonMaterial = new THREE.MeshStandardMaterial({ map: moonTexture });\r\n    const moonMesh = new THREE.Mesh(moonGeometry, moonMaterial);\r\n    const moonOrbit = new THREE.Object3D();\r\n    moonMesh.position.set(2, 0, 0);\r\n    moonOrbit.add(moonMesh);\r\n    planetMesh.add(moonOrbit);\r\n    planetOrbits.push({ group: moonOrbit, speed: 0.05 });\r\n  }\r\n  \r\n  // If the planet has rings (like Saturn), add them.\r\n  if (planetData.hasRings) {\r\n    const ringGeometry = new THREE.RingGeometry(\r\n      planetData.planetRadius * 1.2,\r\n      planetData.planetRadius * 1.8,\r\n      32\r\n    );\r\n    const ringMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0x8d6e63,\r\n      side: THREE.DoubleSide,\r\n      transparent: true,\r\n      opacity: 0.7\r\n    });\r\n    const ringMesh = new THREE.Mesh(ringGeometry, ringMaterial);\r\n    ringMesh.rotation.x = Math.PI / 2;\r\n    planetMesh.add(ringMesh);\r\n  }\r\n});\r\n\r\n// ===== Animation Control =====\r\nlet animationActive = true;\r\n\r\nwindow.addEventListener(\"mousedown\", () => {\r\n  animationActive = false;\r\n});\r\nwindow.addEventListener(\"mouseup\", () => {\r\n  animationActive = true;\r\n});\r\n\r\n// ===== Animation Loop =====\r\nconst clock = new THREE.Clock();\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  const delta = clock.getDelta();\r\n  \r\n  if (animationActive) {\r\n    planetOrbits.forEach(item => {\r\n      item.group.rotation.y += item.speed * delta * 60;\r\n    });\r\n  }\r\n  \r\n  controls.update();\r\n  renderer.render(scene, camera);\r\n}\r\nanimate();\r\n\r\n// ===== Responsive Resize =====\r\nwindow.addEventListener(\"resize\", () => {\r\n  camera.aspect = window.innerWidth / window.innerHeight;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n});\r\n\r\n// ===== Hover Tooltip =====\r\nwindow.addEventListener(\"mousemove\", onMouseMove, false);\r\nfunction onMouseMove(event) {\r\n  mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n  mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n  \r\n  raycaster.setFromCamera(mouse, camera);\r\n  const intersects = raycaster.intersectObjects(hoverablePlanets);\r\n  \r\n  if (intersects.length > 0) {\r\n    const intersected = intersects[0].object;\r\n    tooltip.style.display = \"block\";\r\n    tooltip.innerHTML = `<strong>${intersected.userData.name}</strong><br>${intersected.userData.funFact}`;\r\n    tooltip.style.left = event.clientX + 10 + \"px\";\r\n    tooltip.style.top = event.clientY + 10 + \"px\";\r\n  } else {\r\n    tooltip.style.display = \"none\";\r\n  }\r\n}\r\n\r\n// ===== Click Event for Mars GIF =====\r\nwindow.addEventListener(\"click\", onClick, false);\r\nfunction onClick(event) {\r\n  mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n  mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n  \r\n  raycaster.setFromCamera(mouse, camera);\r\n  const intersects = raycaster.intersectObjects(hoverablePlanets);\r\n  \r\n  if (intersects.length > 0) {\r\n    const intersected = intersects[0].object;\r\n    if (intersected.userData.name === \"Mars\") {\r\n      showGifOverlay();\r\n    }\r\n  }\r\n}\r\n\r\nfunction showGifOverlay() {\r\n  let gifOverlay = document.getElementById(\"gifOverlay\");\r\n  if (!gifOverlay) {\r\n    gifOverlay = document.createElement(\"div\");\r\n    gifOverlay.id = \"gifOverlay\";\r\n    gifOverlay.style.position = \"fixed\";\r\n    gifOverlay.style.top = \"50%\";\r\n    gifOverlay.style.left = \"50%\";\r\n    gifOverlay.style.transform = \"translate(-50%, -50%)\";\r\n    gifOverlay.style.zIndex = \"10000\";\r\n    gifOverlay.style.backgroundColor = \"rgba(0, 0, 0, 0.8)\";\r\n    gifOverlay.style.padding = \"10px\";\r\n    gifOverlay.style.borderRadius = \"8px\";\r\n    document.body.appendChild(gifOverlay);\r\n  }\r\n  gifOverlay.innerHTML = `<img src=\"https://media.giphy.com/media/oImOwaZ34b8K70aQ6B/giphy.gif\" style=\"max-width:100%; max-height:80vh;\" alt=\"Mars GIF\" />`;\r\n  gifOverlay.style.display = \"block\";\r\n  \r\n  // Hide the overlay after 5 seconds.\r\n  setTimeout(() => {\r\n    gifOverlay.style.display = \"none\";\r\n  }, 5000);\r\n}\r\n"]}