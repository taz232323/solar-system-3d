{"version":3,"sources":["node_modules/three/build/three.core.js","node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","app.js","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_readOnlyError","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","TimestampQuery","COMPUTE","RENDER","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","isPerspectiveMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","colorSpaces","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","_defineProperty","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this2","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","_RenderTarget","_this3","isWebGLRenderTarget","DataArrayTexture","_Texture","_this4","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this7","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this8","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","getInterpolatedAttribute","attr","i3","barycoord","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","concat","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this9","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","_Material","_this10","isMeshBasicMaterial","_superPropGet","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","_id$2","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this11","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this12","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this13","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this14","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this15","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this16","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this17","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_this18","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this19","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this20","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","Group","_Object3D4","_this21","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator3","_step3","inputjoint","_getHandJoint","disconnect","frame","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator4","_step4","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","FogExp2","density","isFogExp2","Fog","isFog","Scene","_Object3D5","_this22","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","_Material3","_this23","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this24","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this25","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this26","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","_Object3D8","_this27","isBone","DataTexture","_Texture4","_this28","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this29","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","_Mesh2","_this30","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","_Mesh3","_this31","customSort","_instanceInfo","_geometryInfo","_availableInstanceIds","_availableGeometryIds","_nextIndexStart","_nextVertexStart","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","atCapacity","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","hasIndex","setGeometryAt","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","requiredVertexLength","requiredIndexLength","oldGeometry","batchId","_objectSpread","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","_Material4","_this32","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D9","_this33","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this34","LineLoop","_Line2","_this35","PointsMaterial","_Material5","_this36","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this37","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture5","video","_this38","isVideoTexture","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","VideoFrameTexture","_VideoTexture","_this39","isVideoFrameTexture","setFrame","FramebufferTexture","_Texture6","_this40","isFramebufferTexture","CompressedTexture","_Texture7","_this41","isCompressedTexture","CompressedArrayTexture","_CompressedTexture","_this42","isCompressedArrayTexture","CompressedCubeTexture","_CompressedTexture2","_this43","isCompressedCubeTexture","CanvasTexture","_Texture8","_this44","isCanvasTexture","DepthTexture","_Texture9","_this45","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this46","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this47","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this48","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","k","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this49","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this50","isCubicBezierCurve3","LineCurve","_Curve5","_this51","isLineCurve","LineCurve3","_Curve6","_this52","isLineCurve3","QuadraticBezierCurve","_Curve7","_this53","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this54","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this55","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this56","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","resolution","pts","Path","_CurvePath","_this57","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry2","_this58","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this59","capSegments","radialSegments","path","CircleGeometry","_BufferGeometry3","_this60","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry4","_this61","radiusTop","radiusBottom","openEnded","halfHeight","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this62","PolyhedronGeometry","_BufferGeometry5","_this63","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this64","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry6","_this65","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","_edgeData$key","Shape","_Path","_this66","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry7","_this67","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this68","OctahedronGeometry","_PolyhedronGeometry3","_this69","PlaneGeometry","_BufferGeometry8","_this70","width_half","height_half","segment_width","segment_height","RingGeometry","_BufferGeometry9","_this71","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this72","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this73","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this74","TorusGeometry","_BufferGeometry12","_this75","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this76","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this77","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this78","edges","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","_Material6","_this79","isShadowMaterial","RawShaderMaterial","_ShaderMaterial","_this80","isRawShaderMaterial","MeshStandardMaterial","_Material7","_this81","isMeshStandardMaterial","MeshPhysicalMaterial","_MeshStandardMaterial","_this82","isMeshPhysicalMaterial","ior","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","_Material8","_this83","isMeshPhongMaterial","MeshToonMaterial","_Material9","_this84","isMeshToonMaterial","MeshNormalMaterial","_Material10","_this85","isMeshNormalMaterial","MeshLambertMaterial","_Material11","_this86","isMeshLambertMaterial","MeshDepthMaterial","_Material12","_this87","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","_Material13","_this88","isMeshDistanceMaterial","MeshMatcapMaterial","_Material14","_this89","isMeshMatcapMaterial","LineDashedMaterial","_LineBasicMaterial","_this90","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this91","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this92","_wrapNativeSuper","FileLoader","_Loader","_this93","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","_ref","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this94","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","_Light","skyColor","_this95","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","_LightShadow","_this96","isSpotLightShadow","SpotLight","_Light2","_this97","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this98","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","_Light3","_this99","isPointLight","OrthographicCamera","_Camera2","_this100","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","_LightShadow3","_this101","isDirectionalLightShadow","DirectionalLight","_Light4","_this102","isDirectionalLight","AmbientLight","_Light5","_this103","isAmbientLight","RectAreaLight","_Light6","_this104","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this105","isLightProbe","MaterialLoader","_Loader8","_this106","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","_BufferGeometry16","_this107","isInstancedBufferGeometry","instanceCount","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_asyncToGenerator","_callee","_callee$","_context8","parseAsync","_x5","_x6","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","_parseAsync","_callee2","_callee2$","_context9","parseImagesAsync","_x7","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee4","_deserializeImage","_deserializedImage2","_callee4$","_context11","_deserializeImage3","_callee3","_url","_callee3$","_context10","_deserializeImage2","_x9","_x8","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this108","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","_PerspectiveCamera","_this109","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this110","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this111","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this112","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher6","_this113","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","RenderTarget3D","_RenderTarget2","_this114","isRenderTarget3D","RenderTargetArray","_RenderTarget3","_this115","isRenderTargetArray","Uniform","_id","UniformsGroup","_EventDispatcher7","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this117","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this118","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this121","GridHelper","_LineSegments2","_this122","PolarGridHelper","_LineSegments3","_this123","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","nearZ","setPoint","_box","BoxHelper","_LineSegments5","_this126","Box3Helper","_LineSegments6","_this127","PlaneHelper","_Line3","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this129","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","Controls","_EventDispatcher8","_this131","domElement","state","mouseButtons","touches","ONE","TWO","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","revision","__THREE__","_threeCore","require","asyncGeneratorStep","_next","_throw","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","updateBuffer","bufferSubData","mergeIndex","previousRange","deleteBuffer","delete","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundCube","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMapTransform","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","WebGLBackground","cubemaps","cubeuvmaps","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","locationSize","ARRAY_BUFFER","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","reverseDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","lines","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphNormal","morphColor","disposeTexture","getUniforms","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","join","_m0","getEncodingComponents","encodingMatrix","getShaderErrors","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","getLuminanceFunction","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","decodeVideoTextureEmissive","opaque","useDepthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","getChannel","getParameters","shadows","shaderID","customVertexShaderID","customFragmentShaderID","getReversed","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","UniformsCache","halfWidth","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","shadowUniforms","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","fragment","WebGLShadowMap","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","pars","viewportCount","vp","renderObject","VSMPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","kl","shadowMaterial","reversedFuncs","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","reversed","currentDepthMask","currentDepthFunc","currentDepthClear","setReversed","ext","clipControlEXT","LOWER_LEFT_EXT","ZERO_TO_ONE_EXT","NEGATIVE_ONE_TO_ONE_EXT","oldDepth","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getTargetType","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB_INTEGER","RGB8UI","RGB16UI","RGB32UI","RGB8I","RGB16I","RGB32I","RGBA_INTEGER","RGBA8UI","RGBA16UI","RGBA32UI","RGBA8I","RGBA16I","RGBA32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","sourceProperties","workingPrimaries","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","layerByteLength","layerData","subarray","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__renderTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__boundDepthTexture","__depthDisposeCallback","disposeEvent","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","targetType","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","useLayers","layerInit","depthFormat","glDepthFormat","projectionlayerInit","xrCompatible","makeXRCompatible","getPixelRatio","XRWebGLBinding","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x2","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","gpuDepthSensingEnabled","includes","depthUsage","getDepthInformation","isValid","detectedPlanes","_e1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","refreshUniformsToon","refreshUniformsPhong","refreshUniformsStandard","refreshUniformsPhysical","refreshUniformsMatcap","refreshUniformsDistance","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsSprites","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexString","cachedObject","chunkSize","chunkOffset","chunkPadding","boundary","chunkStart","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","_parameters$reverseDe","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","_outputColorSpace","toneMappingExposure","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","transmissionResolutionScale","_currentProjectionMatrix","_vector4","_emptyScene","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","_scratchFrameBuffer","useDefaultFramebuffer","framebufferBound","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","glBuffer","currFramebuffer","PIXEL_PACK_BUFFER","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","getBufferSubData","deleteSync","_x3","_x4","copyFramebufferToTexture","levelScale","copyTexSubImage2D","_srcFramebuffer","_dstFramebuffer","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","srcLevel","dstLevel","dstX","dstY","dstZ","glTarget","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","isSrc3D","isDst3D","srcTextureProperties","dstTextureProperties","srcRenderTargetProperties","dstRenderTargetProperties","copyTexSubImage3D","copyTextureToTexture3D","initRenderTarget","resetState","drawingBufferColorspace","_three","_changeEvent","_startEvent","_endEvent","_plane","_TILT_LIMIT","_v","_twoPI","_STATE","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","_EPS","OrbitControls","_Controls","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","target0","position0","zoom0","_domElementKeyEvents","_lastPosition","_lastQuaternion","_lastTargetPosition","_quat","_quatInverse","_spherical","_sphericalDelta","_panOffset","_rotateStart","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","passive","getRootNode","capture","touchAction","stopListenToKeyEvents","getPolarAngle","getAzimuthalAngle","getDistance","listenToKeyEvents","saveState","_rotateLeft","_getAutoRotationAngle","zoomChanged","_clampDistance","prevRadius","newRadius","radiusDelta","mouseBefore","prevZoom","mouseAfter","_getZoomScale","normalizedDelta","_rotateUp","_panLeft","objectMatrix","_panUp","_pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","_dollyOut","dollyScale","_dollyIn","_updateZoomParameters","rect","getBoundingClientRect","dist","_handleMouseDownRotate","clientX","clientY","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveRotate","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_handleKeyDown","ctrlKey","metaKey","shiftKey","_handleTouchStartRotate","pageX","pageY","_getSecondPointerPosition","_handleTouchStartPan","_handleTouchStartDolly","_handleTouchStartDollyPan","_handleTouchStartDollyRotate","_handleTouchMoveRotate","_handleTouchMovePan","_handleTouchMoveDolly","centerX","centerY","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate","_addPointer","pointerId","_removePointer","_isTrackingPointer","_trackPointer","_customWheelEvent","deltaMode","newEvent","setPointerCapture","pointerType","releasePointerCapture","mouseAction","button","THREE","_interopRequireWildcard","_OrbitControls","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","innerWidth","innerHeight","appendChild","controls","ambientLight","directionalLight","mouse","tooltip","createElement","className","createPlanetOrbit","orbitRadius","planetMesh","orbitGroup","sunGeometry","sunMaterial","sun","planetsData","planetRadius","rotationSpeed","funFact","hasMoon","hasRings","textureLoader","planetOrbits","hoverablePlanets","planetData","speed","moonGeometry","moonTexture","moonMaterial","moonMesh","moonOrbit","ringGeometry","ringMaterial","ringMesh","animationActive","clock","animate","intersected","innerHTML","onClick","showGifOverlay","gifOverlay","getElementById","zIndex","backgroundColor","padding","borderRadius","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2025 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '173';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\nconst TimestampQuery = {\n\tCOMPUTE: 'compute',\n\tRENDER: 'render'\n};\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return false;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return;\n\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return;\n\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\treturn canvas.toDataURL( 'image/png' );\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.renderTarget = null; // assign texture to a render target\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.renderTarget = source.renderTarget;\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis._depthTexture = null;\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tset depthTexture( current ) {\n\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\n\t\tif ( current !== null ) current.renderTarget = this;\n\n\t\tthis._depthTexture = current;\n\n\t}\n\n\tget depthTexture() {\n\n\t\treturn this._depthTexture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in Data3DTexture directly.\n\t\t//\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nlet _id$2 = 0;\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t *\n\t * @returns {number}\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} minTarget\n\t * @param {Vector2} maxTarget\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\n\t * @returns {Vector2}\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t *\n\t * @param {number} fullWidth\n\t * @param {number} fullHeight\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active && instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, i );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, end - 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1, i );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start, end - 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b, i ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: i,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass VideoFrameTexture extends VideoTexture {\n\n\tconstructor( mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( {}, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoFrameTexture = true;\n\n\t}\n\n\tupdate() {\n\n\t\t// overwrites `VideoTexture.update()` with an empty method since\n\t\t// this type of texture is updated via `setFrame()`.\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this ); // restoring Texture.clone()\n\n\t}\n\n\tsetFrame( frame ) {\n\n\t\tthis.image = frame;\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.isMaterial === true ) {\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.isObject3D === true ) {\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass RenderTarget3D extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTarget3D = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass RenderTargetArray extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTargetArray = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Number} format\n * @param {Number} type\n * @return {Number} The number of bytes required to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TimestampQuery, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoFrameTexture, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WebXRController, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n","/**\n * @license\n * Copyright 2010-2025 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nimport { Color, Matrix3, Vector2, mergeUniforms, Vector3, CubeUVReflectionMapping, Mesh, BoxGeometry, ShaderMaterial, cloneUniforms, BackSide, ColorManagement, SRGBTransfer, PlaneGeometry, FrontSide, getUnlitUniformColorSpace, Euler, Matrix4, IntType, RGBAFormat, HalfFloatType, UnsignedByteType, FloatType, Plane, EquirectangularReflectionMapping, EquirectangularRefractionMapping, WebGLCubeRenderTarget, CubeReflectionMapping, CubeRefractionMapping, PerspectiveCamera, NoToneMapping, MeshBasicMaterial, BufferGeometry, BufferAttribute, WebGLRenderTarget, NoBlending, OrthographicCamera, LinearFilter, LinearSRGBColorSpace, warnOnce, arrayNeedsUint32, Uint32BufferAttribute, Uint16BufferAttribute, Vector4, DataArrayTexture, LessEqualCompare, Texture, DepthTexture, Data3DTexture, CubeTexture, GLSL3, CustomToneMapping, NeutralToneMapping, AgXToneMapping, ACESFilmicToneMapping, CineonToneMapping, ReinhardToneMapping, LinearToneMapping, PCFShadowMap, PCFSoftShadowMap, VSMShadowMap, LinearTransfer, AddOperation, MixOperation, MultiplyOperation, ObjectSpaceNormalMap, TangentSpaceNormalMap, NormalBlending, DoubleSide, UniformsUtils, Layers, Frustum, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, NearestFilter, LessEqualDepth, AddEquation, SubtractEquation, ReverseSubtractEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor, ConstantColorFactor, OneMinusConstantColorFactor, ConstantAlphaFactor, OneMinusConstantAlphaFactor, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, CullFaceNone, CullFaceBack, CullFaceFront, NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessDepth, AlwaysDepth, NeverDepth, MinEquation, MaxEquation, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestMipmapNearestFilter, NearestMipmapLinearFilter, LinearMipmapNearestFilter, LinearMipmapLinearFilter, NeverCompare, AlwaysCompare, LessCompare, EqualCompare, GreaterEqualCompare, GreaterCompare, NotEqualCompare, NoColorSpace, DepthStencilFormat, getByteLength, UnsignedIntType, UnsignedInt248Type, UnsignedShortType, DepthFormat, createElementNS, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedInt5999Type, ByteType, ShortType, AlphaFormat, RGBFormat, LuminanceFormat, LuminanceAlphaFormat, RedFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, EventDispatcher, ArrayCamera, WebXRController, RAD2DEG, createCanvasElement, SRGBColorSpace, REVISION, toNormalizedProjectionMatrix, toReversedProjectionMatrix, probeAsync, WebGLCoordinateSystem } from './three.core.js';\nexport { AdditiveAnimationBlendMode, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxHelper, BufferGeometryLoader, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CircleGeometry, Clock, ColorKeyframeTrack, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, Controls, CubeCamera, CubeTextureLoader, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceFrontBack, Curve, CurvePath, CylinderGeometry, Cylindrical, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualStencilFunc, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Fog, FogExp2, FramebufferTexture, GLBufferAttribute, GLSL1, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverStencilFunc, NormalAnimationBlendMode, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, OctahedronGeometry, Path, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RGBDepthPacking, RGBIntegerFormat, RGDepthPacking, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RenderTarget, RenderTarget3D, RenderTargetArray, ReplaceStencilOp, RingGeometry, Scene, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, TOUCH, TetrahedronGeometry, TextureLoader, TextureUtils, TimestampQuery, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, VectorKeyframeTrack, VideoFrameTexture, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroSlopeEnding, ZeroStencilOp } from './three.core.js';\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\n\t\t\t// ranges to reduce load on `gl.bufferSubData`. Empirically, this has led\n\t\t\t// to performance improvements for applications which make heavy use of\n\t\t\t// update ranges. Likely due to GPU command overhead.\n\t\t\t//\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\n\t\t\t// update ranges in-place. This is safe because this method will clear the\n\t\t\t// update ranges once updated.\n\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\n\t\t\t// array which is smaller than the original. This index tracks the last\n\t\t\t// index representing a merged range, any data after this index can be\n\t\t\t// trimmed once the merge algorithm is completed.\n\t\t\tlet mergeIndex = 0;\n\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\n\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\n\t\t\t\t// operate over positive integers.\n\t\t\t\tif ( range.start <= previousRange.start + previousRange.count + 1 ) {\n\n\t\t\t\t\tpreviousRange.count = Math.max(\n\t\t\t\t\t\tpreviousRange.count,\n\t\t\t\t\t\trange.start + range.count - previousRange.start\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t++ mergeIndex;\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Trim the array to only contain the merged ranges.\n\t\t\tupdateRanges.length = mergeIndex + 1;\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\\n\\t\\temissiveColor = sRGBTransferEOTF( emissiveColor );\\n\\t#endif\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferEOTF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\\nconst float Inv255 = 1. / 255.;\\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec4( 0., 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec4( 1., 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat af = modf( v * PackFactors.a, vuf );\\n\\tfloat bf = modf( vuf * ShiftRight8, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\\n}\\nvec3 packDepthToRGB( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec3( 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec3( 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat bf = modf( v * PackFactors.b, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\\n}\\nvec2 packDepthToRG( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec2( 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec2( 1., 1. );\\n\\tfloat vuf;\\n\\tfloat gf = modf( v * 256., vuf );\\n\\treturn vec2( vuf * Inv255, gf );\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors4 );\\n}\\nfloat unpackRGBToDepth( const in vec3 v ) {\\n\\treturn dot( v, UnpackFactors3 );\\n}\\nfloat unpackRGToDepth( const in vec2 v ) {\\n\\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\\n}\\nvec4 pack2HalfToRGBA( const in vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( const in vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 CineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t#else\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#elif DEPTH_PACKING == 3202\\n\\t\\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\\n\\t#elif DEPTH_PACKING == 3203\\n\\t\\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix[ 3 ];\\n\\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\tfunction dispose() {\n\n\t\tif ( boxMesh !== undefined ) {\n\n\t\t\tboxMesh.geometry.dispose();\n\t\t\tboxMesh.material.dispose();\n\n\t\t\tboxMesh = undefined;\n\n\t\t}\n\n\t\tif ( planeMesh !== undefined ) {\n\n\t\t\tplaneMesh.geometry.dispose();\n\t\t\tplaneMesh.material.dispose();\n\n\t\t\tplaneMesh = undefined;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\tconst reverseDepthBuffer = parameters.reverseDepthBuffer === true && extensions.has( 'EXT_clip_control' );\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t *\n\t * @param {Scene} scene\n\t * @param {number} sigma\n\t * @param {number} near\n\t * @param {number} far\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t *\n\t * @param {Texture} equirectangular\n\t * @param {WebGLRenderTarget} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t *\n\t * @param {Texture} cubemap\n\t * @param {null} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t *\n\t * @param {WebGLRenderTarget} cubeUVRenderTarget\n\t * @param {number} lodIn\n\t * @param {number} lodOut\n\t * @param {number} sigma\n\t * @param {Vector3} [poleAxis]\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nconst _m0 = /*@__PURE__*/ new Matrix3();\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tColorManagement._getMatrix( _m0, ColorManagement.workingColorSpace, colorSpace );\n\n\tconst encodingMatrix = `mat3( ${ _m0.elements.map( ( v ) => v.toFixed( 4 ) ) } )`;\n\n\tswitch ( ColorManagement.getTransfer( colorSpace ) ) {\n\n\t\tcase LinearTransfer:\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t\tcase SRGBTransfer:\n\t\t\treturn [ encodingMatrix, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space: ', colorSpace );\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\n\treturn [\n\n\t\t`vec4 ${functionName}( vec4 value ) {`,\n\n\t\t`\treturn ${components[ 1 ]}( vec4( value.rgb * ${components[ 0 ]}, value.a ) );`,\n\n\t\t'}',\n\n\t].join( '\\n' );\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'Cineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\n\nfunction getLuminanceFunction() {\n\n\tColorManagement.getLuminanceCoefficients( _v0 );\n\n\tconst r = _v0.x.toFixed( 4 );\n\tconst g = _v0.y.toFixed( 4 );\n\tconst b = _v0.z.toFixed( 4 );\n\n\treturn [\n\n\t\t'float luminance( const in vec3 rgb ) {',\n\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\n\n\t\t'\treturn dot( weights, rgb );',\n\n\t\t'}'\n\n\t].join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\t\t\tparameters.decodeVideoTextureEmissive ? '#define DECODE_VIDEO_TEXTURE_EMISSIVE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\t\t\tgetLuminanceFunction(),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst reverseDepthBuffer = renderer.state.buffers.depth.getReversed();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\t\t\tdecodeVideoTextureEmissive: HAS_EMISSIVEMAP && ( material.emissiveMap.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.emissiveMap.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.reverseDepthBuffer )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.decodeVideoTextureEmissive )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction has( object ) {\n\n\t\treturn properties.has( object );\n\n\t}\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\thas: has,\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst reversedFuncs = {\n\t[ NeverDepth ]: AlwaysDepth,\n\t[ LessDepth ]: GreaterDepth,\n\t[ EqualDepth ]: NotEqualDepth,\n\t[ LessEqualDepth ]: GreaterEqualDepth,\n\n\t[ AlwaysDepth ]: NeverDepth,\n\t[ GreaterDepth ]: LessDepth,\n\t[ NotEqualDepth ]: EqualDepth,\n\t[ GreaterEqualDepth ]: LessEqualDepth,\n};\n\nfunction WebGLState( gl, extensions ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\t\tlet reversed = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetReversed: function ( value ) {\n\n\t\t\t\tif ( reversed !== value ) {\n\n\t\t\t\t\tconst ext = extensions.get( 'EXT_clip_control' );\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.NEGATIVE_ONE_TO_ONE_EXT );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst oldDepth = currentDepthClear;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t\tthis.setClear( oldDepth );\n\n\t\t\t\t}\n\n\t\t\t\treversed = value;\n\n\t\t\t},\n\n\t\t\tgetReversed: function () {\n\n\t\t\t\treturn reversed;\n\n\t\t\t},\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( reversed ) depthFunc = reversedFuncs[ depthFunc ];\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\tdepth = 1 - depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\t\t\t\treversed = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\n\t\tdepthBuffer.setReversed( false );\n\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getTargetType( texture ) {\n\n\t\tif ( texture.isWebGLCubeRenderTarget ) return _gl.TEXTURE_CUBE_MAP;\n\t\tif ( texture.isWebGL3DRenderTarget ) return _gl.TEXTURE_3D;\n\t\tif ( texture.isWebGLArrayRenderTarget || texture.isCompressedArrayTexture ) return _gl.TEXTURE_2D_ARRAY;\n\t\treturn _gl.TEXTURE_2D;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGB16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGB32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGB8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGB16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGB32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGBA16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGBA32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGBA8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGBA16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGBA32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\tproperties.remove( renderTarget.depthTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\tconst textureProperties = properties.get( renderTarget.depthTexture );\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! textureProperties.__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = textureProperties.__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t// if the bound depth texture has changed\n\t\tif ( renderTargetProperties.__boundDepthTexture !== renderTarget.depthTexture ) {\n\n\t\t\t// fire the dispose event to get rid of stored state associated with the previously bound depth buffer\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tif ( renderTargetProperties.__depthDisposeCallback ) {\n\n\t\t\t\trenderTargetProperties.__depthDisposeCallback();\n\n\t\t\t}\n\n\t\t\t// set up dispose listeners to track when the currently attached buffer is implicitly unbound\n\t\t\tif ( depthTexture ) {\n\n\t\t\t\tconst disposeEvent = () => {\n\n\t\t\t\t\tdelete renderTargetProperties.__boundDepthTexture;\n\t\t\t\t\tdelete renderTargetProperties.__depthDisposeCallback;\n\t\t\t\t\tdepthTexture.removeEventListener( 'dispose', disposeEvent );\n\n\t\t\t\t};\n\n\t\t\t\tdepthTexture.addEventListener( 'dispose', disposeEvent );\n\t\t\t\trenderTargetProperties.__depthDisposeCallback = disposeEvent;\n\n\t\t\t}\n\n\t\t\trenderTargetProperties.__boundDepthTexture = depthTexture;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer[ i ] === undefined ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer[ i ];\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer === undefined ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer;\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst targetType = getTargetType( renderTarget );\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( targetType, webglTexture );\n\t\t\t\tgenerateMipmap( targetType );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear !== renderState.depthNear ) || ( depthData.depthFar !== renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\t// Check that the browser implements the necessary APIs to use an\n\t\t\t\t// XRProjectionLayer rather than an XRWebGLLayer\n\t\t\t\tconst useLayers = typeof XRWebGLBinding !== 'undefined' && 'createProjectionLayer' in XRWebGLBinding.prototype;\n\n\t\t\t\tif ( ! useLayers ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t *\n\t\t * @param {ArrayCamera} camera - The camera to update.\n\t\t * @param {PerspectiveCamera} cameraL - The left camera.\n\t\t * @param {PerspectiveCamera} cameraR - The right camera.\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Check if the projection uses an infinite far plane.\n\t\t\tif ( projL[ 10 ] === - 1.0 ) {\n\n\t\t\t\t// Use the projection matrix from the left eye.\n\t\t\t\t// The camera offset is sufficient to include the view volumes\n\t\t\t\t// of both eyes (assuming symmetric projections).\n\t\t\t\tcamera.projectionMatrix.copy( cameraL.projectionMatrix );\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraL.projectionMatrixInverse );\n\n\t\t\t} else {\n\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tlet depthNear = camera.near;\n\t\t\tlet depthFar = camera.far;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tif ( depthSensing.depthNear > 0 ) depthNear = depthSensing.depthNear;\n\t\t\t\tif ( depthSensing.depthFar > 0 ) depthFar = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = depthNear;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = depthFar;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tcameraL.layers.mask = camera.layers.mask | 0b010;\n\t\t\tcameraR.layers.mask = camera.layers.mask | 0b100;\n\t\t\tcameraXR.layers.mask = cameraL.layers.mask | cameraR.layers.mask;\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\t\t\t\tconst gpuDepthSensingEnabled = enabledFeatures &&\n\t\t\t\t\tenabledFeatures.includes( 'depth-sensing' ) &&\n\t\t\t\t\tsession.depthUsage == 'gpu-optimized';\n\n\t\t\t\tif ( gpuDepthSensingEnabled && glBinding ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tconst chunkOffset = offset % chunkSize; // offset in the current chunk\n\t\t\t\t\tconst chunkPadding = chunkOffset % info.boundary; // required padding to match boundary\n\t\t\t\t\tconst chunkStart = chunkOffset + chunkPadding; // the start position in the current chunk for the data\n\n\t\t\t\t\toffset += chunkPadding;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkStart !== 0 && ( chunkSize - chunkStart ) < info.storage ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t\treverseDepthBuffer = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission render target scale\n\t\tthis.transmissionResolutionScale = 1.0;\n\n\t\t// camera matrices cache\n\n\t\tconst _currentProjectionMatrix = new Matrix4();\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl, extensions );\n\n\t\t\tif ( capabilities.reverseDepthBuffer && reverseDepthBuffer ) {\n\n\t\t\t\tstate.buffers.depth.setReversed( true );\n\n\t\t\t}\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) {\n\n\t\t\t\tbits |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t}\n\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tbackground.dispose();\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( ! ( object.isMesh || object.isPoints || object.isLine || object.isSprite ) ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null && _currentActiveMipmapLevel === 0 ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z * _this.transmissionResolutionScale, activeViewport.w * _this.transmissionResolutionScale );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tconst reverseDepthBuffer = state.buffers.depth.getReversed();\n\n\t\t\t\tif ( reverseDepthBuffer ) {\n\n\t\t\t\t\t_currentProjectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t\ttoNormalizedProjectionMatrix( _currentProjectionMatrix );\n\t\t\t\t\ttoReversedProjectionMatrix( _currentProjectionMatrix );\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', _currentProjectionMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tconst _scratchFrameBuffer = _gl.createFramebuffer();\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t} else if ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t// check if the depth texture is already bound to the frame buffer and that it's been initialized\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\t\t\tif ( renderTargetProperties.__boundDepthTexture !== depthTexture ) {\n\n\t\t\t\t\t\t// check if the depth texture is compatible\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdepthTexture !== null &&\n\t\t\t\t\t\t\tproperties.has( depthTexture ) &&\n\t\t\t\t\t\t\t( renderTarget.width !== depthTexture.image.width || renderTarget.height !== depthTexture.image.height )\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\tthrow new Error( 'WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Swap the depth buffer to the currently attached one\n\t\t\t\t\t\ttextures.setupDepthRenderbuffer( renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\t// Use a scratch frame buffer if rendering to a mip level to avoid depth buffers\n\t\t\t// being bound that are different sizes.\n\t\t\tif ( activeMipmapLevel !== 0 ) {\n\n\t\t\t\tframebuffer = _scratchFrameBuffer;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel, layer );\n\n\t\t\t} else if ( renderTarget !== null && activeMipmapLevel !== 0 ) {\n\n\t\t\t\t// Only bind the frame buffer if we are using a scratch frame buffer to render to a mipmap.\n\t\t\t\t// If we rebind the texture when using a multi sample buffer then an error about inconsistent samples will be thrown.\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t// set the active frame buffer to the one we want to read\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\n\t\t\t\t\t// reset the frame buffer to the currently set buffer before waiting\n\t\t\t\t\tconst currFramebuffer = _currentRenderTarget !== null ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, currFramebuffer );\n\n\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\n\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t// read the data and delete the buffer\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\treturn buffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tconst _srcFramebuffer = _gl.createFramebuffer();\n\t\tconst _dstFramebuffer = _gl.createFramebuffer();\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, srcLevel = 0, dstLevel = null ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tdstLevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\t// support the previous signature with just a single dst mipmap level\n\t\t\tif ( dstLevel === null ) {\n\n\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t// @deprecated, r171\n\t\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels.' );\n\t\t\t\t\tdstLevel = srcLevel;\n\t\t\t\t\tsrcLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdstLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// gather the necessary dimensions to copy\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ dstLevel ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.isBox3 ? srcRegion.max.z - srcRegion.min.z : 1;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.isBox3 ? srcRegion.min.z : 0;\n\n\t\t\t} else {\n\n\t\t\t\tconst levelScale = Math.pow( 2, - srcLevel );\n\t\t\t\twidth = Math.floor( image.width * levelScale );\n\t\t\t\theight = Math.floor( image.height * levelScale );\n\t\t\t\tif ( srcTexture.isDataArrayTexture ) {\n\n\t\t\t\t\tdepth = image.depth;\n\n\t\t\t\t} else if ( srcTexture.isData3DTexture ) {\n\n\t\t\t\t\tdepth = Math.floor( image.depth * levelScale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdepth = 1;\n\n\t\t\t\t}\n\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\t// Set up the destination target\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\t// used for copying data from cpu\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\t// set up the src texture\n\t\t\tconst isSrc3D = srcTexture.isDataArrayTexture || srcTexture.isData3DTexture;\n\t\t\tconst isDst3D = dstTexture.isDataArrayTexture || dstTexture.isData3DTexture;\n\t\t\tif ( srcTexture.isDepthTexture ) {\n\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\t\t\t\tconst srcRenderTargetProperties = properties.get( srcTextureProperties.__renderTarget );\n\t\t\t\tconst dstRenderTargetProperties = properties.get( dstTextureProperties.__renderTarget );\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, srcRenderTargetProperties.__webglFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, dstRenderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// if the source or destination are a 3d target then a layer needs to be bound\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( srcTexture ).__webglTexture, srcLevel, minZ + i );\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( dstTexture ).__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.DEPTH_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else if ( srcLevel !== 0 || srcTexture.isRenderTargetTexture || properties.has( srcTexture ) ) {\n\n\t\t\t\t// get the appropriate frame buffers\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\n\t\t\t\t// bind the frame buffer targets\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, _srcFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, _dstFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// assign the correct layers and mip maps to the frame buffers\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, srcTextureProperties.__webglTexture, srcLevel, minZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, srcTextureProperties.__webglTexture, srcLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, dstTextureProperties.__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, dstTextureProperties.__webglTexture, dstLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// copy the data using the fastest function that can achieve the copy\n\t\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.COLOR_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t\t} else if ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.copyTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ + i, minX, minY, width, height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.copyTexSubImage2D( glTarget, dstLevel, dstX, dstY, minX, minY, width, height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// unbind read, draw buffers\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t// copy data into the 3d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// copy data into the 2d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// reset values\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( dstLevel === 0 && dstTexture.generateMipmaps ) {\n\n\t\t\t\t_gl.generateMipmap( glTarget );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\t// @deprecated, r170\n\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use \"copyTextureToTexture\" instead.' );\n\n\t\t\treturn this.copyTextureToTexture( srcTexture, dstTexture, srcRegion, dstPosition, level );\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorspace = ColorManagement._getDrawingBufferColorSpace( colorSpace );\n\t\tgl.unpackColorSpace = ColorManagement._getUnpackColorSpace();\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, ArrayCamera, BackSide, BoxGeometry, BufferAttribute, BufferGeometry, ByteType, CineonToneMapping, ClampToEdgeWrapping, Color, ColorManagement, ConstantAlphaFactor, ConstantColorFactor, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeUVReflectionMapping, CullFaceBack, CullFaceFront, CullFaceNone, CustomBlending, CustomToneMapping, Data3DTexture, DataArrayTexture, DepthFormat, DepthStencilFormat, DepthTexture, DoubleSide, DstAlphaFactor, DstColorFactor, EqualCompare, EqualDepth, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, FloatType, FrontSide, Frustum, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, HalfFloatType, IntType, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, LuminanceAlphaFormat, LuminanceFormat, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NoBlending, NoColorSpace, NoToneMapping, NormalBlending, NotEqualCompare, NotEqualDepth, ObjectSpaceNormalMap, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, PerspectiveCamera, Plane, PlaneGeometry, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReverseSubtractEquation, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, ShaderChunk, ShaderLib, ShaderMaterial, ShortType, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, Texture, Uint16BufferAttribute, Uint32BufferAttribute, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebXRController, ZeroFactor, createCanvasElement };\n","import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","// Import Three.js and OrbitControls from node_modules\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\n\r\nconsole.log(\"app.js loaded\");\r\n\r\n// ===== Scene Setup =====\r\nconst scene = new THREE.Scene();\r\nscene.background = new THREE.Color(0x000000);\r\n\r\nconst camera = new THREE.PerspectiveCamera(\r\n  45,\r\n  window.innerWidth / window.innerHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(0, 30, 80);\r\n\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nconst controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true;\r\n\r\n// ===== Lighting =====\r\nconst ambientLight = new THREE.AmbientLight(0x404040, 2);\r\nscene.add(ambientLight);\r\n\r\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 2);\r\ndirectionalLight.position.set(50, 50, 50);\r\nscene.add(directionalLight);\r\n\r\n// ===== Raycaster & Mouse for Tooltip/Clicks =====\r\nconst raycaster = new THREE.Raycaster();\r\nconst mouse = new THREE.Vector2();\r\n\r\n// Create a tooltip element (for hover)\r\nconst tooltip = document.createElement(\"div\");\r\ntooltip.className = \"tooltip\";\r\ndocument.body.appendChild(tooltip);\r\n\r\n// ===== Helper: Create an Orbit Group =====\r\nfunction createPlanetOrbit(orbitRadius, planetMesh) {\r\n  const orbitGroup = new THREE.Object3D();\r\n  // Place the planet along the X-axis at the specified orbit radius.\r\n  planetMesh.position.set(orbitRadius, 0, 0);\r\n  orbitGroup.add(planetMesh);\r\n  scene.add(orbitGroup);\r\n  return orbitGroup;\r\n}\r\n\r\n// ===== The Sun =====\r\nconst sunGeometry = new THREE.SphereGeometry(4, 32, 32);\r\nconst sunMaterial = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\nconst sun = new THREE.Mesh(sunGeometry, sunMaterial);\r\nscene.add(sun);\r\n\r\n// ===== Planetary Data =====\r\nconst planetsData = [\r\n  {\r\n    name: \"Mercury\",\r\n    orbitRadius: 8,\r\n    planetRadius: 0.5,\r\n    color: 0xaaaaaa,\r\n    rotationSpeed: 0.02,\r\n    funFact: \"Mercury is the smallest planet and closest to the Sun.\"\r\n  },\r\n  {\r\n    name: \"Venus\",\r\n    orbitRadius: 11,\r\n    planetRadius: 0.7,\r\n    color: 0xeed5b7,\r\n    rotationSpeed: 0.015,\r\n    funFact: \"Venus has a thick atmosphere and is the hottest planet.\"\r\n  },\r\n  {\r\n    name: \"Earth\",\r\n    orbitRadius: 14,\r\n    planetRadius: 1,\r\n    color: null,\r\n    rotationSpeed: 0.01,\r\n    texture: \"https://threejs.org/examples/textures/land_ocean_ice_cloud_2048.jpg\",\r\n    funFact: \"Earth is our home and the only planet known to support life.\",\r\n    hasMoon: true\r\n  },\r\n  {\r\n    name: \"Mars\",\r\n    orbitRadius: 17,\r\n    planetRadius: 0.53,\r\n    color: 0xff4500,\r\n    rotationSpeed: 0.008,\r\n    funFact: \"Mars is known as the Red Planet, home to the tallest volcano.\"\r\n  },\r\n  {\r\n    name: \"Jupiter\",\r\n    orbitRadius: 22,\r\n    planetRadius: 2,\r\n    color: 0xffa500,\r\n    rotationSpeed: 0.005,\r\n    funFact: \"Jupiter is the largest planet and features the Great Red Spot.\"\r\n  },\r\n  {\r\n    name: \"Saturn\",\r\n    orbitRadius: 28,\r\n    planetRadius: 1.7,\r\n    color: 0xffd27f,\r\n    rotationSpeed: 0.003,\r\n    funFact: \"Saturn is famous for its spectacular rings.\",\r\n    hasRings: true\r\n  },\r\n  {\r\n    name: \"Uranus\",\r\n    orbitRadius: 34,\r\n    planetRadius: 1.2,\r\n    color: 0x66ccff,\r\n    rotationSpeed: 0.002,\r\n    funFact: \"Uranus rotates on its side, giving it extreme seasons.\"\r\n  },\r\n  {\r\n    name: \"Neptune\",\r\n    orbitRadius: 40,\r\n    planetRadius: 1.2,\r\n    color: 0x3366ff,\r\n    rotationSpeed: 0.001,\r\n    funFact: \"Neptune has supersonic winds and a deep blue color.\"\r\n  }\r\n];\r\n\r\nconst textureLoader = new THREE.TextureLoader();\r\nconst planetOrbits = [];      // For rotation animations\r\nconst hoverablePlanets = [];  // For raycasting (hover & click)\r\n\r\nplanetsData.forEach(planetData => {\r\n  // Create planet geometry and material.\r\n  const geometry = new THREE.SphereGeometry(planetData.planetRadius, 32, 32);\r\n  let material;\r\n  if (planetData.texture) {\r\n    const texture = textureLoader.load(planetData.texture);\r\n    material = new THREE.MeshStandardMaterial({ map: texture });\r\n  } else {\r\n    material = new THREE.MeshStandardMaterial({ color: planetData.color });\r\n  }\r\n  const planetMesh = new THREE.Mesh(geometry, material);\r\n  // Save tooltip data on the mesh.\r\n  planetMesh.userData = { name: planetData.name, funFact: planetData.funFact };\r\n  hoverablePlanets.push(planetMesh);\r\n  \r\n  // Create an orbit group for the planet.\r\n  const orbitGroup = createPlanetOrbit(planetData.orbitRadius, planetMesh);\r\n  planetOrbits.push({ group: orbitGroup, speed: planetData.rotationSpeed });\r\n  \r\n  // If the planet should have a moon (like Earth), add one.\r\n  if (planetData.hasMoon) {\r\n    const moonGeometry = new THREE.SphereGeometry(0.27, 32, 32);\r\n    const moonTexture = textureLoader.load(\"https://threejs.org/examples/textures/moon_1024.jpg\");\r\n    const moonMaterial = new THREE.MeshStandardMaterial({ map: moonTexture });\r\n    const moonMesh = new THREE.Mesh(moonGeometry, moonMaterial);\r\n    const moonOrbit = new THREE.Object3D();\r\n    moonMesh.position.set(2, 0, 0);\r\n    moonOrbit.add(moonMesh);\r\n    planetMesh.add(moonOrbit);\r\n    planetOrbits.push({ group: moonOrbit, speed: 0.05 });\r\n  }\r\n  \r\n  // If the planet should have rings (like Saturn), add them.\r\n  if (planetData.hasRings) {\r\n    const ringGeometry = new THREE.RingGeometry(\r\n      planetData.planetRadius * 1.2,\r\n      planetData.planetRadius * 1.8,\r\n      32\r\n    );\r\n    const ringMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0x8d6e63,\r\n      side: THREE.DoubleSide,\r\n      transparent: true,\r\n      opacity: 0.7\r\n    });\r\n    const ringMesh = new THREE.Mesh(ringGeometry, ringMaterial);\r\n    ringMesh.rotation.x = Math.PI / 2;\r\n    planetMesh.add(ringMesh);\r\n  }\r\n});\r\n\r\n// ===== Animation Control =====\r\nlet animationActive = true;\r\n\r\nwindow.addEventListener(\"mousedown\", () => {\r\n  animationActive = false;\r\n});\r\nwindow.addEventListener(\"mouseup\", () => {\r\n  animationActive = true;\r\n});\r\n\r\n// ===== Animation Loop =====\r\nconst clock = new THREE.Clock();\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  const delta = clock.getDelta();\r\n  \r\n  if (animationActive) {\r\n    planetOrbits.forEach(item => {\r\n      item.group.rotation.y += item.speed * delta * 60;\r\n    });\r\n  }\r\n  \r\n  controls.update();\r\n  renderer.render(scene, camera);\r\n}\r\nanimate();\r\n\r\n// ===== Responsive Resize =====\r\nwindow.addEventListener(\"resize\", () => {\r\n  camera.aspect = window.innerWidth / window.innerHeight;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n});\r\n\r\n// ===== Hover Tooltip =====\r\nwindow.addEventListener(\"mousemove\", onMouseMove, false);\r\nfunction onMouseMove(event) {\r\n  mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n  mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n  \r\n  raycaster.setFromCamera(mouse, camera);\r\n  const intersects = raycaster.intersectObjects(hoverablePlanets);\r\n  \r\n  if (intersects.length > 0) {\r\n    const intersected = intersects[0].object;\r\n    tooltip.style.display = \"block\";\r\n    tooltip.innerHTML = `<strong>${intersected.userData.name}</strong><br>${intersected.userData.funFact}`;\r\n    tooltip.style.left = event.clientX + 10 + \"px\";\r\n    tooltip.style.top = event.clientY + 10 + \"px\";\r\n  } else {\r\n    tooltip.style.display = \"none\";\r\n  }\r\n}\r\n\r\n// ===== Click Event for Mars GIF =====\r\nwindow.addEventListener(\"click\", onClick, false);\r\nfunction onClick(event) {\r\n  mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n  mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n  \r\n  raycaster.setFromCamera(mouse, camera);\r\n  const intersects = raycaster.intersectObjects(hoverablePlanets);\r\n  \r\n  if (intersects.length > 0) {\r\n    const intersected = intersects[0].object;\r\n    if (intersected.userData.name === \"Mars\") {\r\n      showGifOverlay();\r\n    }\r\n  }\r\n}\r\n\r\nfunction showGifOverlay() {\r\n  let gifOverlay = document.getElementById(\"gifOverlay\");\r\n  if (!gifOverlay) {\r\n    gifOverlay = document.createElement(\"div\");\r\n    gifOverlay.id = \"gifOverlay\";\r\n    gifOverlay.style.position = \"fixed\";\r\n    gifOverlay.style.top = \"50%\";\r\n    gifOverlay.style.left = \"50%\";\r\n    gifOverlay.style.transform = \"translate(-50%, -50%)\";\r\n    gifOverlay.style.zIndex = \"10000\";\r\n    gifOverlay.style.backgroundColor = \"rgba(0, 0, 0, 0.8)\";\r\n    gifOverlay.style.padding = \"10px\";\r\n    gifOverlay.style.borderRadius = \"8px\";\r\n    document.body.appendChild(gifOverlay);\r\n  }\r\n  gifOverlay.innerHTML = `<img src=\"https://media.giphy.com/media/oImOwaZ34b8K70aQ6B/giphy.gif\" style=\"max-width:100%; max-height:80vh;\" alt=\"Mars GIF\" />`;\r\n  gifOverlay.style.display = \"block\";\r\n  \r\n  // Hide the GIF overlay after 5 seconds.\r\n  setTimeout(() => {\r\n    gifOverlay.style.display = \"none\";\r\n  }, 5000);\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}